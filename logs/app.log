24/12/23 17:49:58.928 | INFO  | sale_service | 0 | Version.java: HV000001: Hibernate Validator 6.2.5.Final
24/12/23 17:49:58.965 | INFO  | sale_service | 0 | StartupInfoLogger.java: Starting SalesPageAdminServiceApplication using Java 11.0.20.1 on DESKTOP-NSE63D9 with PID 17828 (D:\salespage-service\target\classes started by Admin in D:\salespage-service)
24/12/23 17:49:58.968 | INFO  | sale_service | 0 | SpringApplication.java: No active profile set, falling back to 1 default profile: "default"
24/12/23 17:49:58.969 | DEBUG | sale_service | 0 | SpringApplication.java: Loading source class com.salespage.salespageservice.SalesPageAdminServiceApplication
24/12/23 17:49:59.009 | DEBUG | sale_service | 0 | AbstractApplicationContext.java: Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@54dcbb9f
24/12/23 17:49:59.588 | INFO  | sale_service | 0 | RepositoryConfigurationDelegate.java: Multiple Spring Data modules found, entering strict repository configuration mode
24/12/23 17:49:59.589 | INFO  | sale_service | 0 | RepositoryConfigurationDelegate.java: Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
24/12/23 17:49:59.735 | INFO  | sale_service | 0 | RepositoryConfigurationDelegate.java: Finished Spring Data repository scanning in 142 ms. Found 33 MongoDB repository interfaces.
24/12/23 17:49:59.981 | INFO  | sale_service | 0 | RepositoryConfigurationDelegate.java: Multiple Spring Data modules found, entering strict repository configuration mode
24/12/23 17:49:59.982 | INFO  | sale_service | 0 | RepositoryConfigurationDelegate.java: Bootstrapping Spring Data Redis repositories in DEFAULT mode.
24/12/23 17:49:59.988 | DEBUG | sale_service | 0 | AutoConfigurationPackages.java: @EnableAutoConfiguration was declared on a class in the package 'com.salespage.salespageservice'. Automatic @Repository and @Entity scanning is enabled.
24/12/23 17:50:00.003 | INFO  | sale_service | 0 | RepositoryConfigurationExtensionSupport.java: Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.salespage.salespageservice.domains.repositories.AccountRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
24/12/23 17:50:00.004 | INFO  | sale_service | 0 | RepositoryConfigurationExtensionSupport.java: Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.salespage.salespageservice.domains.repositories.BankAccountRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
24/12/23 17:50:00.004 | INFO  | sale_service | 0 | RepositoryConfigurationExtensionSupport.java: Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.salespage.salespageservice.domains.repositories.BankTransactionRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
24/12/23 17:50:00.004 | INFO  | sale_service | 0 | RepositoryConfigurationExtensionSupport.java: Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.salespage.salespageservice.domains.repositories.CartRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
24/12/23 17:50:00.005 | INFO  | sale_service | 0 | RepositoryConfigurationExtensionSupport.java: Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.salespage.salespageservice.domains.repositories.CheckInDailyRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
24/12/23 17:50:00.005 | INFO  | sale_service | 0 | RepositoryConfigurationExtensionSupport.java: Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.salespage.salespageservice.domains.repositories.CheckInDailyStatisticRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
24/12/23 17:50:00.006 | INFO  | sale_service | 0 | RepositoryConfigurationExtensionSupport.java: Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.salespage.salespageservice.domains.repositories.ConfigRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
24/12/23 17:50:00.006 | INFO  | sale_service | 0 | RepositoryConfigurationExtensionSupport.java: Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.salespage.salespageservice.domains.repositories.NotificationRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
24/12/23 17:50:00.006 | INFO  | sale_service | 0 | RepositoryConfigurationExtensionSupport.java: Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.salespage.salespageservice.domains.repositories.OtpRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
24/12/23 17:50:00.006 | INFO  | sale_service | 0 | RepositoryConfigurationExtensionSupport.java: Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.salespage.salespageservice.domains.repositories.PaymentTransactionRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
24/12/23 17:50:00.007 | INFO  | sale_service | 0 | RepositoryConfigurationExtensionSupport.java: Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.salespage.salespageservice.domains.repositories.ProductCategoryRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
24/12/23 17:50:00.007 | INFO  | sale_service | 0 | RepositoryConfigurationExtensionSupport.java: Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.salespage.salespageservice.domains.repositories.ProductComboDetailRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
24/12/23 17:50:00.007 | INFO  | sale_service | 0 | RepositoryConfigurationExtensionSupport.java: Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.salespage.salespageservice.domains.repositories.ProductComboRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
24/12/23 17:50:00.008 | INFO  | sale_service | 0 | RepositoryConfigurationExtensionSupport.java: Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.salespage.salespageservice.domains.repositories.ProductDetailRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
24/12/23 17:50:00.008 | INFO  | sale_service | 0 | RepositoryConfigurationExtensionSupport.java: Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.salespage.salespageservice.domains.repositories.ProductRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
24/12/23 17:50:00.010 | INFO  | sale_service | 0 | RepositoryConfigurationExtensionSupport.java: Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.salespage.salespageservice.domains.repositories.ProductStatisticRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
24/12/23 17:50:00.010 | INFO  | sale_service | 0 | RepositoryConfigurationExtensionSupport.java: Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.salespage.salespageservice.domains.repositories.ProductTransactionDetailRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
24/12/23 17:50:00.010 | INFO  | sale_service | 0 | RepositoryConfigurationExtensionSupport.java: Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.salespage.salespageservice.domains.repositories.ProductTransactionRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
24/12/23 17:50:00.011 | INFO  | sale_service | 0 | RepositoryConfigurationExtensionSupport.java: Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.salespage.salespageservice.domains.repositories.ProductTypeDetailRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
24/12/23 17:50:00.011 | INFO  | sale_service | 0 | RepositoryConfigurationExtensionSupport.java: Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.salespage.salespageservice.domains.repositories.ProductTypeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
24/12/23 17:50:00.011 | INFO  | sale_service | 0 | RepositoryConfigurationExtensionSupport.java: Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.salespage.salespageservice.domains.repositories.RatingRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
24/12/23 17:50:00.012 | INFO  | sale_service | 0 | RepositoryConfigurationExtensionSupport.java: Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.salespage.salespageservice.domains.repositories.SearchHistoryRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
24/12/23 17:50:00.012 | INFO  | sale_service | 0 | RepositoryConfigurationExtensionSupport.java: Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.salespage.salespageservice.domains.repositories.SellerStoreRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
24/12/23 17:50:00.012 | INFO  | sale_service | 0 | RepositoryConfigurationExtensionSupport.java: Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.salespage.salespageservice.domains.repositories.ShipperRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
24/12/23 17:50:00.012 | INFO  | sale_service | 0 | RepositoryConfigurationExtensionSupport.java: Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.salespage.salespageservice.domains.repositories.StatisticCheckpointRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
24/12/23 17:50:00.013 | INFO  | sale_service | 0 | RepositoryConfigurationExtensionSupport.java: Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.salespage.salespageservice.domains.repositories.SystemLogRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
24/12/23 17:50:00.013 | INFO  | sale_service | 0 | RepositoryConfigurationExtensionSupport.java: Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.salespage.salespageservice.domains.repositories.TpBankTransactionRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
24/12/23 17:50:00.014 | INFO  | sale_service | 0 | RepositoryConfigurationExtensionSupport.java: Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.salespage.salespageservice.domains.repositories.TransactionStatisticRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
24/12/23 17:50:00.014 | INFO  | sale_service | 0 | RepositoryConfigurationExtensionSupport.java: Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.salespage.salespageservice.domains.repositories.UserFavoriteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
24/12/23 17:50:00.015 | INFO  | sale_service | 0 | RepositoryConfigurationExtensionSupport.java: Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.salespage.salespageservice.domains.repositories.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
24/12/23 17:50:00.015 | INFO  | sale_service | 0 | RepositoryConfigurationExtensionSupport.java: Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.salespage.salespageservice.domains.repositories.VoucherCodeLimitRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
24/12/23 17:50:00.016 | INFO  | sale_service | 0 | RepositoryConfigurationExtensionSupport.java: Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.salespage.salespageservice.domains.repositories.VoucherCodeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
24/12/23 17:50:00.016 | INFO  | sale_service | 0 | RepositoryConfigurationExtensionSupport.java: Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.salespage.salespageservice.domains.repositories.VoucherStoreRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
24/12/23 17:50:00.017 | INFO  | sale_service | 0 | RepositoryConfigurationDelegate.java: Finished Spring Data repository scanning in 28 ms. Found 0 Redis repository interfaces.
24/12/23 17:50:00.415 | DEBUG | sale_service | 0 | PropertySourcesPropertyResolver.java: Found key 'PORT' in PropertySource 'systemEnvironment' with value of type String
24/12/23 17:50:00.436 | INFO  | sale_service | 0 | Log.java: Logging initialized @3121ms to org.eclipse.jetty.util.log.Slf4jLog
24/12/23 17:50:00.528 | DEBUG | sale_service | 0 | DocumentRoot.java: Code archive: C:\Users\Admin\.m2\repository\org\springframework\boot\spring-boot\2.7.5\spring-boot-2.7.5.jar
24/12/23 17:50:00.528 | DEBUG | sale_service | 0 | DocumentRoot.java: Code archive: C:\Users\Admin\.m2\repository\org\springframework\boot\spring-boot\2.7.5\spring-boot-2.7.5.jar
24/12/23 17:50:00.529 | DEBUG | sale_service | 0 | DocumentRoot.java: None of the document roots [src/main/webapp, public, static] point to a directory and will be ignored.
24/12/23 17:50:00.574 | INFO  | sale_service | 0 | JettyServletWebServerFactory.java: Server initialized with port: 8080
24/12/23 17:50:00.576 | INFO  | sale_service | 0 | Server.java: jetty-9.4.49.v20220914; built: 2022-09-14T01:07:36.601Z; git: 4231a3b2e4cb8548a412a789936d640a97b1aa0a; jvm 11.0.20.1+9-LTS
24/12/23 17:50:00.597 | INFO  | sale_service | 0 | ContextHandler.java: Initializing Spring embedded WebApplicationContext
24/12/23 17:50:00.598 | DEBUG | sale_service | 0 | ServletWebServerApplicationContext.java: Published root WebApplicationContext as ServletContext attribute with name [org.springframework.web.context.WebApplicationContext.ROOT]
24/12/23 17:50:00.598 | INFO  | sale_service | 0 | ServletWebServerApplicationContext.java: Root WebApplicationContext: initialization completed in 1589 ms
24/12/23 17:50:00.655 | DEBUG | sale_service | 0 | PropertySourcesPropertyResolver.java: Found key 'MONGODB_URI' in PropertySource 'systemEnvironment' with value of type String
24/12/23 17:50:00.853 | INFO  | sale_service | 0 | SLF4JLogger.java: MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 10", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./11.0.20.1+9-LTS"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=MongoCredential{mechanism=null, userName='lam', source='admin', password=<hidden>, mechanismProperties=<hidden>}, streamFactoryFactory=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@48c5698]}, clusterSettings={hosts=[127.0.0.1:27017], srvHost=db-salespage.h9186rq.mongodb.net, srvServiceName=mongodb, mode=MULTIPLE, requiredClusterType=REPLICA_SET, requiredReplicaSetName='atlas-qi6936-shard-0', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=true, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
24/12/23 17:50:00.953 | INFO  | sale_service | 0 | SLF4JLogger.java: Adding discovered server ac-jh96ukw-shard-00-02.h9186rq.mongodb.net:27017 to client view of cluster
24/12/23 17:50:00.971 | INFO  | sale_service | 0 | SLF4JLogger.java: Adding discovered server ac-jh96ukw-shard-00-00.h9186rq.mongodb.net:27017 to client view of cluster
24/12/23 17:50:00.972 | INFO  | sale_service | 0 | SLF4JLogger.java: Adding discovered server ac-jh96ukw-shard-00-01.h9186rq.mongodb.net:27017 to client view of cluster
24/12/23 17:50:01.555 | INFO  | sale_service | 0 | SLF4JLogger.java: Opened connection [connectionId{localValue:4, serverValue:83703}] to ac-jh96ukw-shard-00-02.h9186rq.mongodb.net:27017
24/12/23 17:50:01.555 | INFO  | sale_service | 0 | SLF4JLogger.java: Opened connection [connectionId{localValue:1, serverValue:85399}] to ac-jh96ukw-shard-00-00.h9186rq.mongodb.net:27017
24/12/23 17:50:01.555 | INFO  | sale_service | 0 | SLF4JLogger.java: Opened connection [connectionId{localValue:2, serverValue:85399}] to ac-jh96ukw-shard-00-00.h9186rq.mongodb.net:27017
24/12/23 17:50:01.555 | INFO  | sale_service | 0 | SLF4JLogger.java: Opened connection [connectionId{localValue:3, serverValue:80115}] to ac-jh96ukw-shard-00-01.h9186rq.mongodb.net:27017
24/12/23 17:50:01.555 | INFO  | sale_service | 0 | SLF4JLogger.java: Opened connection [connectionId{localValue:6, serverValue:80117}] to ac-jh96ukw-shard-00-01.h9186rq.mongodb.net:27017
24/12/23 17:50:01.555 | INFO  | sale_service | 0 | SLF4JLogger.java: Opened connection [connectionId{localValue:5, serverValue:83704}] to ac-jh96ukw-shard-00-02.h9186rq.mongodb.net:27017
24/12/23 17:50:01.556 | INFO  | sale_service | 0 | SLF4JLogger.java: Monitor thread successfully connected to server with description ServerDescription{address=ac-jh96ukw-shard-00-00.h9186rq.mongodb.net:27017, type=REPLICA_SET_SECONDARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=17, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=302582900, setName='atlas-qi6936-shard-0', canonicalAddress=ac-jh96ukw-shard-00-00.h9186rq.mongodb.net:27017, hosts=[ac-jh96ukw-shard-00-00.h9186rq.mongodb.net:27017, ac-jh96ukw-shard-00-02.h9186rq.mongodb.net:27017, ac-jh96ukw-shard-00-01.h9186rq.mongodb.net:27017], passives=[], arbiters=[], primary='ac-jh96ukw-shard-00-02.h9186rq.mongodb.net:27017', tagSet=TagSet{[Tag{name='availabilityZone', value='ape1-az1'}, Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_EAST_1'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=null, setVersion=2, topologyVersion=TopologyVersion{processId=6582f7924c860abade701558, counter=4}, lastWriteDate=Sun Dec 24 17:49:57 ICT 2023, lastUpdateTimeNanos=4237740510437600}
24/12/23 17:50:01.556 | INFO  | sale_service | 0 | SLF4JLogger.java: Monitor thread successfully connected to server with description ServerDescription{address=ac-jh96ukw-shard-00-01.h9186rq.mongodb.net:27017, type=REPLICA_SET_SECONDARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=17, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=306424400, setName='atlas-qi6936-shard-0', canonicalAddress=ac-jh96ukw-shard-00-01.h9186rq.mongodb.net:27017, hosts=[ac-jh96ukw-shard-00-00.h9186rq.mongodb.net:27017, ac-jh96ukw-shard-00-02.h9186rq.mongodb.net:27017, ac-jh96ukw-shard-00-01.h9186rq.mongodb.net:27017], passives=[], arbiters=[], primary='ac-jh96ukw-shard-00-02.h9186rq.mongodb.net:27017', tagSet=TagSet{[Tag{name='availabilityZone', value='ape1-az2'}, Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_EAST_1'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=null, setVersion=2, topologyVersion=TopologyVersion{processId=6582fad7d5d5e6c5ce32ea6d, counter=3}, lastWriteDate=Sun Dec 24 17:49:57 ICT 2023, lastUpdateTimeNanos=4237740510437499}
24/12/23 17:50:01.556 | INFO  | sale_service | 0 | SLF4JLogger.java: Monitor thread successfully connected to server with description ServerDescription{address=ac-jh96ukw-shard-00-02.h9186rq.mongodb.net:27017, type=REPLICA_SET_PRIMARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=17, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=302602800, setName='atlas-qi6936-shard-0', canonicalAddress=ac-jh96ukw-shard-00-02.h9186rq.mongodb.net:27017, hosts=[ac-jh96ukw-shard-00-00.h9186rq.mongodb.net:27017, ac-jh96ukw-shard-00-02.h9186rq.mongodb.net:27017, ac-jh96ukw-shard-00-01.h9186rq.mongodb.net:27017], passives=[], arbiters=[], primary='ac-jh96ukw-shard-00-02.h9186rq.mongodb.net:27017', tagSet=TagSet{[Tag{name='availabilityZone', value='ape1-az3'}, Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_EAST_1'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=7fffffff0000000000000067, setVersion=2, topologyVersion=TopologyVersion{processId=6582f9400e0a8643ac251956, counter=6}, lastWriteDate=Sun Dec 24 17:49:57 ICT 2023, lastUpdateTimeNanos=4237740510464900}
24/12/23 17:50:01.560 | INFO  | sale_service | 0 | SLF4JLogger.java: Setting max election id to 7fffffff0000000000000067 from replica set primary ac-jh96ukw-shard-00-02.h9186rq.mongodb.net:27017
24/12/23 17:50:01.560 | INFO  | sale_service | 0 | SLF4JLogger.java: Setting max set version to 2 from replica set primary ac-jh96ukw-shard-00-02.h9186rq.mongodb.net:27017
24/12/23 17:50:01.560 | INFO  | sale_service | 0 | SLF4JLogger.java: Discovered replica set primary ac-jh96ukw-shard-00-02.h9186rq.mongodb.net:27017
24/12/23 17:50:01.770 | INFO  | sale_service | 0 | Version.java: Redisson 3.19.1
24/12/23 17:50:02.328 | INFO  | sale_service | 0 | ConnectionPool.java: 1 connections initialized for tcp.appengine.bfcplatform.vn/103.69.194.5:13437
24/12/23 17:50:02.654 | INFO  | sale_service | 0 | ConnectionPool.java: 24 connections initialized for tcp.appengine.bfcplatform.vn/103.69.194.5:13437
24/12/23 17:50:02.769 | DEBUG | sale_service | 0 | PropertySourcesPropertyResolver.java: Found key 'KAFKA_BOOTSTRAP_SERVERS' in PropertySource 'systemEnvironment' with value of type String
24/12/23 17:50:02.775 | DEBUG | sale_service | 0 | PropertySourcesPropertyResolver.java: Found key 'KAFKA_USERNAME' in PropertySource 'systemEnvironment' with value of type String
24/12/23 17:50:02.775 | DEBUG | sale_service | 0 | PropertySourcesPropertyResolver.java: Found key 'KAFKA_PASSWORD' in PropertySource 'systemEnvironment' with value of type String
24/12/23 17:50:02.775 | DEBUG | sale_service | 0 | PropertySourcesPropertyResolver.java: Found key 'KAFKA_USERNAME' in PropertySource 'systemEnvironment' with value of type String
24/12/23 17:50:02.775 | DEBUG | sale_service | 0 | PropertySourcesPropertyResolver.java: Found key 'KAFKA_PASSWORD' in PropertySource 'systemEnvironment' with value of type String
24/12/23 17:50:03.042 | DEBUG | sale_service | 0 | ServletContextInitializerBeans.java: Mapping filters: springSecurityFilterChain urls=[/*] order=-100, filterRegistrationBean urls=[/*] order=2147483647, characterEncodingFilter urls=[/*] order=-2147483648, formContentFilter urls=[/*] order=-9900, requestContextFilter urls=[/*] order=-105, authTokenFilter urls=[/*] order=2147483647, authenticationJwtTokenFilter urls=[/*] order=2147483647
24/12/23 17:50:03.042 | DEBUG | sale_service | 0 | ServletContextInitializerBeans.java: Mapping servlets: dispatcherServlet urls=[/]
24/12/23 17:50:03.083 | INFO  | sale_service | 0 | DefaultSessionIdManager.java: DefaultSessionIdManager workerName=node0
24/12/23 17:50:03.083 | INFO  | sale_service | 0 | DefaultSessionIdManager.java: No SessionScavenger set, using defaults
24/12/23 17:50:03.084 | INFO  | sale_service | 0 | HouseKeeper.java: node0 Scavenging every 660000ms
24/12/23 17:50:03.090 | INFO  | sale_service | 0 | ContextHandler.java: Started o.s.b.w.e.j.JettyEmbeddedWebAppContext@11cdf948{application,/,[file:///C:/Users/Admin/AppData/Local/Temp/jetty-docbase.8080.2448759081310665132/, jar:file:/C:/Users/Admin/.m2/repository/org/webjars/swagger-ui/4.17.1/swagger-ui-4.17.1.jar!/META-INF/resources, jar:file:/C:/Users/Admin/.m2/repository/org/webjars/jquery/3.6.1/jquery-3.6.1.jar!/META-INF/resources],AVAILABLE}
24/12/23 17:50:03.090 | INFO  | sale_service | 0 | Server.java: Started @5776ms
24/12/23 17:50:03.113 | DEBUG | sale_service | 0 | SpringApplicationAdminMXBeanRegistrar.java: Application Admin MBean registered with name 'org.springframework.boot:type=Admin,name=SpringApplication'
24/12/23 17:50:03.157 | WARN  | sale_service | 0 | AbstractGoogleClient.java: Application name is not set. Call Builder#setApplicationName.
24/12/23 17:50:03.528 | DEBUG | sale_service | 0 | SimpleUrlHandlerMapping.java: Patterns [/ws/**] in 'stompWebSocketHandlerMapping'
24/12/23 17:50:03.574 | DEBUG | sale_service | 0 | AbstractMethodMessageHandler.java: 
	c.s.s.a.c.AccountController:
	
24/12/23 17:50:03.574 | DEBUG | sale_service | 0 | AbstractMethodMessageHandler.java: 
	c.s.s.a.c.A.AdminShipperController:
	
24/12/23 17:50:03.574 | DEBUG | sale_service | 0 | AbstractMethodMessageHandler.java: 
	c.s.s.a.c.A.ConfigController:
	
24/12/23 17:50:03.575 | DEBUG | sale_service | 0 | AbstractMethodMessageHandler.java: 
	c.s.s.a.c.A.OtpController:
	
24/12/23 17:50:03.575 | DEBUG | sale_service | 0 | AbstractMethodMessageHandler.java: 
	c.s.s.a.c.A.ProductTypeController:
	
24/12/23 17:50:03.575 | DEBUG | sale_service | 0 | AbstractMethodMessageHandler.java: 
	c.s.s.a.c.BankController:
	
24/12/23 17:50:03.575 | DEBUG | sale_service | 0 | AbstractMethodMessageHandler.java: 
	c.s.s.a.c.CartController:
	
24/12/23 17:50:03.576 | DEBUG | sale_service | 0 | AbstractMethodMessageHandler.java: 
	c.s.s.a.c.FavoriteProductController:
	
24/12/23 17:50:03.576 | DEBUG | sale_service | 0 | AbstractMethodMessageHandler.java: 
	c.s.s.a.c.HeathCheckController:
	
24/12/23 17:50:03.576 | DEBUG | sale_service | 0 | AbstractMethodMessageHandler.java: 
	c.s.s.a.c.NotificationController:
	
24/12/23 17:50:03.576 | DEBUG | sale_service | 0 | AbstractMethodMessageHandler.java: 
	c.s.s.a.c.PaymentController:
	
24/12/23 17:50:03.576 | DEBUG | sale_service | 0 | AbstractMethodMessageHandler.java: 
	c.s.s.a.c.PrivateProductController:
	
24/12/23 17:50:03.576 | DEBUG | sale_service | 0 | AbstractMethodMessageHandler.java: 
	c.s.s.a.c.ProductTransactionController:
	
24/12/23 17:50:03.577 | DEBUG | sale_service | 0 | AbstractMethodMessageHandler.java: 
	c.s.s.a.c.RatingController:
	
24/12/23 17:50:03.577 | DEBUG | sale_service | 0 | AbstractMethodMessageHandler.java: 
	c.s.s.a.c.S.SellerProductCategoryController:
	
24/12/23 17:50:03.577 | DEBUG | sale_service | 0 | AbstractMethodMessageHandler.java: 
	c.s.s.a.c.S.SellerProductComboController:
	
24/12/23 17:50:03.577 | DEBUG | sale_service | 0 | AbstractMethodMessageHandler.java: 
	c.s.s.a.c.S.SellerProductController:
	
24/12/23 17:50:03.577 | DEBUG | sale_service | 0 | AbstractMethodMessageHandler.java: 
	c.s.s.a.c.S.SellerProductDetail:
	
24/12/23 17:50:03.578 | DEBUG | sale_service | 0 | AbstractMethodMessageHandler.java: 
	c.s.s.a.c.S.SellerProductTransactionController:
	
24/12/23 17:50:03.578 | DEBUG | sale_service | 0 | AbstractMethodMessageHandler.java: 
	c.s.s.a.c.S.SellerStatisticController:
	
24/12/23 17:50:03.578 | DEBUG | sale_service | 0 | AbstractMethodMessageHandler.java: 
	c.s.s.a.c.S.SellerStoreController:
	
24/12/23 17:50:03.578 | DEBUG | sale_service | 0 | AbstractMethodMessageHandler.java: 
	c.s.s.a.c.S.SellerVoucherController:
	
24/12/23 17:50:03.578 | DEBUG | sale_service | 0 | AbstractMethodMessageHandler.java: 
	c.s.s.a.c.ShipperController:
	
24/12/23 17:50:03.579 | DEBUG | sale_service | 0 | AbstractMethodMessageHandler.java: 
	c.s.s.a.c.StoreController:
	
24/12/23 17:50:03.579 | DEBUG | sale_service | 0 | AbstractMethodMessageHandler.java: 
	c.s.s.a.c.UserController:
	
24/12/23 17:50:03.579 | DEBUG | sale_service | 0 | AbstractMethodMessageHandler.java: 
	c.s.s.a.c.VoucherController:
	
24/12/23 17:50:03.579 | DEBUG | sale_service | 0 | AbstractMethodMessageHandler.java: 
	c.s.s.a.c.p.PublicMapController:
	
24/12/23 17:50:03.579 | DEBUG | sale_service | 0 | AbstractMethodMessageHandler.java: 
	c.s.s.a.c.p.PublicProductController:
	
24/12/23 17:50:03.579 | DEBUG | sale_service | 0 | AbstractMethodMessageHandler.java: 
	c.s.s.a.c.p.PublicRatingController:
	
24/12/23 17:50:03.580 | DEBUG | sale_service | 0 | AbstractMethodMessageHandler.java: 
	c.s.s.a.c.p.PublicSellerStoreController:
	
24/12/23 17:50:03.580 | DEBUG | sale_service | 0 | AbstractMethodMessageHandler.java: 
	c.s.s.a.c.p.PublicUserController:
	
24/12/23 17:50:03.580 | DEBUG | sale_service | 0 | AbstractMethodMessageHandler.java: 
	c.s.s.a.c.p.PublicVoucherController:
	
24/12/23 17:50:03.580 | DEBUG | sale_service | 0 | AbstractMethodMessageHandler.java: 
	c.s.s.a.s.BankPaymentScheduleController:
	
24/12/23 17:50:03.580 | DEBUG | sale_service | 0 | AbstractMethodMessageHandler.java: 
	c.s.s.a.s.PaymentTransactionSchedule:
	
24/12/23 17:50:03.580 | DEBUG | sale_service | 0 | AbstractMethodMessageHandler.java: 
	c.s.s.a.s.StatisticScheduleController:
	
24/12/23 17:50:03.583 | DEBUG | sale_service | 0 | AbstractMethodMessageHandler.java: 
	c.s.s.a.s.NotificationSocket:
	{[MESSAGE],[/secured/room]}: sendSpecific(Message,Principal,String)
24/12/23 17:50:03.586 | DEBUG | sale_service | 0 | AbstractMethodMessageHandler.java: 
	o.s.b.a.w.s.e.BasicErrorController:
	
24/12/23 17:50:03.591 | DEBUG | sale_service | 0 | AbstractMethodMessageHandler.java: 
	o.s.w.a.OpenApiWebMvcResource:
	
24/12/23 17:50:03.592 | DEBUG | sale_service | 0 | AbstractMethodMessageHandler.java: 
	o.s.w.u.SwaggerWelcomeWebMvc:
	
24/12/23 17:50:03.592 | DEBUG | sale_service | 0 | AbstractMethodMessageHandler.java: 
	o.s.w.u.SwaggerConfigResource:
	
24/12/23 17:50:03.792 | DEBUG | sale_service | 0 | AbstractHandlerMethodMapping.java: 126 mappings in 'requestMappingHandlerMapping'
24/12/23 17:50:04.277 | DEBUG | sale_service | 0 | SimpleUrlHandlerMapping.java: Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
24/12/23 17:50:04.293 | INFO  | sale_service | 0 | DefaultSecurityFilterChain.java: Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@3ba8fbc8, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@113a89c5, org.springframework.security.web.context.SecurityContextPersistenceFilter@24ae2183, org.springframework.security.web.header.HeaderWriterFilter@39dee5fd, org.springframework.web.filter.CorsFilter@55da6bf, org.springframework.security.web.authentication.logout.LogoutFilter@7a91027c, com.salespage.salespageservice.domains.security.jwt.AuthTokenFilter@5e0bba2f, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@c0cb9c2, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4f0f56f5, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3a0f5141, org.springframework.security.web.session.SessionManagementFilter@dffcf1, org.springframework.security.web.access.ExceptionTranslationFilter@5b312863, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@2bef33e7]
24/12/23 17:50:04.339 | DEBUG | sale_service | 0 | RequestMappingHandlerAdapter.java: ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
24/12/23 17:50:04.371 | DEBUG | sale_service | 0 | ExceptionHandlerExceptionResolver.java: ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
24/12/23 17:50:04.675 | INFO  | sale_service | 0 | AbstractConfig.java: ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = earliest
	bootstrap.servers = [cluster001.kas.bfcplatform.vn:9094]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-bizfly-7-453-PaymentTransaction-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = bizfly-7-453-PaymentTransaction
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = [hidden]
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = SCRAM-SHA-512
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = SASL_PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

24/12/23 17:50:04.736 | INFO  | sale_service | 0 | AbstractLogin.java: Successfully logged in.
24/12/23 17:50:04.777 | INFO  | sale_service | 0 | AppInfoParser.java: Kafka version: 3.1.2
24/12/23 17:50:04.777 | INFO  | sale_service | 0 | AppInfoParser.java: Kafka commitId: f8c67dc3ae0a3265
24/12/23 17:50:04.777 | INFO  | sale_service | 0 | AppInfoParser.java: Kafka startTimeMs: 1703415004776
24/12/23 17:50:04.779 | INFO  | sale_service | 0 | KafkaConsumer.java: [Consumer clientId=consumer-bizfly-7-453-PaymentTransaction-1, groupId=bizfly-7-453-PaymentTransaction] Subscribed to topic(s): bizfly-7-453-PaymentTransaction
24/12/23 17:50:04.785 | INFO  | sale_service | 0 | AbstractConfig.java: ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = earliest
	bootstrap.servers = [cluster001.kas.bfcplatform.vn:9094]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-bizfly-7-453-PaymentTransaction-2
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = bizfly-7-453-PaymentTransaction
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = [hidden]
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = SCRAM-SHA-512
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = SASL_PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

24/12/23 17:50:04.791 | INFO  | sale_service | 0 | AppInfoParser.java: Kafka version: 3.1.2
24/12/23 17:50:04.791 | INFO  | sale_service | 0 | AppInfoParser.java: Kafka commitId: f8c67dc3ae0a3265
24/12/23 17:50:04.791 | INFO  | sale_service | 0 | AppInfoParser.java: Kafka startTimeMs: 1703415004791
24/12/23 17:50:04.791 | INFO  | sale_service | 0 | KafkaConsumer.java: [Consumer clientId=consumer-bizfly-7-453-PaymentTransaction-2, groupId=bizfly-7-453-PaymentTransaction] Subscribed to topic(s): bizfly-7-453-LikeTopic
24/12/23 17:50:04.793 | INFO  | sale_service | 0 | AbstractConfig.java: ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = earliest
	bootstrap.servers = [cluster001.kas.bfcplatform.vn:9094]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-bizfly-7-453-PaymentTransaction-3
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = bizfly-7-453-PaymentTransaction
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = [hidden]
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = SCRAM-SHA-512
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = SASL_PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

24/12/23 17:50:04.800 | INFO  | sale_service | 0 | AppInfoParser.java: Kafka version: 3.1.2
24/12/23 17:50:04.800 | INFO  | sale_service | 0 | AppInfoParser.java: Kafka commitId: f8c67dc3ae0a3265
24/12/23 17:50:04.800 | INFO  | sale_service | 0 | AppInfoParser.java: Kafka startTimeMs: 1703415004800
24/12/23 17:50:04.801 | INFO  | sale_service | 0 | KafkaConsumer.java: [Consumer clientId=consumer-bizfly-7-453-PaymentTransaction-3, groupId=bizfly-7-453-PaymentTransaction] Subscribed to topic(s): bizfly-7-453-CheckInTopic
24/12/23 17:50:04.804 | DEBUG | sale_service | 0 | GenericFilterBean.java: Filter 'characterEncodingFilter' configured for use
24/12/23 17:50:04.804 | DEBUG | sale_service | 0 | GenericFilterBean.java: Filter 'formContentFilter' configured for use
24/12/23 17:50:04.804 | DEBUG | sale_service | 0 | GenericFilterBean.java: Filter 'requestContextFilter' configured for use
24/12/23 17:50:04.804 | DEBUG | sale_service | 0 | GenericFilterBean.java: Filter 'springSecurityFilterChain' configured for use
24/12/23 17:50:04.807 | INFO  | sale_service | 0 | ContextHandler.java: Initializing Spring DispatcherServlet 'dispatcherServlet'
24/12/23 17:50:04.807 | INFO  | sale_service | 0 | FrameworkServlet.java: Initializing Servlet 'dispatcherServlet'
24/12/23 17:50:04.807 | DEBUG | sale_service | 0 | DispatcherServlet.java: Detected StandardServletMultipartResolver
24/12/23 17:50:04.807 | DEBUG | sale_service | 0 | DispatcherServlet.java: Detected AcceptHeaderLocaleResolver
24/12/23 17:50:04.807 | DEBUG | sale_service | 0 | DispatcherServlet.java: Detected FixedThemeResolver
24/12/23 17:50:04.808 | DEBUG | sale_service | 0 | DispatcherServlet.java: Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@145ce025
24/12/23 17:50:04.809 | DEBUG | sale_service | 0 | DispatcherServlet.java: Detected org.springframework.web.servlet.support.SessionFlashMapManager@3431cb1f
24/12/23 17:50:04.809 | DEBUG | sale_service | 0 | FrameworkServlet.java: enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
24/12/23 17:50:04.809 | INFO  | sale_service | 0 | FrameworkServlet.java: Completed initialization in 2 ms
24/12/23 17:50:04.817 | INFO  | sale_service | 0 | AbstractConnector.java: Started ServerConnector@2c8b8de0{HTTP/1.1, (http/1.1)}{0.0.0.0:8080}
24/12/23 17:50:04.818 | INFO  | sale_service | 0 | JettyWebServer.java: Jetty started on port(s) 8080 (http/1.1) with context path '/'
24/12/23 17:50:04.819 | DEBUG | sale_service | 0 | CompositeLog.java: clientOutboundChannel added SubProtocolWebSocketHandler[StompSubProtocolHandler[v10.stomp, v11.stomp, v12.stomp]]
24/12/23 17:50:04.822 | DEBUG | sale_service | 0 | CompositeLog.java: clientInboundChannel added WebSocketAnnotationMethodMessageHandler[prefixes=[/app/]]
24/12/23 17:50:04.822 | INFO  | sale_service | 0 | CompositeLog.java: Starting...
24/12/23 17:50:04.822 | DEBUG | sale_service | 0 | CompositeLog.java: clientInboundChannel added SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]
24/12/23 17:50:04.822 | DEBUG | sale_service | 0 | CompositeLog.java: brokerChannel added SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]
24/12/23 17:50:04.822 | INFO  | sale_service | 0 | CompositeLog.java: BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
24/12/23 17:50:04.823 | INFO  | sale_service | 0 | CompositeLog.java: Started.
24/12/23 17:50:04.823 | DEBUG | sale_service | 0 | CompositeLog.java: clientInboundChannel added UserDestinationMessageHandler[DefaultUserDestinationResolver[prefix=/user/]]
24/12/23 17:50:04.823 | DEBUG | sale_service | 0 | CompositeLog.java: brokerChannel added UserDestinationMessageHandler[DefaultUserDestinationResolver[prefix=/user/]]
24/12/23 17:50:04.833 | DEBUG | sale_service | 0 | ConditionEvaluationReportLoggingListener.java: 


============================
CONDITIONS EVALUATION REPORT
============================


Positive matches:
-----------------

   AopAutoConfiguration matched:
      - @ConditionalOnProperty (spring.aop.auto=true) matched (OnPropertyCondition)

   AopAutoConfiguration.ClassProxyingConfiguration matched:
      - @ConditionalOnMissingClass did not find unwanted class 'org.aspectj.weaver.Advice' (OnClassCondition)
      - @ConditionalOnProperty (spring.aop.proxy-target-class=true) matched (OnPropertyCondition)

   DispatcherServletAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   DispatcherServletAutoConfiguration.DispatcherServletConfiguration matched:
      - @ConditionalOnClass found required class 'javax.servlet.ServletRegistration' (OnClassCondition)
      - Default DispatcherServlet did not find dispatcher servlet beans (DispatcherServletAutoConfiguration.DefaultDispatcherServletCondition)

   DispatcherServletAutoConfiguration.DispatcherServletRegistrationConfiguration matched:
      - @ConditionalOnClass found required class 'javax.servlet.ServletRegistration' (OnClassCondition)
      - DispatcherServlet Registration did not find servlet registration bean (DispatcherServletAutoConfiguration.DispatcherServletRegistrationCondition)

   DispatcherServletAutoConfiguration.DispatcherServletRegistrationConfiguration#dispatcherServletRegistration matched:
      - @ConditionalOnBean (names: dispatcherServlet types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet' (OnBeanCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration matched:
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.JettyWebServerFactoryCustomizerConfiguration matched:
      - @ConditionalOnClass found required classes 'org.eclipse.jetty.server.Server', 'org.eclipse.jetty.util.Loader', 'org.eclipse.jetty.webapp.WebAppContext' (OnClassCondition)

   ErrorMvcAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   ErrorMvcAutoConfiguration#basicErrorController matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.error.ErrorController; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration#errorAttributes matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.error.ErrorAttributes; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.DefaultErrorViewResolverConfiguration#conventionErrorViewResolver matched:
      - @ConditionalOnBean (types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.servlet.error.ErrorViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration matched:
      - @ConditionalOnProperty (server.error.whitelabel.enabled) matched (OnPropertyCondition)
      - ErrorTemplate Missing did not find error template view (ErrorMvcAutoConfiguration.ErrorTemplateMissingCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration#beanNameViewResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.BeanNameViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration#defaultErrorView matched:
      - @ConditionalOnMissingBean (names: error; SearchStrategy: all) did not find any beans (OnBeanCondition)

   GenericCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.GenericCacheConfiguration automatic cache type (CacheCondition)

   HttpEncodingAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.filter.CharacterEncodingFilter' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (server.servlet.encoding.enabled) matched (OnPropertyCondition)

   HttpEncodingAutoConfiguration#characterEncodingFilter matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.filter.CharacterEncodingFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpMessageConvertersAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.HttpMessageConverter' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on HttpMessageConvertersAutoConfiguration.NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (HttpMessageConvertersAutoConfiguration.NotReactiveWebApplicationCondition)

   HttpMessageConvertersAutoConfiguration#messageConverters matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.http.HttpMessageConverters; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpMessageConvertersAutoConfiguration.StringHttpMessageConverterConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.StringHttpMessageConverter' (OnClassCondition)

   HttpMessageConvertersAutoConfiguration.StringHttpMessageConverterConfiguration#stringHttpMessageConverter matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.StringHttpMessageConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HypermediaAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.hateoas.EntityModel', 'org.springframework.web.bind.annotation.RequestMapping', 'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter', 'org.springframework.plugin.core.Plugin' (OnClassCondition)
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)

   HypermediaAutoConfiguration#applicationJsonHalConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)
      - @ConditionalOnProperty (spring.hateoas.use-hal-as-default-json-media-type) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.hateoas.mediatype.hal.HalConfiguration; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HypermediaAutoConfiguration.HypermediaConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)
      - @ConditionalOnMissingBean (types: org.springframework.hateoas.client.LinkDiscoverers; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JCacheCacheConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.cache.Caching', 'org.springframework.cache.jcache.JCacheCacheManager' (OnClassCondition)
      - Cache org.springframework.boot.autoconfigure.cache.JCacheCacheConfiguration automatic cache type (CacheCondition)

   JacksonAutoConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)

   JacksonAutoConfiguration.Jackson2ObjectMapperBuilderCustomizerConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperBuilderConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperBuilderConfiguration#jacksonObjectMapperBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.json.Jackson2ObjectMapperBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration.JacksonObjectMapperConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperConfiguration#jacksonObjectMapper matched:
      - @ConditionalOnMissingBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration.ParameterNamesModuleConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.module.paramnames.ParameterNamesModule' (OnClassCondition)

   JacksonAutoConfiguration.ParameterNamesModuleConfiguration#parameterNamesModule matched:
      - @ConditionalOnMissingBean (types: com.fasterxml.jackson.module.paramnames.ParameterNamesModule; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2HttpMessageConverterConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)
      - @ConditionalOnProperty (spring.mvc.converters.preferred-json-mapper=jackson) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) found bean 'jacksonObjectMapper' (OnBeanCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2HttpMessageConverterConfiguration#mappingJackson2HttpMessageConverter matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.json.MappingJackson2HttpMessageConverter ignored: org.springframework.hateoas.server.mvc.TypeConstrainedMappingJackson2HttpMessageConverter,org.springframework.data.rest.webmvc.alps.AlpsJsonHttpMessageConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2XmlHttpMessageConverterConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.dataformat.xml.XmlMapper' (OnClassCondition)
      - @ConditionalOnBean (types: org.springframework.http.converter.json.Jackson2ObjectMapperBuilder; SearchStrategy: all) found bean 'jacksonObjectMapperBuilder' (OnBeanCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2XmlHttpMessageConverterConfiguration#mappingJackson2XmlHttpMessageConverter matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.xml.MappingJackson2XmlHttpMessageConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JmxAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.jmx.export.MBeanExporter' (OnClassCondition)
      - @ConditionalOnProperty (spring.jmx.enabled=true) matched (OnPropertyCondition)

   JmxAutoConfiguration#mbeanExporter matched:
      - @ConditionalOnMissingBean (types: org.springframework.jmx.export.MBeanExporter; SearchStrategy: current) did not find any beans (OnBeanCondition)

   JmxAutoConfiguration#mbeanServer matched:
      - @ConditionalOnMissingBean (types: javax.management.MBeanServer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JmxAutoConfiguration#objectNamingStrategy matched:
      - @ConditionalOnMissingBean (types: org.springframework.jmx.export.naming.ObjectNamingStrategy; SearchStrategy: current) did not find any beans (OnBeanCondition)

   KafkaAnnotationDrivenConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.kafka.annotation.EnableKafka' (OnClassCondition)

   KafkaAnnotationDrivenConfiguration#kafkaListenerContainerFactory matched:
      - @ConditionalOnMissingBean (names: kafkaListenerContainerFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   KafkaAnnotationDrivenConfiguration#kafkaListenerContainerFactoryConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.kafka.ConcurrentKafkaListenerContainerFactoryConfigurer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   KafkaAnnotationDrivenConfiguration.EnableKafkaConfiguration matched:
      - @ConditionalOnMissingBean (names: org.springframework.kafka.config.internalKafkaListenerAnnotationProcessor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   KafkaAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.kafka.core.KafkaTemplate' (OnClassCondition)

   KafkaAutoConfiguration#kafkaAdmin matched:
      - @ConditionalOnMissingBean (types: org.springframework.kafka.core.KafkaAdmin; SearchStrategy: all) did not find any beans (OnBeanCondition)

   KafkaAutoConfiguration#kafkaConsumerFactory matched:
      - @ConditionalOnMissingBean (types: org.springframework.kafka.core.ConsumerFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   KafkaAutoConfiguration#kafkaProducerFactory matched:
      - @ConditionalOnMissingBean (types: org.springframework.kafka.core.ProducerFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   KafkaAutoConfiguration#kafkaProducerListener matched:
      - @ConditionalOnMissingBean (types: org.springframework.kafka.support.ProducerListener; SearchStrategy: all) did not find any beans (OnBeanCondition)

   KafkaAutoConfiguration#kafkaTemplate matched:
      - @ConditionalOnMissingBean (types: org.springframework.kafka.core.KafkaTemplate; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LifecycleAutoConfiguration#defaultLifecycleProcessor matched:
      - @ConditionalOnMissingBean (names: lifecycleProcessor; SearchStrategy: current) did not find any beans (OnBeanCondition)

   MongoAutoConfiguration matched:
      - @ConditionalOnClass found required class 'com.mongodb.client.MongoClient' (OnClassCondition)
      - @ConditionalOnMissingBean (types: org.springframework.data.mongodb.MongoDatabaseFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MongoAutoConfiguration#mongo matched:
      - @ConditionalOnMissingBean (types: com.mongodb.client.MongoClient; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MongoAutoConfiguration.MongoClientSettingsConfiguration matched:
      - @ConditionalOnMissingBean (types: com.mongodb.MongoClientSettings; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MongoDataAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'com.mongodb.client.MongoClient', 'org.springframework.data.mongodb.core.MongoTemplate' (OnClassCondition)

   MongoDataConfiguration#mongoCustomConversions matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.mongodb.core.convert.MongoCustomConversions; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MongoDataConfiguration#mongoMappingContext matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.mongodb.core.mapping.MongoMappingContext; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MongoDatabaseFactoryConfiguration matched:
      - @ConditionalOnSingleCandidate (types: com.mongodb.client.MongoClient; SearchStrategy: all) found a single bean 'mongo'; @ConditionalOnMissingBean (types: org.springframework.data.mongodb.MongoDatabaseFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MongoDatabaseFactoryDependentConfiguration matched:
      - @ConditionalOnBean (types: org.springframework.data.mongodb.MongoDatabaseFactory; SearchStrategy: all) found bean 'mongoDatabaseFactory' (OnBeanCondition)

   MongoDatabaseFactoryDependentConfiguration#gridFsTemplate matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.mongodb.gridfs.GridFsOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MongoDatabaseFactoryDependentConfiguration#mappingMongoConverter matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.mongodb.core.convert.MongoConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MongoDatabaseFactoryDependentConfiguration#mongoTemplate matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.mongodb.core.MongoOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MultipartAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.springframework.web.multipart.support.StandardServletMultipartResolver', 'javax.servlet.MultipartConfigElement' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (spring.servlet.multipart.enabled) matched (OnPropertyCondition)

   MultipartAutoConfiguration#multipartConfigElement matched:
      - @ConditionalOnMissingBean (types: javax.servlet.MultipartConfigElement,org.springframework.web.multipart.commons.CommonsMultipartResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MultipartAutoConfiguration#multipartResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.multipart.MultipartResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   NettyAutoConfiguration matched:
      - @ConditionalOnClass found required class 'io.netty.util.NettyRuntime' (OnClassCondition)

   NoOpCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.NoOpCacheConfiguration automatic cache type (CacheCondition)

   PersistenceExceptionTranslationAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor' (OnClassCondition)

   PersistenceExceptionTranslationAutoConfiguration#persistenceExceptionTranslationPostProcessor matched:
      - @ConditionalOnProperty (spring.dao.exceptiontranslation.enabled) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   PropertyPlaceholderAutoConfiguration#propertySourcesPlaceholderConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springframework.context.support.PropertySourcesPlaceholderConfigurer; SearchStrategy: current) did not find any beans (OnBeanCondition)

   RedisCacheConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.data.redis.connection.RedisConnectionFactory' (OnClassCondition)
      - Cache org.springframework.boot.autoconfigure.cache.RedisCacheConfiguration automatic cache type (CacheCondition)

   RedisReactiveAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.data.redis.connection.ReactiveRedisConnectionFactory', 'org.springframework.data.redis.core.ReactiveRedisTemplate', 'reactor.core.publisher.Flux' (OnClassCondition)

   RedisReactiveAutoConfiguration#reactiveRedisTemplate matched:
      - @ConditionalOnBean (types: org.springframework.data.redis.connection.ReactiveRedisConnectionFactory; SearchStrategy: all) found bean 'redissonConnectionFactory'; @ConditionalOnMissingBean (names: reactiveRedisTemplate; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RedisReactiveAutoConfiguration#reactiveStringRedisTemplate matched:
      - @ConditionalOnBean (types: org.springframework.data.redis.connection.ReactiveRedisConnectionFactory; SearchStrategy: all) found bean 'redissonConnectionFactory'; @ConditionalOnMissingBean (names: reactiveStringRedisTemplate; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RedisRepositoriesAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.data.redis.repository.configuration.EnableRedisRepositories' (OnClassCondition)
      - @ConditionalOnProperty (spring.data.redis.repositories.enabled=true) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: org.springframework.data.redis.connection.RedisConnectionFactory; SearchStrategy: all) found bean 'redissonConnectionFactory'; @ConditionalOnMissingBean (types: org.springframework.data.redis.repository.support.RedisRepositoryFactoryBean; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestTemplateAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.client.RestTemplate' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on RestTemplateAutoConfiguration.NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (RestTemplateAutoConfiguration.NotReactiveWebApplicationCondition)

   RestTemplateAutoConfiguration#restTemplateBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.client.RestTemplateBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestTemplateAutoConfiguration#restTemplateBuilderConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.client.RestTemplateBuilderConfigurer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SecurityAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.security.authentication.DefaultAuthenticationEventPublisher' (OnClassCondition)

   SecurityAutoConfiguration#authenticationEventPublisher matched:
      - @ConditionalOnMissingBean (types: org.springframework.security.authentication.AuthenticationEventPublisher; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SecurityFilterAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.security.web.context.AbstractSecurityWebApplicationInitializer', 'org.springframework.security.config.http.SessionCreationPolicy' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   SecurityFilterAutoConfiguration#securityFilterChainRegistration matched:
      - @ConditionalOnBean (names: springSecurityFilterChain; SearchStrategy: all) found bean 'springSecurityFilterChain' (OnBeanCondition)

   ServletWebServerFactoryAutoConfiguration matched:
      - @ConditionalOnClass found required class 'javax.servlet.ServletRequest' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   ServletWebServerFactoryConfiguration.EmbeddedJetty matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.eclipse.jetty.server.Server', 'org.eclipse.jetty.util.Loader', 'org.eclipse.jetty.webapp.WebAppContext' (OnClassCondition)
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.server.ServletWebServerFactory; SearchStrategy: current) did not find any beans (OnBeanCondition)

   SimpleCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.SimpleCacheConfiguration automatic cache type (CacheCondition)

   SpringApplicationAdminJmxAutoConfiguration matched:
      - @ConditionalOnProperty (spring.application.admin.enabled=true) matched (OnPropertyCondition)

   SpringApplicationAdminJmxAutoConfiguration#springApplicationAdminRegistrar matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringBootWebSecurityConfiguration matched:
      - found 'session' scope (OnWebApplicationCondition)

   SpringBootWebSecurityConfiguration.ErrorPageSecurityFilterConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.security.web.access.WebInvocationPrivilegeEvaluator' (OnClassCondition)
      - @ConditionalOnBean (types: org.springframework.security.web.access.WebInvocationPrivilegeEvaluator; SearchStrategy: all) found bean 'privilegeEvaluator' (OnBeanCondition)

   SpringDataWebAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.data.web.PageableHandlerMethodArgumentResolver', 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnMissingBean (types: org.springframework.data.web.PageableHandlerMethodArgumentResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDataWebAutoConfiguration#pageableCustomizer matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.web.config.PageableHandlerMethodArgumentResolverCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDataWebAutoConfiguration#sortCustomizer matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.web.config.SortHandlerMethodArgumentResolverCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDocConfigProperties matched:
      - @ConditionalOnProperty (springdoc.api-docs.enabled) matched (OnPropertyCondition)

   SpringDocConfiguration matched:
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (springdoc.api-docs.enabled) matched (OnPropertyCondition)

   SpringDocConfiguration#fileSupportConverter matched:
      - @ConditionalOnMissingBean (types: org.springdoc.core.converters.FileSupportConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDocConfiguration#openAPIBuilder matched:
      - @ConditionalOnMissingBean (types: org.springdoc.core.OpenAPIService; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDocConfiguration#operationBuilder matched:
      - @ConditionalOnMissingBean (types: org.springdoc.core.OperationService; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDocConfiguration#parameterBuilder matched:
      - @ConditionalOnMissingBean (types: org.springdoc.core.GenericParameterService; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDocConfiguration#polymorphicModelConverter matched:
      - @ConditionalOnProperty (springdoc.model-converters.polymorphic-converter.enabled) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springdoc.core.converters.PolymorphicModelConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDocConfiguration#requestBodyBuilder matched:
      - @ConditionalOnMissingBean (types: org.springdoc.core.RequestBodyService; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDocConfiguration#responseSupportConverter matched:
      - @ConditionalOnMissingBean (types: org.springdoc.core.converters.ResponseSupportConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDocConfiguration#schemaPropertyDeprecatingConverter matched:
      - @ConditionalOnProperty (springdoc.model-converters.deprecating-converter.enabled) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springdoc.core.converters.SchemaPropertyDeprecatingConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDocConfiguration#securityParser matched:
      - @ConditionalOnMissingBean (types: org.springdoc.core.SecurityService; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDocConfiguration#springDocCustomizers matched:
      - @ConditionalOnMissingBean (types: org.springdoc.core.customizers.SpringDocCustomizers; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDocConfiguration#springDocObjectMapperProvider matched:
      - @ConditionalOnMissingBean (types: org.springdoc.core.providers.ObjectMapperProvider; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDocConfiguration#springDocProviders matched:
      - @ConditionalOnMissingBean (types: org.springdoc.core.SpringDocProviders; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDocConfiguration.SpringDocPageableConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.data.domain.Pageable' (OnClassCondition)

   SpringDocConfiguration.SpringDocPageableConfiguration#pageableOpenAPIConverter matched:
      - @ConditionalOnProperty (springdoc.model-converters.pageable-converter.enabled) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springdoc.core.converters.PageableOpenAPIConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDocConfiguration.SpringDocRepositoryRestConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.data.rest.core.config.RepositoryRestConfiguration' (OnClassCondition)

   SpringDocConfiguration.SpringDocRepositoryRestConfiguration#repositoryRestConfigurationProvider matched:
      - @ConditionalOnMissingBean (types: org.springdoc.core.providers.RepositoryRestConfigurationProvider; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDocConfiguration.SpringDocSortConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.data.domain.Sort' (OnClassCondition)

   SpringDocConfiguration.SpringDocSortConfiguration#delegatingMethodParameterCustomizer matched:
      - @ConditionalOnMissingBean (types: org.springdoc.core.customizers.DelegatingMethodParameterCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDocConfiguration.SpringDocSortConfiguration#sortOpenAPIConverter matched:
      - @ConditionalOnProperty (springdoc.model-converters.sort-converter.enabled) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springdoc.core.converters.SortOpenAPIConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDocConfiguration.SpringDocSpringDataWebPropertiesProvider matched:
      - @ConditionalOnClass found required class 'org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties' (OnClassCondition)

   SpringDocConfiguration.SpringDocSpringDataWebPropertiesProvider#springDataWebPropertiesProvider matched:
      - @ConditionalOnMissingBean (types: org.springdoc.core.providers.SpringDataWebPropertiesProvider; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDocConfiguration.SpringDocWebFluxSupportConfiguration matched:
      - @ConditionalOnClass found required class 'reactor.core.publisher.Flux' (OnClassCondition)

   SpringDocConfiguration.SpringDocWebFluxSupportConfiguration#webFluxSupportConverter matched:
      - @ConditionalOnMissingBean (types: org.springdoc.core.converters.WebFluxSupportConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDocConfiguration.WebConversionServiceConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.boot.autoconfigure.web.format.WebConversionService' (OnClassCondition)

   SpringDocDataRestConfiguration matched:
      - @ConditionalOnProperty (springdoc.api-docs.enabled) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: org.springdoc.core.SpringDocConfiguration; SearchStrategy: all) found bean 'org.springdoc.core.SpringDocConfiguration' (OnBeanCondition)

   SpringDocDataRestConfiguration#halProvider matched:
      - @ConditionalOnMissingBean (types: org.springdoc.data.rest.DataRestHalProvider; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDocDataRestConfiguration.QuerydslProvider matched:
      - @ConditionalOnClass found required class 'org.springframework.data.querydsl.binding.QuerydslBindingsFactory' (OnClassCondition)

   SpringDocDataRestConfiguration.QuerydslProvider#queryDslQuerydslPredicateOperationCustomizer matched:
      - @ConditionalOnMissingBean (types: org.springdoc.data.rest.customisers.QuerydslPredicateOperationCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDocHateoasConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.hateoas.server.LinkRelationProvider' (OnClassCondition)
      - @ConditionalOnProperty (springdoc.api-docs.enabled) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: org.springdoc.core.SpringDocConfiguration; SearchStrategy: all) found bean 'org.springdoc.core.SpringDocConfiguration' (OnBeanCondition)

   SpringDocHateoasConfiguration#collectionModelContentConverter matched:
      - @ConditionalOnMissingBean (types: org.springdoc.hateoas.converters.CollectionModelContentConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDocHateoasConfiguration#linksSchemaCustomiser matched:
      - @ConditionalOnMissingBean (types: org.springdoc.core.customizers.GlobalOpenApiCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDocWebMvcConfiguration matched:
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (springdoc.api-docs.enabled) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: org.springdoc.core.SpringDocConfiguration; SearchStrategy: all) found bean 'org.springdoc.core.SpringDocConfiguration' (OnBeanCondition)

   SpringDocWebMvcConfiguration#openApiResource matched:
      - @ConditionalOnProperty (springdoc.use-management-port=false) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springdoc.webmvc.api.OpenApiWebMvcResource; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDocWebMvcConfiguration#requestBuilder matched:
      - @ConditionalOnMissingBean (types: org.springdoc.webmvc.core.RequestService; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDocWebMvcConfiguration#responseBuilder matched:
      - @ConditionalOnMissingBean (types: org.springdoc.core.GenericResponseService; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDocWebMvcConfiguration#springWebProvider matched:
      - @ConditionalOnMissingBean (types: org.springdoc.core.providers.SpringWebProvider; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDocWebMvcConfiguration.SpringDocWebMvcRouterConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.function.RouterFunction' (OnClassCondition)

   SpringDocWebMvcConfiguration.SpringDocWebMvcRouterConfiguration#routerFunctionProvider matched:
      - @ConditionalOnMissingBean (types: org.springdoc.webmvc.core.RouterFunctionWebMvcProvider; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SqlInitializationAutoConfiguration matched:
      - @ConditionalOnProperty (spring.sql.init.enabled) matched (OnPropertyCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on SqlInitializationAutoConfiguration.SqlInitializationModeCondition.ModeIsNever @ConditionalOnProperty (spring.sql.init.mode=never) did not find property 'mode' (SqlInitializationAutoConfiguration.SqlInitializationModeCondition)

   SwaggerConfig matched:
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (springdoc.swagger-ui.enabled) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: org.springdoc.core.SpringDocConfiguration; SearchStrategy: all) found bean 'org.springdoc.core.SpringDocConfiguration' (OnBeanCondition)

   SwaggerConfig#indexPageTransformer matched:
      - @ConditionalOnMissingBean (types: org.springdoc.webmvc.ui.SwaggerIndexTransformer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SwaggerConfig#swaggerConfigResource matched:
      - @ConditionalOnProperty (springdoc.use-management-port=false) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springdoc.webmvc.ui.SwaggerConfigResource; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SwaggerConfig#swaggerWebMvcConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springdoc.webmvc.ui.SwaggerWebMvcConfigurer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SwaggerConfig#swaggerWelcome matched:
      - @ConditionalOnProperty (springdoc.use-management-port=false) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springdoc.webmvc.ui.SwaggerWelcomeWebMvc; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SwaggerUiConfigParameters matched:
      - @ConditionalOnProperty (springdoc.swagger-ui.enabled) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: org.springdoc.core.SpringDocConfiguration; SearchStrategy: all) found bean 'org.springdoc.core.SpringDocConfiguration' (OnBeanCondition)

   SwaggerUiConfigProperties matched:
      - @ConditionalOnProperty (springdoc.swagger-ui.enabled) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: org.springdoc.core.SpringDocConfiguration; SearchStrategy: all) found bean 'org.springdoc.core.SpringDocConfiguration' (OnBeanCondition)

   SwaggerUiOAuthProperties matched:
      - @ConditionalOnProperty (springdoc.swagger-ui.enabled) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: org.springdoc.core.SpringDocConfiguration; SearchStrategy: all) found bean 'org.springdoc.core.SpringDocConfiguration' (OnBeanCondition)

   TaskExecutionAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor' (OnClassCondition)

   TaskExecutionAutoConfiguration#taskExecutorBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskExecutorBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskSchedulingAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler' (OnClassCondition)

   TaskSchedulingAutoConfiguration#taskSchedulerBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskSchedulerBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.transaction.PlatformTransactionManager' (OnClassCondition)

   TransactionAutoConfiguration#platformTransactionManagerCustomizers matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration matched:
      - @ConditionalOnBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) found bean 'mongoTransactionManager'; @ConditionalOnMissingBean (types: org.springframework.transaction.annotation.AbstractTransactionManagementConfiguration; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration.CglibAutoProxyConfiguration matched:
      - @ConditionalOnProperty (spring.aop.proxy-target-class=true) matched (OnPropertyCondition)

   TransactionAutoConfiguration.TransactionTemplateConfiguration matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.transaction.PlatformTransactionManager; SearchStrategy: all) found a single bean 'mongoTransactionManager' (OnBeanCondition)

   TransactionAutoConfiguration.TransactionTemplateConfiguration#transactionTemplate matched:
      - @ConditionalOnMissingBean (types: org.springframework.transaction.support.TransactionOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ValidationAutoConfiguration matched:
      - @ConditionalOnClass found required class 'javax.validation.executable.ExecutableValidator' (OnClassCondition)
      - @ConditionalOnResource found location classpath:META-INF/services/javax.validation.spi.ValidationProvider (OnResourceCondition)

   ValidationAutoConfiguration#defaultValidator matched:
      - @ConditionalOnMissingBean (types: javax.validation.Validator; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ValidationAutoConfiguration#methodValidationPostProcessor matched:
      - @ConditionalOnMissingBean (types: org.springframework.validation.beanvalidation.MethodValidationPostProcessor; SearchStrategy: current) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.springframework.web.servlet.DispatcherServlet', 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration#formContentFilter matched:
      - @ConditionalOnProperty (spring.mvc.formcontent.filter.enabled) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.web.filter.FormContentFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#flashMapManager matched:
      - @ConditionalOnMissingBean (names: flashMapManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#localeResolver matched:
      - @ConditionalOnMissingBean (names: localeResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#themeResolver matched:
      - @ConditionalOnMissingBean (names: themeResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.ResourceChainCustomizerConfiguration matched:
      - @ConditionalOnEnabledResourceChain found class org.webjars.WebJarAssetLocator (OnEnabledResourceChainCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#defaultViewResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.InternalResourceViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#requestContextFilter matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.context.request.RequestContextListener,org.springframework.web.filter.RequestContextFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#viewResolver matched:
      - @ConditionalOnBean (types: org.springframework.web.servlet.ViewResolver; SearchStrategy: all) found beans 'defaultViewResolver', 'beanNameViewResolver', 'mvcViewResolver'; @ConditionalOnMissingBean (names: viewResolver types: org.springframework.web.servlet.view.ContentNegotiatingViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebSocketMessagingAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.socket.config.annotation.WebSocketMessageBrokerConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   WebSocketMessagingAutoConfiguration.WebSocketMessageConverterConfiguration matched:
      - @ConditionalOnClass found required classes 'com.fasterxml.jackson.databind.ObjectMapper', 'org.springframework.messaging.simp.config.AbstractMessageBrokerConfiguration' (OnClassCondition)
      - @ConditionalOnBean (types: org.springframework.web.socket.config.annotation.DelegatingWebSocketMessageBrokerConfiguration,com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) found beans 'jacksonObjectMapper', 'org.springframework.web.socket.config.annotation.DelegatingWebSocketMessageBrokerConfiguration' (OnBeanCondition)

   WebSocketServletAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'javax.websocket.server.ServerContainer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   WebSocketServletAutoConfiguration.JettyWebSocketConfiguration matched:
      - @ConditionalOnClass found required class 'org.eclipse.jetty.websocket.jsr356.server.deploy.WebSocketServerContainerInitializer' (OnClassCondition)

   WebSocketServletAutoConfiguration.JettyWebSocketConfiguration#websocketServletWebServerCustomizer matched:
      - @ConditionalOnMissingBean (names: websocketServletWebServerCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)


Negative matches:
-----------------

   ActiveMQAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.jms.ConnectionFactory' (OnClassCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.aspectj.weaver.Advice' (OnClassCondition)

   ArtemisAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.jms.ConnectionFactory' (OnClassCondition)

   BatchAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.batch.core.launch.JobLauncher' (OnClassCondition)

   Cache2kCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.cache2k.Cache2kBuilder' (OnClassCondition)

   CacheAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.cache.interceptor.CacheAspectSupport; SearchStrategy: all) did not find any beans of type org.springframework.cache.interceptor.CacheAspectSupport (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.cache.CacheManager' (OnClassCondition)

   CacheAutoConfiguration.CacheManagerEntityManagerFactoryDependsOnPostProcessor:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean' (OnClassCondition)
         - Ancestor org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration did not match (ConditionEvaluationReport.AncestorsMatchedCondition)

   CaffeineCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.github.benmanes.caffeine.cache.Caffeine' (OnClassCondition)

   CassandraAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.cassandra.ReactiveSession' (OnClassCondition)

   CassandraRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   ClientHttpConnectorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   CodecsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   CouchbaseAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket' (OnClassCondition)

   CouchbaseReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket' (OnClassCondition)

   DataSourceInitializationConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.jdbc.datasource.init.DatabasePopulator' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.jdbc.core.JdbcTemplate' (OnClassCondition)

   DispatcherServletAutoConfiguration.DispatcherServletConfiguration#multipartResolver:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.web.multipart.MultipartResolver; SearchStrategy: all) did not find any beans of type org.springframework.web.multipart.MultipartResolver (OnBeanCondition)

   EhCacheCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'net.sf.ehcache.Cache' (OnClassCondition)

   ElasticsearchDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate' (OnClassCondition)

   ElasticsearchRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.elasticsearch.client.Client' (OnClassCondition)

   ElasticsearchRestClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.elasticsearch.client.RestClientBuilder' (OnClassCondition)

   EmbeddedLdapAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.unboundid.ldap.listener.InMemoryDirectoryServer' (OnClassCondition)

   EmbeddedMongoAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'de.flapdoodle.embed.mongo.MongodStarter' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.NettyWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.netty.http.server.HttpServer' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.TomcatWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.apache.catalina.startup.Tomcat', 'org.apache.coyote.UpgradeProtocol' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.UndertowWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.undertow.Undertow', 'org.xnio.SslClientAuthMode' (OnClassCondition)

   ErrorWebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   FlywayAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.flywaydb.core.Flyway' (OnClassCondition)

   FreeMarkerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'freemarker.template.Configuration' (OnClassCondition)

   GraphQlAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlQueryByExampleAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlQuerydslAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlRSocketAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlReactiveQueryByExampleAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlReactiveQuerydslAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebFluxSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebMvcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebMvcSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GroovyTemplateAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'groovy.text.markup.MarkupTemplateEngine' (OnClassCondition)

   GsonAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.google.gson.Gson' (OnClassCondition)

   GsonHttpMessageConvertersConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.google.gson.Gson' (OnClassCondition)

   H2ConsoleAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.h2.server.web.WebServlet' (OnClassCondition)

   HazelcastAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastJCacheCustomizationConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastJpaDependencyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HibernateJpaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.hibernate.engine.spi.SessionImplementor' (OnClassCondition)

   HttpHandlerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.DispatcherHandler' (OnClassCondition)

   InfinispanCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.infinispan.spring.embedded.provider.SpringEmbeddedCacheManager' (OnClassCondition)

   InfluxDbAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.influxdb.InfluxDB' (OnClassCondition)

   IntegrationAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.integration.config.EnableIntegration' (OnClassCondition)

   JdbcRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.jdbc.repository.config.AbstractJdbcConfiguration' (OnClassCondition)

   JdbcTemplateAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.jdbc.core.JdbcTemplate' (OnClassCondition)

   JerseyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.glassfish.jersey.server.spring.SpringComponentProvider' (OnClassCondition)

   JmsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.jms.Message' (OnClassCondition)

   JndiConnectionFactoryAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.jms.core.JmsTemplate' (OnClassCondition)

   JndiDataSourceAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)

   JooqAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.jooq.DSLContext' (OnClassCondition)

   JpaRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.jpa.repository.JpaRepository' (OnClassCondition)

   JsonbAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.json.bind.Jsonb' (OnClassCondition)

   JsonbHttpMessageConvertersConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.json.bind.Jsonb' (OnClassCondition)

   JtaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.transaction.Transaction' (OnClassCondition)

   KafkaAutoConfiguration#kafkaJaasInitializer:
      Did not match:
         - @ConditionalOnProperty (spring.kafka.jaas.enabled) did not find property 'spring.kafka.jaas.enabled' (OnPropertyCondition)

   KafkaAutoConfiguration#kafkaRetryTopicConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.kafka.retry.topic.enabled) did not find property 'spring.kafka.retry.topic.enabled' (OnPropertyCondition)

   KafkaAutoConfiguration#kafkaTransactionManager:
      Did not match:
         - @ConditionalOnProperty (spring.kafka.producer.transaction-id-prefix) did not find property 'spring.kafka.producer.transaction-id-prefix' (OnPropertyCondition)

   KafkaStreamsAnnotationDrivenConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.kafka.streams.StreamsBuilder' (OnClassCondition)

   LdapAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ldap.core.ContextSource' (OnClassCondition)

   LdapRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.ldap.repository.LdapRepository' (OnClassCondition)

   LiquibaseAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'liquibase.change.DatabaseChange' (OnClassCondition)

   MailSenderAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.mail.internet.MimeMessage' (OnClassCondition)

   MailSenderValidatorAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.mail.test-connection) did not find property 'test-connection' (OnPropertyCondition)

   MessageSourceAutoConfiguration:
      Did not match:
         - ResourceBundle did not find bundle with basename messages (MessageSourceAutoConfiguration.ResourceBundleCondition)

   MongoReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean,org.springframework.data.mongodb.repository.config.MongoRepositoryConfigurationExtension; SearchStrategy: all) found beans of type 'org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean' &productTypeRepository, &bankAccountRepository, &productComboDetailRepository, &transactionStatisticRepository, &bankTransactionRepository, &productRepository, &userRepository, &accountRepository, &notificationRepository, &statisticCheckpointRepository, &ratingRepository, &voucherStoreRepository, &otpRepository, &searchHistoryRepository, &checkInDailyStatisticRepository, &paymentTransactionRepository, &shipperRepository, &configRepository, &sellerStoreRepository, &productTypeDetailRepository, &productComboRepository, &cartRepository, &productDetailRepository, &checkInDailyRepository, &voucherCodeLimitRepository, &productTransactionDetailRepository, &tpBankTransactionRepository, &systemLogRepository, &productStatisticRepository, &userFavoriteRepository, &productTransactionRepository, &productCategoryRepository, &voucherCodeRepository and found beans of type 'org.springframework.data.mongodb.repository.config.MongoRepositoryConfigurationExtension' org.springframework.data.mongodb.repository.config.MongoRepositoryConfigurationExtension#0 (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required classes 'com.mongodb.client.MongoClient', 'org.springframework.data.mongodb.repository.MongoRepository' (OnClassCondition)
         - @ConditionalOnRepositoryType configured type of 'AUTO' matched required type (OnRepositoryTypeCondition)

   MultipleOpenApiSupportConfiguration:
      Did not match:
         - AnyNestedCondition 0 matched 2 did not; NestedCondition on MultipleOpenApiSupportCondition.OnActuatorDifferentPort @ConditionalOnProperty (springdoc.show-actuator) did not find property 'springdoc.show-actuator'; NestedCondition on MultipleOpenApiSupportCondition.OnMultipleOpenApiSupportCondition AnyNestedCondition 0 matched 2 did not; NestedCondition on MultipleOpenApiGroupsCondition.OnGroupConfigProperty @ConditionalOnProperty (springdoc.group-configs[0].group) did not find property 'springdoc.group-configs[0].group'; NestedCondition on MultipleOpenApiGroupsCondition.OnGroupedOpenApiBean @ConditionalOnBean (types: org.springdoc.core.GroupedOpenApi; SearchStrategy: all) did not find any beans of type org.springdoc.core.GroupedOpenApi (MultipleOpenApiSupportCondition)
      Matched:
         - found 'session' scope (OnWebApplicationCondition)
         - @ConditionalOnProperty (springdoc.api-docs.enabled) matched (OnPropertyCondition)

   MultipleOpenApiSupportConfiguration.SpringDocWebMvcActuatorDifferentConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping' (OnClassCondition)
         - Ancestor org.springdoc.webmvc.core.MultipleOpenApiSupportConfiguration did not match (ConditionEvaluationReport.AncestorsMatchedCondition)

   MustacheAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.samskivert.mustache.Mustache' (OnClassCondition)

   Neo4jAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   OAuth2ClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.oauth2.client.registration.ClientRegistration' (OnClassCondition)

   OAuth2ResourceServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.oauth2.server.resource.BearerTokenAuthenticationToken' (OnClassCondition)

   ProjectInfoAutoConfiguration#buildProperties:
      Did not match:
         - @ConditionalOnResource did not find resource '${spring.info.build.location:classpath:META-INF/build-info.properties}' (OnResourceCondition)

   ProjectInfoAutoConfiguration#gitProperties:
      Did not match:
         - GitResource did not find git info at classpath:git.properties (ProjectInfoAutoConfiguration.GitResourceAvailableCondition)

   QuartzAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.quartz.Scheduler' (OnClassCondition)

   R2dbcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   R2dbcDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.r2dbc.core.R2dbcEntityTemplate' (OnClassCondition)

   R2dbcInitializationConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.r2dbc.spi.ConnectionFactory', 'org.springframework.r2dbc.connection.init.DatabasePopulator' (OnClassCondition)

   R2dbcRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   R2dbcTransactionManagerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.r2dbc.connection.R2dbcTransactionManager' (OnClassCondition)

   RSocketGraphQlClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   RSocketMessagingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)

   RSocketRequesterAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)

   RSocketSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.rsocket.core.SecuritySocketAcceptorInterceptor' (OnClassCondition)

   RSocketServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.core.RSocketServer' (OnClassCondition)

   RSocketStrategiesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)

   RabbitAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.rabbitmq.client.Channel' (OnClassCondition)

   ReactiveElasticsearchRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.client.reactive.ReactiveElasticsearchClient' (OnClassCondition)

   ReactiveElasticsearchRestClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.netty.http.client.HttpClient' (OnClassCondition)

   ReactiveMultipartAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   ReactiveOAuth2ClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.oauth2.client.registration.ClientRegistration' (OnClassCondition)

   ReactiveOAuth2ResourceServerAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   ReactiveSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   ReactiveUserDetailsServiceAutoConfiguration:
      Did not match:
         - AnyNestedCondition 0 matched 2 did not; NestedCondition on ReactiveUserDetailsServiceAutoConfiguration.ReactiveUserDetailsServiceCondition.ReactiveWebApplicationCondition did not find reactive web application classes; NestedCondition on ReactiveUserDetailsServiceAutoConfiguration.ReactiveUserDetailsServiceCondition.RSocketSecurityEnabledCondition @ConditionalOnBean (types: org.springframework.messaging.rsocket.annotation.support.RSocketMessageHandler; SearchStrategy: all) did not find any beans of type org.springframework.messaging.rsocket.annotation.support.RSocketMessageHandler (ReactiveUserDetailsServiceAutoConfiguration.ReactiveUserDetailsServiceCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.security.authentication.ReactiveAuthenticationManager' (OnClassCondition)

   ReactiveWebServerFactoryAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   RedissonCacheStatisticsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.boot.actuate.metrics.cache.CacheMeterBinderProvider' (OnClassCondition)

   RepositoryRestMvcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.rest.webmvc.config.RepositoryRestMvcConfiguration' (OnClassCondition)

   Saml2RelyingPartyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.saml2.provider.service.registration.RelyingPartyRegistrationRepository' (OnClassCondition)

   SecurityDataConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.data.repository.query.SecurityEvaluationContextExtension' (OnClassCondition)

   SendGridAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.sendgrid.SendGrid' (OnClassCondition)

   ServletWebServerFactoryAutoConfiguration#tomcatServletWebServerFactoryCustomizer:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.catalina.startup.Tomcat' (OnClassCondition)

   ServletWebServerFactoryAutoConfiguration.ForwardedHeaderFilterConfiguration:
      Did not match:
         - @ConditionalOnProperty (server.forward-headers-strategy=framework) did not find property 'server.forward-headers-strategy' (OnPropertyCondition)

   ServletWebServerFactoryConfiguration.EmbeddedTomcat:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.apache.catalina.startup.Tomcat', 'org.apache.coyote.UpgradeProtocol' (OnClassCondition)

   ServletWebServerFactoryConfiguration.EmbeddedUndertow:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.undertow.Undertow', 'org.xnio.SslClientAuthMode' (OnClassCondition)

   SessionAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.session.Session' (OnClassCondition)

   SolrAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.solr.client.solrj.impl.CloudSolrClient' (OnClassCondition)

   SpringBootWebSecurityConfiguration.SecurityFilterChainConfiguration:
      Did not match:
         - AllNestedConditions 1 matched 1 did not; NestedCondition on DefaultWebSecurityCondition.Beans @ConditionalOnMissingBean (types: org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter,org.springframework.security.web.SecurityFilterChain; SearchStrategy: all) found beans of type 'org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter' webSecurityConfig; NestedCondition on DefaultWebSecurityCondition.Classes @ConditionalOnClass found required classes 'org.springframework.security.web.SecurityFilterChain', 'org.springframework.security.config.annotation.web.builders.HttpSecurity' (DefaultWebSecurityCondition)

   SpringBootWebSecurityConfiguration.WebSecurityEnablerConfiguration:
      Did not match:
         - @ConditionalOnMissingBean (names: springSecurityFilterChain; SearchStrategy: all) found beans named springSecurityFilterChain (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.security.config.annotation.web.configuration.EnableWebSecurity' (OnClassCondition)

   SpringDocConfiguration#propertiesResolverForSchema:
      Did not match:
         - @ConditionalOnProperty (springdoc.api-docs.resolve-schema-properties) did not find property 'springdoc.api-docs.resolve-schema-properties' (OnPropertyCondition)

   SpringDocConfiguration#propertyCustomizingConverter:
      Did not match:
         - @ConditionalOnBean (types: org.springdoc.core.customizers.PropertyCustomizer; SearchStrategy: all) did not find any beans of type org.springdoc.core.customizers.PropertyCustomizer (OnBeanCondition)

   SpringDocConfiguration#springdocBeanFactoryPostProcessor:
      Did not match:
         - AnyNestedCondition 0 matched 2 did not; NestedCondition on CacheOrGroupedOpenApiCondition.OnCacheDisabled found non-matching nested conditions @ConditionalOnProperty (springdoc.cache.disabled) did not find property 'springdoc.cache.disabled'; NestedCondition on CacheOrGroupedOpenApiCondition.OnMultipleOpenApiSupportCondition AnyNestedCondition 0 matched 2 did not; NestedCondition on MultipleOpenApiSupportCondition.OnActuatorDifferentPort @ConditionalOnProperty (springdoc.show-actuator) did not find property 'springdoc.show-actuator'; NestedCondition on MultipleOpenApiSupportCondition.OnMultipleOpenApiSupportCondition AnyNestedCondition 0 matched 2 did not; NestedCondition on MultipleOpenApiGroupsCondition.OnGroupConfigProperty @ConditionalOnProperty (springdoc.group-configs[0].group) did not find property 'springdoc.group-configs[0].group'; NestedCondition on MultipleOpenApiGroupsCondition.OnGroupedOpenApiBean @ConditionalOnBean (types: org.springdoc.core.GroupedOpenApi; SearchStrategy: all) did not find any beans of type org.springdoc.core.GroupedOpenApi (CacheOrGroupedOpenApiCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.boot.context.properties.bind.BindResult' (OnClassCondition)

   SpringDocConfiguration#springdocBeanFactoryPostProcessor2:
      Did not match:
         - @ConditionalOnMissingClass found unwanted class 'org.springframework.boot.context.properties.bind.BindResult' (OnClassCondition)

   SpringDocConfiguration.SpringDocActuatorConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties' (OnClassCondition)

   SpringDocConfiguration.SpringDocFunctionCatalogConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.cloud.function.web.function.FunctionEndpointInitializer' (OnClassCondition)

   SpringDocConfiguration.SpringDocPageableConfiguration#delegatingMethodParameterCustomizer:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springdoc.core.customizers.DelegatingMethodParameterCustomizer; SearchStrategy: all) found beans of type 'org.springdoc.core.customizers.DelegatingMethodParameterCustomizer' delegatingMethodParameterCustomizer (OnBeanCondition)

   SpringDocDataRestConfiguration.SpringRepositoryRestResourceProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping' (OnClassCondition)

   SpringDocHateoasConfiguration#hateoasHalProvider:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springdoc.hateoas.HateoasHalProvider; SearchStrategy: all) found beans of type 'org.springdoc.hateoas.HateoasHalProvider' halProvider (OnBeanCondition)

   SpringDocWebMvcConfiguration.SpringDocWebMvcActuatorConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping' (OnClassCondition)

   SwaggerConfig#springWebProvider:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springdoc.core.providers.SpringWebProvider; SearchStrategy: all) found beans of type 'org.springdoc.core.providers.SpringWebProvider' springWebProvider (OnBeanCondition)

   SwaggerConfig#swaggerUiConfigParameters:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springdoc.core.SwaggerUiConfigParameters; SearchStrategy: all) found beans of type 'org.springdoc.core.SwaggerUiConfigParameters' org.springdoc.core.SwaggerUiConfigParameters (OnBeanCondition)

   SwaggerConfig#swaggerUiHome:
      Did not match:
         - @ConditionalOnProperty (springdoc.swagger-ui.use-root-path=true) did not find property 'springdoc.swagger-ui.use-root-path' (OnPropertyCondition)

   SwaggerConfig.SwaggerActuatorWelcomeConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping' (OnClassCondition)

   TaskExecutionAutoConfiguration#applicationTaskExecutor:
      Did not match:
         - @ConditionalOnMissingBean (types: java.util.concurrent.Executor; SearchStrategy: all) found beans of type 'java.util.concurrent.Executor' clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, threadPoolTaskExecutor (OnBeanCondition)

   TaskSchedulingAutoConfiguration#taskScheduler:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.scheduling.annotation.SchedulingConfigurer,org.springframework.scheduling.TaskScheduler,java.util.concurrent.ScheduledExecutorService; SearchStrategy: all) found beans of type 'org.springframework.scheduling.TaskScheduler' messageBrokerTaskScheduler, defaultSockJsTaskScheduler (OnBeanCondition)

   ThymeleafAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.thymeleaf.spring5.SpringTemplateEngine' (OnClassCondition)

   TransactionAutoConfiguration#transactionalOperator:
      Did not match:
         - @ConditionalOnSingleCandidate (types: org.springframework.transaction.ReactiveTransactionManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration.JdkDynamicAutoProxyConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.aop.proxy-target-class=false) found different value in property 'proxy-target-class' (OnPropertyCondition)

   UserDetailsServiceAutoConfiguration:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.security.authentication.AuthenticationManager,org.springframework.security.authentication.AuthenticationProvider,org.springframework.security.core.userdetails.UserDetailsService,org.springframework.security.authentication.AuthenticationManagerResolver,org.springframework.security.oauth2.jwt.JwtDecoder,org.springframework.security.oauth2.server.resource.introspection.OpaqueTokenIntrospector,org.springframework.security.oauth2.client.registration.ClientRegistrationRepository,org.springframework.security.saml2.provider.service.registration.RelyingPartyRegistrationRepository; SearchStrategy: all) found beans of type 'org.springframework.security.authentication.AuthenticationManager' authenticationManagerBean and found beans of type 'org.springframework.security.core.userdetails.UserDetailsService' userDetailsServiceImpl (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.security.authentication.AuthenticationManager' (OnClassCondition)

   WebClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   WebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   WebMvcAutoConfiguration#hiddenHttpMethodFilter:
      Did not match:
         - @ConditionalOnProperty (spring.mvc.hiddenmethod.filter.enabled) did not find property 'enabled' (OnPropertyCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#beanNameViewResolver:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.BeanNameViewResolver; SearchStrategy: all) found beans of type 'org.springframework.web.servlet.view.BeanNameViewResolver' beanNameViewResolver (OnBeanCondition)

   WebServiceTemplateAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ws.client.core.WebServiceTemplate' (OnClassCondition)

   WebServicesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ws.transport.http.MessageDispatcherServlet' (OnClassCondition)

   WebSessionIdResolverAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   WebSocketReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   WebSocketServletAutoConfiguration.Jetty10WebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.websocket.javax.server.internal.JavaxWebSocketServerContainer', 'org.eclipse.jetty.websocket.server.JettyWebSocketServerContainer' (OnClassCondition)

   WebSocketServletAutoConfiguration.TomcatWebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.apache.catalina.startup.Tomcat', 'org.apache.tomcat.websocket.server.WsSci' (OnClassCondition)

   WebSocketServletAutoConfiguration.UndertowWebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.undertow.websockets.jsr.Bootstrap' (OnClassCondition)

   XADataSourceAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.transaction.TransactionManager' (OnClassCondition)


Exclusions:
-----------

    org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration

    org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration


Unconditional classes:
----------------------

    org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration

    org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration

    org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration

    org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration

    org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration



24/12/23 17:50:04.856 | DEBUG | sale_service | 0 | PropertySourcesPropertyResolver.java: Found key 'spring.liveBeansView.mbeanDomain' in PropertySource 'systemProperties' with value of type String
24/12/23 17:50:04.857 | INFO  | sale_service | 0 | StartupInfoLogger.java: Started SalesPageAdminServiceApplication in 6.506 seconds (JVM running for 7.543)
24/12/23 17:50:04.858 | DEBUG | sale_service | 0 | ApplicationAvailabilityBean.java: Application availability state LivenessState changed to CORRECT
24/12/23 17:50:04.860 | DEBUG | sale_service | 0 | ApplicationAvailabilityBean.java: Application availability state ReadinessState changed to ACCEPTING_TRAFFIC
24/12/23 17:50:04.922 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:50:04.924 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:50:05.167 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:50:05.167 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:50:05.181 | INFO  | sale_service | 0 | Metadata.java: [Consumer clientId=consumer-bizfly-7-453-PaymentTransaction-1, groupId=bizfly-7-453-PaymentTransaction] Resetting the last seen epoch of partition bizfly-7-453-PaymentTransaction-0 to 0 since the associated topicId changed from null to IVIwtkJ1TFa2furVZr4RuA
24/12/23 17:50:05.183 | INFO  | sale_service | 0 | Metadata.java: [Consumer clientId=consumer-bizfly-7-453-PaymentTransaction-1, groupId=bizfly-7-453-PaymentTransaction] Cluster ID: QMB_mhHDRDu7Hwe9wGbv2w
24/12/23 17:50:05.184 | INFO  | sale_service | 0 | Metadata.java: [Consumer clientId=consumer-bizfly-7-453-PaymentTransaction-3, groupId=bizfly-7-453-PaymentTransaction] Resetting the last seen epoch of partition bizfly-7-453-CheckInTopic-0 to 0 since the associated topicId changed from null to DfCruMDBRSKVMDM2Nqz2EA
24/12/23 17:50:05.184 | INFO  | sale_service | 0 | Metadata.java: [Consumer clientId=consumer-bizfly-7-453-PaymentTransaction-2, groupId=bizfly-7-453-PaymentTransaction] Resetting the last seen epoch of partition bizfly-7-453-LikeTopic-0 to 0 since the associated topicId changed from null to k5hnNIYpTxqBxxNP0OV7-A
24/12/23 17:50:05.184 | INFO  | sale_service | 0 | Metadata.java: [Consumer clientId=consumer-bizfly-7-453-PaymentTransaction-3, groupId=bizfly-7-453-PaymentTransaction] Cluster ID: QMB_mhHDRDu7Hwe9wGbv2w
24/12/23 17:50:05.184 | INFO  | sale_service | 0 | Metadata.java: [Consumer clientId=consumer-bizfly-7-453-PaymentTransaction-2, groupId=bizfly-7-453-PaymentTransaction] Cluster ID: QMB_mhHDRDu7Hwe9wGbv2w
24/12/23 17:50:05.185 | INFO  | sale_service | 0 | AbstractCoordinator.java: [Consumer clientId=consumer-bizfly-7-453-PaymentTransaction-2, groupId=bizfly-7-453-PaymentTransaction] Discovered group coordinator 123.31.11.247:9094 (id: 2147483643 rack: null)
24/12/23 17:50:05.185 | INFO  | sale_service | 0 | AbstractCoordinator.java: [Consumer clientId=consumer-bizfly-7-453-PaymentTransaction-3, groupId=bizfly-7-453-PaymentTransaction] Discovered group coordinator 123.31.11.247:9094 (id: 2147483643 rack: null)
24/12/23 17:50:05.185 | INFO  | sale_service | 0 | AbstractCoordinator.java: [Consumer clientId=consumer-bizfly-7-453-PaymentTransaction-1, groupId=bizfly-7-453-PaymentTransaction] Discovered group coordinator 123.31.11.247:9094 (id: 2147483643 rack: null)
24/12/23 17:50:05.197 | INFO  | sale_service | 0 | AbstractCoordinator.java: [Consumer clientId=consumer-bizfly-7-453-PaymentTransaction-3, groupId=bizfly-7-453-PaymentTransaction] (Re-)joining group
24/12/23 17:50:05.197 | INFO  | sale_service | 0 | AbstractCoordinator.java: [Consumer clientId=consumer-bizfly-7-453-PaymentTransaction-1, groupId=bizfly-7-453-PaymentTransaction] (Re-)joining group
24/12/23 17:50:05.197 | INFO  | sale_service | 0 | AbstractCoordinator.java: [Consumer clientId=consumer-bizfly-7-453-PaymentTransaction-2, groupId=bizfly-7-453-PaymentTransaction] (Re-)joining group
24/12/23 17:50:05.322 | INFO  | sale_service | 0 | AbstractCoordinator.java: [Consumer clientId=consumer-bizfly-7-453-PaymentTransaction-3, groupId=bizfly-7-453-PaymentTransaction] Request joining group due to: need to re-join with the given member-id
24/12/23 17:50:05.322 | INFO  | sale_service | 0 | AbstractCoordinator.java: [Consumer clientId=consumer-bizfly-7-453-PaymentTransaction-3, groupId=bizfly-7-453-PaymentTransaction] (Re-)joining group
24/12/23 17:50:05.329 | INFO  | sale_service | 0 | AbstractCoordinator.java: [Consumer clientId=consumer-bizfly-7-453-PaymentTransaction-1, groupId=bizfly-7-453-PaymentTransaction] Request joining group due to: need to re-join with the given member-id
24/12/23 17:50:05.329 | INFO  | sale_service | 0 | AbstractCoordinator.java: [Consumer clientId=consumer-bizfly-7-453-PaymentTransaction-2, groupId=bizfly-7-453-PaymentTransaction] Request joining group due to: need to re-join with the given member-id
24/12/23 17:50:05.329 | INFO  | sale_service | 0 | AbstractCoordinator.java: [Consumer clientId=consumer-bizfly-7-453-PaymentTransaction-2, groupId=bizfly-7-453-PaymentTransaction] (Re-)joining group
24/12/23 17:50:05.329 | INFO  | sale_service | 0 | AbstractCoordinator.java: [Consumer clientId=consumer-bizfly-7-453-PaymentTransaction-1, groupId=bizfly-7-453-PaymentTransaction] (Re-)joining group
24/12/23 17:50:05.479 | INFO  | sale_service | 0 | AbstractCoordinator.java: [Consumer clientId=consumer-bizfly-7-453-PaymentTransaction-2, groupId=bizfly-7-453-PaymentTransaction] Successfully joined group with generation Generation{generationId=1915, memberId='consumer-bizfly-7-453-PaymentTransaction-2-c2ba9600-c154-41e1-9cdf-ed5784464b00', protocol='range'}
24/12/23 17:50:05.479 | INFO  | sale_service | 0 | AbstractCoordinator.java: [Consumer clientId=consumer-bizfly-7-453-PaymentTransaction-1, groupId=bizfly-7-453-PaymentTransaction] Successfully joined group with generation Generation{generationId=1915, memberId='consumer-bizfly-7-453-PaymentTransaction-1-74fd23ad-0dd5-4563-b16c-8f4a5973e2d3', protocol='range'}
24/12/23 17:50:05.479 | INFO  | sale_service | 0 | AbstractCoordinator.java: [Consumer clientId=consumer-bizfly-7-453-PaymentTransaction-3, groupId=bizfly-7-453-PaymentTransaction] Successfully joined group with generation Generation{generationId=1915, memberId='consumer-bizfly-7-453-PaymentTransaction-3-0250a5f0-427f-486e-a4a0-97bb3c2c8c51', protocol='range'}
24/12/23 17:50:05.479 | INFO  | sale_service | 0 | SLF4JLogger.java: Opened connection [connectionId{localValue:7, serverValue:83713}] to ac-jh96ukw-shard-00-02.h9186rq.mongodb.net:27017
24/12/23 17:50:05.492 | INFO  | sale_service | 0 | AbstractCoordinator.java: [Consumer clientId=consumer-bizfly-7-453-PaymentTransaction-3, groupId=bizfly-7-453-PaymentTransaction] Successfully synced group in generation Generation{generationId=1915, memberId='consumer-bizfly-7-453-PaymentTransaction-3-0250a5f0-427f-486e-a4a0-97bb3c2c8c51', protocol='range'}
24/12/23 17:50:05.492 | INFO  | sale_service | 0 | AbstractCoordinator.java: [Consumer clientId=consumer-bizfly-7-453-PaymentTransaction-2, groupId=bizfly-7-453-PaymentTransaction] Successfully synced group in generation Generation{generationId=1915, memberId='consumer-bizfly-7-453-PaymentTransaction-2-c2ba9600-c154-41e1-9cdf-ed5784464b00', protocol='range'}
24/12/23 17:50:05.493 | INFO  | sale_service | 0 | AbstractCoordinator.java: [Consumer clientId=consumer-bizfly-7-453-PaymentTransaction-1, groupId=bizfly-7-453-PaymentTransaction] Successfully synced group in generation Generation{generationId=1915, memberId='consumer-bizfly-7-453-PaymentTransaction-1-74fd23ad-0dd5-4563-b16c-8f4a5973e2d3', protocol='range'}
24/12/23 17:50:05.494 | INFO  | sale_service | 0 | ConsumerCoordinator.java: [Consumer clientId=consumer-bizfly-7-453-PaymentTransaction-1, groupId=bizfly-7-453-PaymentTransaction] Notifying assignor about the new Assignment(partitions=[bizfly-7-453-PaymentTransaction-0])
24/12/23 17:50:05.494 | INFO  | sale_service | 0 | ConsumerCoordinator.java: [Consumer clientId=consumer-bizfly-7-453-PaymentTransaction-3, groupId=bizfly-7-453-PaymentTransaction] Notifying assignor about the new Assignment(partitions=[])
24/12/23 17:50:05.494 | INFO  | sale_service | 0 | ConsumerCoordinator.java: [Consumer clientId=consumer-bizfly-7-453-PaymentTransaction-2, groupId=bizfly-7-453-PaymentTransaction] Notifying assignor about the new Assignment(partitions=[])
24/12/23 17:50:05.494 | INFO  | sale_service | 0 | ConsumerCoordinator.java: [Consumer clientId=consumer-bizfly-7-453-PaymentTransaction-3, groupId=bizfly-7-453-PaymentTransaction] Adding newly assigned partitions: 
24/12/23 17:50:05.494 | INFO  | sale_service | 0 | ConsumerCoordinator.java: [Consumer clientId=consumer-bizfly-7-453-PaymentTransaction-2, groupId=bizfly-7-453-PaymentTransaction] Adding newly assigned partitions: 
24/12/23 17:50:05.494 | INFO  | sale_service | 0 | LogAccessor.java: bizfly-7-453-PaymentTransaction: partitions assigned: []
24/12/23 17:50:05.494 | INFO  | sale_service | 0 | LogAccessor.java: bizfly-7-453-PaymentTransaction: partitions assigned: []
24/12/23 17:50:05.496 | INFO  | sale_service | 0 | ConsumerCoordinator.java: [Consumer clientId=consumer-bizfly-7-453-PaymentTransaction-1, groupId=bizfly-7-453-PaymentTransaction] Adding newly assigned partitions: bizfly-7-453-PaymentTransaction-0
24/12/23 17:50:05.512 | INFO  | sale_service | 0 | ConsumerCoordinator.java: [Consumer clientId=consumer-bizfly-7-453-PaymentTransaction-1, groupId=bizfly-7-453-PaymentTransaction] Setting offset for partition bizfly-7-453-PaymentTransaction-0 to the committed offset FetchPosition{offset=1782, offsetEpoch=Optional[0], currentLeader=LeaderAndEpoch{leader=Optional[123.31.11.25:9094 (id: 1 rack: null)], epoch=0}}
24/12/23 17:50:05.515 | INFO  | sale_service | 0 | SLF4JLogger.java: Opened connection [connectionId{localValue:8, serverValue:83693}] to ac-jh96ukw-shard-00-02.h9186rq.mongodb.net:27017
24/12/23 17:50:05.649 | INFO  | sale_service | 0 | AbstractConfig.java: ProducerConfig values: 
	acks = -1
	batch.size = 16384
	bootstrap.servers = [cluster001.kas.bfcplatform.vn:9094]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = producer-1
	compression.type = none
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = true
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = [hidden]
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = SCRAM-SHA-512
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = SASL_PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.apache.kafka.common.serialization.StringSerializer

24/12/23 17:50:05.658 | INFO  | sale_service | 0 | KafkaProducer.java: [Producer clientId=producer-1] Instantiated an idempotent producer.
24/12/23 17:50:05.673 | INFO  | sale_service | 0 | AppInfoParser.java: Kafka version: 3.1.2
24/12/23 17:50:05.673 | INFO  | sale_service | 0 | AppInfoParser.java: Kafka commitId: f8c67dc3ae0a3265
24/12/23 17:50:05.673 | INFO  | sale_service | 0 | AppInfoParser.java: Kafka startTimeMs: 1703415005673
24/12/23 17:50:05.708 | INFO  | sale_service | 0 | LogAccessor.java: bizfly-7-453-PaymentTransaction: partitions assigned: [bizfly-7-453-PaymentTransaction-0]
24/12/23 17:50:05.842 | INFO  | sale_service | 0 | Metadata.java: [Producer clientId=producer-1] Resetting the last seen epoch of partition bizfly-7-453-CheckInTopic-0 to 0 since the associated topicId changed from null to DfCruMDBRSKVMDM2Nqz2EA
24/12/23 17:50:05.843 | INFO  | sale_service | 0 | Metadata.java: [Producer clientId=producer-1] Cluster ID: QMB_mhHDRDu7Hwe9wGbv2w
24/12/23 17:50:05.846 | INFO  | sale_service | 0 | TransactionManager.java: [Producer clientId=producer-1] ProducerId set to 12091 with epoch 0
24/12/23 17:50:05.868 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:50:05.868 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:50:05.975 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:50:05.975 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:50:05.976 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:50:05.977 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:50:05.993 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:50:05.993 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:50:06.051 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:50:06.051 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:50:06.067 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:50:06.067 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[], metadata=Metadata(to (truncated)...]
24/12/23 17:50:06.086 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:50:06.086 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:50:06.090 | WARN  | sale_service | 221 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:50:06.090 | WARN  | sale_service | 221 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:50:06.090 | WARN  | sale_service | 1157 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:50:06.090 | WARN  | sale_service | 1157 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:50:07.061 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:50:07.061 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:50:07.063 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:50:07.063 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:50:07.160 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:50:07.163 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:50:07.262 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:50:07.262 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:50:07.262 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:50:07.262 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:50:07.263 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:50:07.263 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:50:07.311 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:50:07.311 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:50:07.312 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:50:07.312 | WARN  | sale_service | 250 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:50:07.323 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:50:07.323 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[], metadata=Metadata(to (truncated)...]
24/12/23 17:50:07.324 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:50:07.324 | WARN  | sale_service | 263 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:50:07.673 | INFO  | sale_service | 0 | DNSMonitor.java: Detected DNS change. Master redis://tcp.appengine.bfcplatform.vn:13437 has changed ip from 103.69.194.5 to 103.69.194.195
24/12/23 17:50:07.713 | INFO  | sale_service | 0 | ConnectionPool.java: 1 connections initialized for tcp.appengine.bfcplatform.vn/103.69.194.195:13437
24/12/23 17:50:08.057 | INFO  | sale_service | 0 | MasterSlaveEntry.java: master tcp.appengine.bfcplatform.vn/103.69.194.5:13437 has changed to tcp.appengine.bfcplatform.vn/103.69.194.195:13437
24/12/23 17:50:08.057 | INFO  | sale_service | 0 | ConnectionPool.java: 24 connections initialized for tcp.appengine.bfcplatform.vn/103.69.194.195:13437
24/12/23 17:50:10.059 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:50:10.060 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:50:10.062 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:50:10.062 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:50:10.176 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:50:10.176 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:50:10.278 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:50:10.280 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:50:10.281 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:50:10.281 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:50:10.284 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:50:10.285 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:50:10.341 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:50:10.341 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:50:10.341 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:50:10.341 | WARN  | sale_service | 281 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:50:10.343 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:50:10.343 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[], metadata=Metadata(to (truncated)...]
24/12/23 17:50:10.344 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:50:10.344 | WARN  | sale_service | 284 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:50:13.064 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:50:13.064 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:50:13.066 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:50:13.066 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:50:13.162 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:50:13.162 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:50:13.259 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:50:13.259 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:50:13.261 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:50:13.261 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:50:13.263 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:50:13.264 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:50:13.310 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:50:13.310 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[], metadata=Metadata(to (truncated)...]
24/12/23 17:50:13.311 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:50:13.311 | WARN  | sale_service | 247 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:50:13.322 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:50:13.323 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:50:13.324 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:50:13.324 | WARN  | sale_service | 260 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:50:16.051 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:50:16.051 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:50:16.054 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:50:16.054 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:50:16.176 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:50:16.178 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:50:16.297 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:50:16.296 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:50:16.297 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:50:16.297 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:50:16.298 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:50:16.299 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:50:16.350 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:50:16.350 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:50:16.350 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[], metadata=Metadata(to (truncated)...]
24/12/23 17:50:16.350 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:50:16.350 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:50:16.351 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:50:16.351 | WARN  | sale_service | 298 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:50:16.351 | WARN  | sale_service | 298 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:50:19.085 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:50:19.086 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:50:19.088 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:50:19.088 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:50:19.190 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:50:19.192 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:50:19.291 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:50:19.291 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:50:19.292 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:50:19.292 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:50:19.293 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:50:19.293 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:50:19.340 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:50:19.341 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:50:19.341 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:50:19.342 | WARN  | sale_service | 255 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:50:19.348 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:50:19.348 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[], metadata=Metadata(to (truncated)...]
24/12/23 17:50:19.349 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:50:19.350 | WARN  | sale_service | 263 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:50:22.049 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:50:22.049 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:50:22.051 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:50:22.051 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:50:22.144 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:50:22.154 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:50:22.241 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:50:22.241 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:50:22.242 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:50:22.246 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:50:22.246 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:50:22.247 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:50:22.297 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:50:22.298 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:50:22.298 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[], metadata=Metadata(to (truncated)...]
24/12/23 17:50:22.298 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:50:22.298 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:50:22.299 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:50:22.299 | WARN  | sale_service | 248 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:50:22.299 | WARN  | sale_service | 249 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:50:25.071 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:50:25.071 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:50:25.078 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:50:25.079 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:50:25.179 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:50:25.179 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:50:25.275 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:50:25.275 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:50:25.276 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:50:25.277 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:50:25.278 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:50:25.278 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:50:25.327 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:50:25.327 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:50:25.327 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[], metadata=Metadata(to (truncated)...]
24/12/23 17:50:25.327 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:50:25.327 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:50:25.328 | WARN  | sale_service | 254 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:50:25.328 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:50:25.329 | WARN  | sale_service | 254 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:50:28.054 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:50:28.055 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:50:28.056 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:50:28.056 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:50:28.156 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:50:28.156 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:50:28.262 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:50:28.263 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:50:28.264 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:50:28.264 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:50:28.265 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:50:28.266 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:50:28.309 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:50:28.309 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[], metadata=Metadata(to (truncated)...]
24/12/23 17:50:28.311 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:50:28.312 | WARN  | sale_service | 256 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:50:28.331 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:50:28.332 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:50:28.333 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:50:28.333 | WARN  | sale_service | 277 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:50:31.063 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:50:31.064 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:50:31.065 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:50:31.065 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:50:31.162 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:50:31.169 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:50:31.258 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:50:31.258 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:50:31.259 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:50:31.271 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:50:31.272 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:50:31.273 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:50:31.309 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:50:31.310 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:50:31.311 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:50:31.311 | WARN  | sale_service | 247 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:50:31.324 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:50:31.325 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[], metadata=Metadata(to (truncated)...]
24/12/23 17:50:31.327 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:50:31.327 | WARN  | sale_service | 263 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:50:34.059 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:50:34.059 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:50:34.061 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:50:34.061 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:50:34.156 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:50:34.156 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:50:34.250 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:50:34.251 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:50:34.253 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:50:34.259 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:50:34.260 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:50:34.263 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:50:34.300 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:50:34.300 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[], metadata=Metadata(to (truncated)...]
24/12/23 17:50:34.301 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:50:34.302 | WARN  | sale_service | 242 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:50:34.317 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:50:34.317 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:50:34.318 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:50:34.318 | WARN  | sale_service | 259 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:50:37.048 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:50:37.048 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:50:37.049 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:50:37.049 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:50:37.145 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:50:37.145 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:50:37.241 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:50:37.241 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:50:37.242 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:50:37.242 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:50:37.242 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:50:37.242 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:50:37.290 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:50:37.291 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:50:37.291 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:50:37.291 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[], metadata=Metadata(to (truncated)...]
24/12/23 17:50:37.292 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:50:37.292 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:50:37.292 | WARN  | sale_service | 244 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:50:37.292 | WARN  | sale_service | 244 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:50:40.062 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:50:40.063 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:50:40.068 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:50:40.069 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:50:40.190 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:50:40.190 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:50:40.288 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:50:40.288 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:50:40.288 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:50:40.288 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:50:40.289 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:50:40.289 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:50:40.347 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:50:40.348 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[], metadata=Metadata(to (truncated)...]
24/12/23 17:50:40.348 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:50:40.348 | WARN  | sale_service | 284 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:50:40.349 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:50:40.349 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:50:40.349 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:50:40.350 | WARN  | sale_service | 284 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:50:43.061 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:50:43.061 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:50:43.063 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:50:43.063 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:50:43.158 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:50:43.158 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:50:43.262 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:50:43.262 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:50:43.263 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:50:43.263 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:50:43.264 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:50:43.264 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:50:43.332 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:50:43.332 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[], metadata=Metadata(to (truncated)...]
24/12/23 17:50:43.332 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:50:43.332 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:50:43.333 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:50:43.333 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:50:43.333 | WARN  | sale_service | 270 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:50:43.333 | WARN  | sale_service | 271 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:50:46.071 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:50:46.077 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:50:46.087 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:50:46.089 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:50:46.187 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:50:46.204 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:50:46.304 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:50:46.304 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:50:46.305 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:50:46.305 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:50:46.306 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:50:46.306 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:50:46.356 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:50:46.356 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:50:46.357 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:50:46.357 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[], metadata=Metadata(to (truncated)...]
24/12/23 17:50:46.357 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:50:46.357 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:50:46.358 | WARN  | sale_service | 284 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:50:46.358 | WARN  | sale_service | 270 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:50:49.057 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:50:49.059 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:50:49.062 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:50:49.062 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:50:49.171 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:50:49.171 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:50:49.275 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:50:49.275 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:50:49.275 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:50:49.276 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:50:49.277 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:50:49.277 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:50:49.326 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:50:49.326 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:50:49.327 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[], metadata=Metadata(to (truncated)...]
24/12/23 17:50:49.327 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:50:49.327 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:50:49.327 | WARN  | sale_service | 267 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:50:49.329 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:50:49.329 | WARN  | sale_service | 268 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:50:52.048 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:50:52.049 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:50:52.054 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:50:52.056 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:50:52.146 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:50:52.154 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:50:52.248 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:50:52.248 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:50:52.248 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:50:52.249 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:50:52.250 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:50:52.250 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:50:52.296 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:50:52.296 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:50:52.296 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:50:52.296 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[], metadata=Metadata(to (truncated)...]
24/12/23 17:50:52.297 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:50:52.297 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:50:52.297 | WARN  | sale_service | 243 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:50:52.297 | WARN  | sale_service | 249 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:50:55.062 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:50:55.062 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:50:55.063 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:50:55.063 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:50:55.156 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:50:55.161 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:50:55.252 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:50:55.252 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:50:55.253 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:50:55.255 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:50:55.255 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:50:55.255 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:50:55.299 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:50:55.299 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:50:55.300 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:50:55.301 | WARN  | sale_service | 238 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:50:55.302 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:50:55.302 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[], metadata=Metadata(to (truncated)...]
24/12/23 17:50:55.303 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:50:55.303 | WARN  | sale_service | 240 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:50:58.047 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:50:58.047 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:50:58.048 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:50:58.048 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:50:58.142 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:50:58.142 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:50:58.234 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:50:58.234 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:50:58.234 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:50:58.234 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:50:58.235 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:50:58.235 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:50:58.283 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:50:58.283 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:50:58.283 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:50:58.283 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[], metadata=Metadata(to (truncated)...]
24/12/23 17:50:58.283 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:50:58.283 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:50:58.284 | WARN  | sale_service | 236 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:50:58.284 | WARN  | sale_service | 235 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:51:01.055 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:51:01.055 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:51:01.057 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:51:01.057 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:51:01.154 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:51:01.154 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:51:01.251 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:51:01.252 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:51:01.252 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:51:01.252 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:51:01.253 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:51:01.253 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:51:01.307 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:51:01.307 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:51:01.307 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:51:01.307 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[], metadata=Metadata(to (truncated)...]
24/12/23 17:51:01.308 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:51:01.308 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:51:01.308 | WARN  | sale_service | 253 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:51:01.308 | WARN  | sale_service | 253 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:51:03.279 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:51:03.280 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:51:03.281 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:51:03.281 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:51:03.373 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:51:03.378 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:51:03.465 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:51:03.465 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:51:03.466 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:51:03.471 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:51:03.471 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:51:03.472 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:51:03.514 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:51:03.514 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:51:03.515 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:51:03.515 | WARN  | sale_service | 235 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:51:03.519 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:51:03.520 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[], metadata=Metadata(to (truncated)...]
24/12/23 17:51:03.520 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:51:03.521 | WARN  | sale_service | 241 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:51:03.553 | INFO  | sale_service | 0 | WebSocketMessageBrokerStats.java: WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
24/12/23 17:51:05.099 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotificationDetail(Authentication, String)
24/12/23 17:51:05.102 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotificationDetail(Authentication, String)
24/12/23 17:51:05.104 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:51:05.198 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:51:05.300 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/detail?notificationId=6587faf87fc9111514afa565", parameters={masked}
24/12/23 17:51:05.300 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotificationDetail(Authentication, String)
24/12/23 17:51:05.315 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "_id" : { "$oid" : "6587faf87fc9111514afa565"}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:51:05.373 | DEBUG | sale_service | 0 | MongoTemplate.java: Saving Document containing fields: [_id, username, title, img_url, content, notification_status, notification_type, ref_id, created_at, updated_at, _class]
24/12/23 17:51:05.441 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:51:05.441 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=NotificationDetailResponse(content=Bạn đã  (truncated)...]
24/12/23 17:51:05.442 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:51:05.443 | WARN  | sale_service | 245 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/detail?notificationId=6587faf87fc9111514afa565
24/12/23 17:51:05.443 | WARN  | sale_service | 340 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/detail?notificationId=6587faf87fc9111514afa565
24/12/23 17:51:06.280 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:51:06.280 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:51:06.281 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:51:06.281 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:51:06.374 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:51:06.376 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:51:06.471 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:51:06.471 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:51:06.472 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:51:06.477 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:51:06.478 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:51:06.479 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:51:06.530 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:51:06.530 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[], metadata=Metadata(to (truncated)...]
24/12/23 17:51:06.530 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:51:06.531 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[], metadata=Metadata(to (truncated)...]
24/12/23 17:51:06.532 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:51:06.531 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:51:06.532 | WARN  | sale_service | 252 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:51:06.532 | WARN  | sale_service | 252 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:51:07.948 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.publicControllers.PublicProductController#getAllProduct(String, String, Double, Double, String, String, String, String, Boolean, Long, Long, Authentication, Pageable)
24/12/23 17:51:07.950 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:51:08.050 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:51:08.144 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/public/product?page=0&size=12", parameters={masked}
24/12/23 17:51:08.144 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.publicControllers.PublicProductController#getAllProduct(String, String, Double, Double, String, String, String, String, Boolean, Long, Long, Authentication, Pageable)
24/12/23 17:51:08.149 | INFO  | sale_service | 0 | PublicProductController.java: getProductDetail with username: {lambro25102001}
24/12/23 17:51:08.156 | DEBUG | sale_service | 0 | MongoTemplate.java: Executing count: {} in collection: product
24/12/23 17:51:08.212 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: {} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Product in collection: product
24/12/23 17:51:08.325 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "product_id" : { "$in" : ["6532bbe5fae6d41599929246", "6535339b8d69bd44723ba6fb", "653609f1e14dd822b9121ad3", "65360a97e14dd822b9121ad4", "65360b29e14dd822b9121ad5", "653a7660a4b25b73765c1cda", "655cdfb9524e3f7af0d0b842", "655ce106524e3f7af0d0b84d", "655ce182524e3f7af0d0b850", "655ce1fb524e3f7af0d0b857", "655ce3dd524e3f7af0d0b85e", "6565806a6c78c45470cf8554"]}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.ProductStatistic in collection: product_statistic
24/12/23 17:51:09.027 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:51:09.045 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[ProductDataResponse(pro (truncated)...]
24/12/23 17:51:09.048 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:51:09.048 | WARN  | sale_service | 998 | AuthTokenFilter.java: end request ==> GET  /api/v1/public/product?page=0&size=12
24/12/23 17:51:09.049 | WARN  | sale_service | 1099 | AuthTokenFilter.java: end request ==> GET  /api/v1/public/product?page=0&size=12
24/12/23 17:51:09.277 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:51:09.277 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:51:09.279 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:51:09.279 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:51:09.372 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:51:09.374 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:51:09.465 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:51:09.465 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:51:09.466 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:51:09.466 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:51:09.466 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:51:09.467 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:51:09.514 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:51:09.514 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:51:09.515 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[], metadata=Metadata(to (truncated)...]
24/12/23 17:51:09.515 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[], metadata=Metadata(to (truncated)...]
24/12/23 17:51:09.515 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:51:09.515 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:51:09.515 | WARN  | sale_service | 236 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:51:09.515 | WARN  | sale_service | 236 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:51:10.236 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.publicControllers.PublicRatingController#getRatingProduct(String, Pageable)
24/12/23 17:51:10.236 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.publicControllers.PublicProductController#getProductDetail(Authentication, String)
24/12/23 17:51:10.239 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.publicControllers.PublicProductController#getSuggestProduct(String)
24/12/23 17:51:10.239 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:51:10.239 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.publicControllers.PublicVoucherController#getPublicVoucher(Authentication, String)
24/12/23 17:51:10.239 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:51:10.241 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:51:10.241 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:51:10.334 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:51:10.334 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:51:10.437 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/public/product/6532bbe5fae6d41599929246", parameters={}
24/12/23 17:51:10.437 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/public/rating/product/6532bbe5fae6d41599929246?page=0&size=6", parameters={masked}
24/12/23 17:51:10.437 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.publicControllers.PublicProductController#getProductDetail(Authentication, String)
24/12/23 17:51:10.437 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.publicControllers.PublicRatingController#getRatingProduct(String, Pageable)
24/12/23 17:51:10.438 | INFO  | sale_service | 0 | PublicProductController.java: getProductDetail with username: {lambro25102001}
24/12/23 17:51:10.440 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "ref_id" : "6532bbe5fae6d41599929246", "rating_type" : "PRODUCT"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Rating in collection: rating
24/12/23 17:51:10.446 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "product_id" : "6532bbe5fae6d41599929246", "daily" : { "$date" : "2023-12-23T17:00:00Z"}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.ProductStatistic in collection: product_statistic
24/12/23 17:51:10.475 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "_id" : { "$in" : [{ "$oid" : "651d84c5a4cd6f49416b6fda"}]}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.SellerStore in collection: store
24/12/23 17:51:10.506 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:51:10.498 | ERROR | sale_service | 0 | SimpleAsyncUncaughtExceptionHandler.java: Unexpected exception occurred invoking async method: public void com.salespage.salespageservice.domains.services.StatisticService.updateView(java.lang.String)
java.lang.NullPointerException: null
	at com.salespage.salespageservice.domains.services.StatisticService.updateView(StatisticService.java:29) ~[classes/:?]
	at com.salespage.salespageservice.domains.services.StatisticService$$FastClassBySpringCGLIB$$9ffee42.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.3.23.jar:5.3.23]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793) ~[spring-aop-5.3.23.jar:5.3.23]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.3.23.jar:5.3.23]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.23.jar:5.3.23]
	at org.springframework.aop.interceptor.AsyncExecutionInterceptor.lambda$invoke$0(AsyncExecutionInterceptor.java:115) ~[spring-aop-5.3.23.jar:5.3.23]
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:264) ~[?:?]
	at java.util.concurrent.FutureTask.run(FutureTask.java) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) ~[?:?]
	at java.lang.Thread.run(Thread.java:829) ~[?:?]
24/12/23 17:51:10.515 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Rating(id=657dcd18f11b7 (truncated)...]
24/12/23 17:51:10.525 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:51:10.525 | WARN  | sale_service | 288 | AuthTokenFilter.java: end request ==> GET  /api/v1/public/rating/product/6532bbe5fae6d41599929246?page=0&size=6
24/12/23 17:51:10.581 | DEBUG | sale_service | 0 | MongoTemplate.java: findOne using query: { "id" : { "$oid" : "6532bb2ffae6d41599929245"}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.ProductCategory in collection: product_category
24/12/23 17:51:10.584 | DEBUG | sale_service | 0 | MongoTemplate.java: findOne using query: { "_id" : { "$oid" : "6532bb2ffae6d41599929245"}} fields: {} in db.collection: db-salespage.product_category
24/12/23 17:51:10.670 | INFO  | sale_service | 0 | SLF4JLogger.java: Opened connection [connectionId{localValue:9, serverValue:83704}] to ac-jh96ukw-shard-00-02.h9186rq.mongodb.net:27017
24/12/23 17:51:10.694 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "product_id" : "6532bbe5fae6d41599929246", "daily" : { "$date" : "2023-12-23T17:00:00Z"}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.ProductStatistic in collection: product_statistic
24/12/23 17:51:10.738 | INFO  | sale_service | 0 | SLF4JLogger.java: Opened connection [connectionId{localValue:10, serverValue:83704}] to ac-jh96ukw-shard-00-02.h9186rq.mongodb.net:27017
24/12/23 17:51:10.756 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "product_id" : "6532bbe5fae6d41599929246"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.ProductDetail in collection: product_detail
24/12/23 17:51:10.788 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:51:10.831 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:51:10.881 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/public/product/suggest/6532bbe5fae6d41599929246", parameters={}
24/12/23 17:51:10.882 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.publicControllers.PublicProductController#getSuggestProduct(String)
24/12/23 17:51:10.898 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "category_id" : "6532bb2ffae6d41599929245"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Product in collection: product
24/12/23 17:51:10.926 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/public/voucher/6532bbe5fae6d41599929246", parameters={}
24/12/23 17:51:10.926 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.publicControllers.PublicVoucherController#getPublicVoucher(Authentication, String)
24/12/23 17:51:10.943 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "voucher_store_type" : "PRODUCT", "ref_id" : "6532bbe5fae6d41599929246"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherStore in collection: voucher_store
24/12/23 17:51:10.948 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: {} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.ProductStatistic in collection: product_statistic
24/12/23 17:51:10.995 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "voucher_store_type" : "STORE", "ref_id" : "651d84c5a4cd6f49416b6fda"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherStore in collection: voucher_store
24/12/23 17:51:11.000 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "_id" : { "$in" : [{ "$oid" : "6532bbe5fae6d41599929246"}]}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Product in collection: product
24/12/23 17:51:11.041 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "voucher_store_id" : { "$in" : ["65846511d48c0b1c77d1ee61", "6587e666208da64222b26afc"]}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherCodeLimit in collection: voucher_code_limit
24/12/23 17:51:11.050 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:51:11.050 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=[ProductDataResponse(productId=653a7660a4b (truncated)...]
24/12/23 17:51:11.052 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:51:11.053 | WARN  | sale_service | 265 | AuthTokenFilter.java: end request ==> GET  /api/v1/public/product/suggest/6532bbe5fae6d41599929246
24/12/23 17:51:11.053 | WARN  | sale_service | 813 | AuthTokenFilter.java: end request ==> GET  /api/v1/public/product/suggest/6532bbe5fae6d41599929246
24/12/23 17:51:11.096 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:51:11.110 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=[UserVoucherResponse(voucherStoreName=Giảm (truncated)...]
24/12/23 17:51:11.112 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:51:11.113 | WARN  | sale_service | 281 | AuthTokenFilter.java: end request ==> GET  /api/v1/public/voucher/6532bbe5fae6d41599929246
24/12/23 17:51:11.113 | WARN  | sale_service | 872 | AuthTokenFilter.java: end request ==> GET  /api/v1/public/voucher/6532bbe5fae6d41599929246
24/12/23 17:51:11.165 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "ref_id" : "6532bbe5fae6d41599929246", "favorite_type" : "PRODUCT"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.UserFavorite in collection: user_favarite
24/12/23 17:51:11.223 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "ref_id" : "6532bbe5fae6d41599929246", "rating_type" : "PRODUCT"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Rating in collection: rating
24/12/23 17:51:11.271 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:51:11.322 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=ProductDetailResponse(totalSell=null, tota (truncated)...]
24/12/23 17:51:11.326 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:51:11.327 | WARN  | sale_service | 993 | AuthTokenFilter.java: end request ==> GET  /api/v1/public/product/6532bbe5fae6d41599929246
24/12/23 17:51:11.327 | WARN  | sale_service | 1090 | AuthTokenFilter.java: end request ==> GET  /api/v1/public/product/6532bbe5fae6d41599929246
24/12/23 17:51:12.294 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:51:12.296 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:51:12.299 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:51:12.300 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:51:12.412 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:51:12.416 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:51:12.506 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:51:12.506 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:51:12.507 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:51:12.519 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:51:12.519 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:51:12.520 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:51:12.562 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:51:12.562 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[], metadata=Metadata(to (truncated)...]
24/12/23 17:51:12.563 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:51:12.564 | WARN  | sale_service | 268 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:51:12.576 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:51:12.576 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[], metadata=Metadata(to (truncated)...]
24/12/23 17:51:12.577 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:51:12.578 | WARN  | sale_service | 280 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:51:13.963 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.VoucherController#receiveVoucher(Authentication, String)
24/12/23 17:51:13.965 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.VoucherController#receiveVoucher(Authentication, String)
24/12/23 17:51:13.967 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:51:14.062 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:51:14.156 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/voucher/receive/voucher-code?voucherStoreId=65846511d48c0b1c77d1ee61", parameters={masked}
24/12/23 17:51:14.157 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.VoucherController#receiveVoucher(Authentication, String)
24/12/23 17:51:19.893 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:51:19.893 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:51:19.898 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:51:19.898 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:51:19.945 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "_id" : { "$oid" : "65846511d48c0b1c77d1ee61"}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherStore in collection: voucher_store
24/12/23 17:51:19.995 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:51:19.995 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:51:20.013 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "voucher_store_id" : "65846511d48c0b1c77d1ee61"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherCodeLimit in collection: voucher_code_limit
24/12/23 17:51:20.093 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:51:20.094 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:51:20.096 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:51:20.096 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:51:20.097 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:51:20.099 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:51:20.120 | ERROR | sale_service | 0 | BaseController.java: BaseException(code=20)
24/12/23 17:51:20.121 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:51:20.121 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=true, message=Bạn đã nhận tối đa số lượng mã giảm giá, data=null)]
24/12/23 17:51:20.122 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:51:20.122 | WARN  | sale_service | 6060 | AuthTokenFilter.java: end request ==> GET  /api/v1/voucher/receive/voucher-code?voucherStoreId=65846511d48c0b1c77d1ee61
24/12/23 17:51:20.122 | WARN  | sale_service | 6155 | AuthTokenFilter.java: end request ==> GET  /api/v1/voucher/receive/voucher-code?voucherStoreId=65846511d48c0b1c77d1ee61
24/12/23 17:51:20.126 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.publicControllers.PublicVoucherController#getPublicVoucher(Authentication, String)
24/12/23 17:51:20.128 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:51:20.144 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:51:20.144 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[], metadata=Metadata(to (truncated)...]
24/12/23 17:51:20.144 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:51:20.145 | WARN  | sale_service | 251 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:51:20.145 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:51:20.147 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:51:20.150 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:51:20.150 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[], metadata=Metadata(to (truncated)...]
24/12/23 17:51:20.150 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:51:20.151 | WARN  | sale_service | 257 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:51:20.152 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:51:20.153 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:51:20.225 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:51:20.249 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:51:20.250 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:51:20.320 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/public/voucher/6532bbe5fae6d41599929246", parameters={}
24/12/23 17:51:20.320 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.publicControllers.PublicVoucherController#getPublicVoucher(Authentication, String)
24/12/23 17:51:20.332 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "voucher_store_type" : "PRODUCT", "ref_id" : "6532bbe5fae6d41599929246"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherStore in collection: voucher_store
24/12/23 17:51:20.347 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:51:20.347 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:51:20.347 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:51:20.347 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:51:20.348 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:51:20.348 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:51:20.380 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "voucher_store_type" : "STORE", "ref_id" : "651d84c5a4cd6f49416b6fda"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherStore in collection: voucher_store
24/12/23 17:51:20.403 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:51:20.403 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:51:20.403 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[], metadata=Metadata(to (truncated)...]
24/12/23 17:51:20.403 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[], metadata=Metadata(to (truncated)...]
24/12/23 17:51:20.403 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:51:20.403 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:51:20.403 | WARN  | sale_service | 251 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:51:20.403 | WARN  | sale_service | 257 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:51:20.426 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "voucher_store_id" : { "$in" : ["65846511d48c0b1c77d1ee61", "6587e666208da64222b26afc"]}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherCodeLimit in collection: voucher_code_limit
24/12/23 17:51:20.473 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:51:20.474 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=[UserVoucherResponse(voucherStoreName=Giảm (truncated)...]
24/12/23 17:51:20.475 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:51:20.475 | WARN  | sale_service | 251 | AuthTokenFilter.java: end request ==> GET  /api/v1/public/voucher/6532bbe5fae6d41599929246
24/12/23 17:51:20.475 | WARN  | sale_service | 348 | AuthTokenFilter.java: end request ==> GET  /api/v1/public/voucher/6532bbe5fae6d41599929246
24/12/23 17:51:21.285 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:51:21.285 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:51:21.287 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:51:21.290 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:51:21.395 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:51:21.396 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:51:21.494 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:51:21.495 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:51:21.496 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:51:21.498 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:51:21.498 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:51:21.499 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:51:21.540 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:51:21.541 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[], metadata=Metadata(to (truncated)...]
24/12/23 17:51:21.541 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:51:21.541 | WARN  | sale_service | 252 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:51:21.546 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:51:21.547 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[], metadata=Metadata(to (truncated)...]
24/12/23 17:51:21.548 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:51:21.548 | WARN  | sale_service | 262 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:51:22.402 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.VoucherController#receiveVoucher(Authentication, String)
24/12/23 17:51:22.405 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.VoucherController#receiveVoucher(Authentication, String)
24/12/23 17:51:22.406 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:51:22.499 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:51:22.598 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/voucher/receive/voucher-code?voucherStoreId=6587e666208da64222b26afc", parameters={masked}
24/12/23 17:51:22.599 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.VoucherController#receiveVoucher(Authentication, String)
24/12/23 17:51:22.611 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "_id" : { "$oid" : "6587e666208da64222b26afc"}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherStore in collection: voucher_store
24/12/23 17:51:22.688 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "voucher_store_id" : "6587e666208da64222b26afc"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherCodeLimit in collection: voucher_code_limit
24/12/23 17:51:22.738 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "voucher_store_id" : "6587e666208da64222b26afc", "expire_time" : { "$gt" : 1703415082736}, "voucher_code_status" : "NEW"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherCode in collection: voucher_code
24/12/23 17:51:22.790 | DEBUG | sale_service | 0 | MongoTemplate.java: Saving Document containing fields: [_id, voucher_store_id, owner_id, code, expire_time, voucher_code_status, created_at, updated_at, _class]
24/12/23 17:51:22.872 | DEBUG | sale_service | 0 | MongoTemplate.java: Inserting Document containing fields: [username, voucher_store_id, number_receive_voucher, _class] in collection: voucher_code_limit
24/12/23 17:51:22.928 | DEBUG | sale_service | 0 | MongoTemplate.java: Saving Document containing fields: [_id, voucher_store_name, voucher_store_type, ref_id, discount_type, value, voucher_store_detail, voucher_store_status, created_by, created_at, updated_at, _class]
24/12/23 17:51:23.048 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:51:23.048 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=Nhận mã voucher thành công, data=xP7Nep2m3I)]
24/12/23 17:51:23.048 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:51:23.048 | WARN  | sale_service | 550 | AuthTokenFilter.java: end request ==> GET  /api/v1/voucher/receive/voucher-code?voucherStoreId=6587e666208da64222b26afc
24/12/23 17:51:23.049 | WARN  | sale_service | 644 | AuthTokenFilter.java: end request ==> GET  /api/v1/voucher/receive/voucher-code?voucherStoreId=6587e666208da64222b26afc
24/12/23 17:51:23.053 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.publicControllers.PublicVoucherController#getPublicVoucher(Authentication, String)
24/12/23 17:51:23.054 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:51:23.151 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:51:23.250 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/public/voucher/6532bbe5fae6d41599929246", parameters={}
24/12/23 17:51:23.252 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.publicControllers.PublicVoucherController#getPublicVoucher(Authentication, String)
24/12/23 17:51:23.269 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "voucher_store_type" : "PRODUCT", "ref_id" : "6532bbe5fae6d41599929246"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherStore in collection: voucher_store
24/12/23 17:51:23.318 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "voucher_store_type" : "STORE", "ref_id" : "651d84c5a4cd6f49416b6fda"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherStore in collection: voucher_store
24/12/23 17:51:23.366 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "voucher_store_id" : { "$in" : ["65846511d48c0b1c77d1ee61", "6587e666208da64222b26afc"]}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherCodeLimit in collection: voucher_code_limit
24/12/23 17:51:23.416 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:51:23.417 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=[UserVoucherResponse(voucherStoreName=Giảm (truncated)...]
24/12/23 17:51:23.419 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:51:23.420 | WARN  | sale_service | 271 | AuthTokenFilter.java: end request ==> GET  /api/v1/public/voucher/6532bbe5fae6d41599929246
24/12/23 17:51:23.420 | WARN  | sale_service | 366 | AuthTokenFilter.java: end request ==> GET  /api/v1/public/voucher/6532bbe5fae6d41599929246
24/12/23 17:51:24.283 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:51:24.286 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:51:24.288 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:51:24.289 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:51:24.398 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:51:24.398 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:51:24.494 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:51:24.494 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:51:24.495 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:51:24.496 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:51:24.496 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:51:24.497 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:51:24.546 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:51:24.546 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:51:24.546 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[], metadata=Metadata(to (truncated)...]
24/12/23 17:51:24.546 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[], metadata=Metadata(to (truncated)...]
24/12/23 17:51:24.548 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:51:24.548 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:51:24.549 | WARN  | sale_service | 262 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:51:24.549 | WARN  | sale_service | 264 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:51:27.279 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:51:27.280 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:51:27.282 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:51:27.282 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:51:27.387 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:51:27.387 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:51:27.485 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:51:27.485 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:51:27.485 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:51:27.485 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:51:27.486 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:51:27.486 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:51:27.533 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:51:27.533 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[], metadata=Metadata(to (truncated)...]
24/12/23 17:51:27.534 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:51:27.534 | WARN  | sale_service | 254 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:51:27.539 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:51:27.539 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[], metadata=Metadata(to (truncated)...]
24/12/23 17:51:27.540 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:51:27.540 | WARN  | sale_service | 260 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:51:28.723 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#createCart(Authentication, CartDto)
24/12/23 17:51:28.724 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#createCart(Authentication, CartDto)
24/12/23 17:51:28.725 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:51:28.825 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:51:28.921 | DEBUG | sale_service | 0 | LogFormatUtils.java: POST "/api/v1/cart", parameters={}
24/12/23 17:51:28.922 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#createCart(Authentication, CartDto)
24/12/23 17:51:28.932 | DEBUG | sale_service | 0 | LogFormatUtils.java: Read "application/json;charset=UTF-8" to [CartDto(productDetailId=6532bc2ffae6d41599929247, quantity=5, storeId=651d84c5a4cd6f49416b6fda, vouc (truncated)...]
24/12/23 17:51:28.984 | WARN  | sale_service | 0 | PersistenceProviderResolverHolder.java: javax.persistence.spi::No valid providers found.
24/12/23 17:51:29.007 | DEBUG | sale_service | 0 | MongoTemplate.java: findOne using query: { "id" : { "$oid" : "6532bc2ffae6d41599929247"}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.ProductDetail in collection: product_detail
24/12/23 17:51:29.007 | DEBUG | sale_service | 0 | MongoTemplate.java: findOne using query: { "_id" : { "$oid" : "6532bc2ffae6d41599929247"}} fields: {} in db.collection: db-salespage.product_detail
24/12/23 17:51:29.108 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "product_detail_id" : "6532bc2ffae6d41599929247"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:51:29.172 | DEBUG | sale_service | 0 | MongoTemplate.java: Inserting Document containing fields: [username, title, img_url, content, notification_status, notification_type, ref_id, created_at, updated_at, _class] in collection: notification
24/12/23 17:51:29.227 | DEBUG | sale_service | 0 | MongoTemplate.java: Saving Document containing fields: [_id, product_detail_id, product_name, username, store_id, quantity, created_at, updated_at, _class]
24/12/23 17:51:29.304 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:51:29.304 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=Thêm vào giỏ hàng thành công, data=null)]
24/12/23 17:51:29.305 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:51:29.305 | WARN  | sale_service | 482 | AuthTokenFilter.java: end request ==> POST  /api/v1/cart
24/12/23 17:51:29.305 | WARN  | sale_service | 579 | AuthTokenFilter.java: end request ==> POST  /api/v1/cart
24/12/23 17:51:30.283 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:51:30.283 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:51:30.284 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:51:30.284 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:51:30.381 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:51:30.381 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:51:30.475 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:51:30.475 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:51:30.476 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:51:30.476 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:51:30.476 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:51:30.476 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:51:30.522 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:51:30.522 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:51:30.523 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:51:30.523 | WARN  | sale_service | 239 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:51:30.524 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:51:30.524 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880d30a10d1b5 (truncated)...]
24/12/23 17:51:30.526 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:51:30.527 | WARN  | sale_service | 244 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:51:32.585 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:51:32.585 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:51:32.586 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:51:32.586 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:51:32.606 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getProductCart(Authentication)
24/12/23 17:51:32.607 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:51:32.706 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:51:32.706 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:51:32.735 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:51:32.799 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:51:32.799 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:51:32.799 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:51:32.800 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:51:32.800 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:51:32.800 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:51:32.828 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart", parameters={}
24/12/23 17:51:32.828 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getProductCart(Authentication)
24/12/23 17:51:35.698 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:51:35.698 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:51:35.698 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880d30a10d1b5 (truncated)...]
24/12/23 17:51:35.699 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:51:35.699 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:51:35.699 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:51:35.699 | WARN  | sale_service | 2993 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:51:35.699 | WARN  | sale_service | 3113 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:51:35.699 | WARN  | sale_service | 2993 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:51:35.702 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:51:35.700 | WARN  | sale_service | 3115 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:51:35.702 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:51:35.706 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:51:35.706 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:51:35.718 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:51:35.797 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "_id" : { "$in" : [{ "$oid" : "6532bc2ffae6d41599929247"}]}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.ProductDetail in collection: product_detail
24/12/23 17:51:35.804 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:51:35.804 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:51:35.878 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "_id" : { "$in" : [{ "$oid" : "6532bbe5fae6d41599929246"}]}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Product in collection: product
24/12/23 17:51:35.897 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:51:35.897 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:51:35.897 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:51:35.897 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:51:35.898 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:51:35.898 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:51:35.945 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:51:35.945 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:51:35.945 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:51:35.945 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880d30a10d1b5 (truncated)...]
24/12/23 17:51:35.945 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:51:35.945 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:51:35.945 | WARN  | sale_service | 240 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:51:35.945 | WARN  | sale_service | 240 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:51:35.953 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "_id" : { "$in" : [{ "$oid" : "6532bb2ffae6d41599929245"}]}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.ProductCategory in collection: product_category
24/12/23 17:51:36.016 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "_id" : { "$in" : [{ "$oid" : "651d84c5a4cd6f49416b6fda"}]}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.SellerStore in collection: store
24/12/23 17:51:36.091 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "product_id" : { "$in" : ["6532bbe5fae6d41599929246"]}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.ProductComboDetail in collection: product_combo_detail
24/12/23 17:51:36.170 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "voucher_store_type" : "PRODUCT", "ref_id" : { "$in" : ["6532bbe5fae6d41599929246"]}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherStore in collection: voucher_store
24/12/23 17:51:36.933 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "voucher_store_id" : { "$in" : ["65846511d48c0b1c77d1ee61", "6587e666208da64222b26afc"]}, "owner_id" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherCode in collection: voucher_code
24/12/23 17:51:37.081 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "_id" : { "$oid" : "6581bc657f9bde440a01886f"}, "state" : "ACTIVE"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.ProductCombo in collection: product_combo
24/12/23 17:51:37.219 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "_id" : { "$in" : [{ "$oid" : "6532bbe5fae6d41599929246"}, { "$oid" : "6535339b8d69bd44723ba6fb"}, { "$oid" : "655cdfb9524e3f7af0d0b842"}, { "$oid" : "653a7660a4b25b73765c1cda"}, { "$oid" : "658447aff3cf2559f4affd5e"}]}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Product in collection: product
24/12/23 17:51:37.285 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:51:37.313 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=[CartByStoreResponse(storeId=651d84c5a4cd6 (truncated)...]
24/12/23 17:51:37.315 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:51:37.316 | WARN  | sale_service | 4581 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart
24/12/23 17:51:37.316 | WARN  | sale_service | 4709 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart
24/12/23 17:51:37.376 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.VoucherController#getUserVoucher(Authentication, String)
24/12/23 17:51:37.377 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:51:37.469 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:51:37.560 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/voucher/user/voucher?productId=6532bbe5fae6d41599929246", parameters={masked}
24/12/23 17:51:37.561 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.VoucherController#getUserVoucher(Authentication, String)
24/12/23 17:51:37.576 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "voucher_store_type" : "PRODUCT", "ref_id" : "6532bbe5fae6d41599929246"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherStore in collection: voucher_store
24/12/23 17:51:37.625 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "voucher_store_type" : "STORE", "ref_id" : "651d84c5a4cd6f49416b6fda"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherStore in collection: voucher_store
24/12/23 17:51:37.673 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "owner_id" : "lambro25102001", "voucher_store_id" : "65846511d48c0b1c77d1ee61", "voucher_code_status" : "OWNER", "expire_time" : { "$gt" : 1703415097672}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherCode in collection: voucher_code
24/12/23 17:51:37.722 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "owner_id" : "lambro25102001", "voucher_store_id" : "6587e666208da64222b26afc", "voucher_code_status" : "OWNER", "expire_time" : { "$gt" : 1703415097721}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherCode in collection: voucher_code
24/12/23 17:51:37.772 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:51:37.773 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=[UserVoucherResponse(voucherStoreName=Giảm (truncated)...]
24/12/23 17:51:37.774 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:51:37.775 | WARN  | sale_service | 306 | AuthTokenFilter.java: end request ==> GET  /api/v1/voucher/user/voucher?productId=6532bbe5fae6d41599929246
24/12/23 17:51:37.776 | WARN  | sale_service | 399 | AuthTokenFilter.java: end request ==> GET  /api/v1/voucher/user/voucher?productId=6532bbe5fae6d41599929246
24/12/23 17:51:38.521 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:51:38.521 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:51:38.522 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:51:38.522 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:51:38.618 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:51:38.619 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:51:38.711 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:51:38.711 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:51:38.711 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:51:38.711 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:51:38.712 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:51:38.712 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:51:38.757 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:51:38.758 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:51:38.758 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:51:38.758 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880d30a10d1b5 (truncated)...]
24/12/23 17:51:38.759 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:51:38.759 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:51:38.759 | WARN  | sale_service | 237 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:51:38.759 | WARN  | sale_service | 237 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:51:41.529 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:51:41.531 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:51:41.533 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:51:41.534 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:51:41.629 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:51:41.629 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:51:41.721 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:51:41.721 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:51:41.722 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:51:41.722 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:51:41.722 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:51:41.722 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:51:41.788 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:51:41.788 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:51:41.789 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:51:41.789 | WARN  | sale_service | 256 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:51:41.795 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:51:41.796 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880d30a10d1b5 (truncated)...]
24/12/23 17:51:41.796 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:51:41.796 | WARN  | sale_service | 265 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:51:44.530 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:51:44.530 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:51:44.531 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:51:44.531 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:51:44.645 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:51:44.738 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:51:44.739 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:51:44.740 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:51:44.785 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:51:44.786 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:51:44.786 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:51:44.786 | WARN  | sale_service | 255 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:51:44.894 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:51:44.987 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:51:44.988 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:51:44.990 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:51:45.043 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:51:45.043 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880d30a10d1b5 (truncated)...]
24/12/23 17:51:45.044 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:51:45.044 | WARN  | sale_service | 513 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:51:47.532 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:51:47.532 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:51:47.533 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:51:47.533 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:51:47.632 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:51:47.633 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:51:47.733 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:51:47.734 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:51:47.735 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:51:47.744 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:51:47.745 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:51:47.745 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:51:47.789 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:51:47.789 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:51:47.789 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:51:47.790 | WARN  | sale_service | 257 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:51:47.794 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:51:47.794 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880d30a10d1b5 (truncated)...]
24/12/23 17:51:47.794 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:51:47.794 | WARN  | sale_service | 261 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:51:50.530 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:51:50.530 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:51:50.533 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:51:50.533 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:51:50.632 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:51:50.632 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:51:50.724 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:51:50.725 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:51:50.725 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:51:50.727 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:51:50.727 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:51:50.728 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:51:50.776 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:51:50.776 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:51:50.776 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:51:50.776 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880d30a10d1b5 (truncated)...]
24/12/23 17:51:50.777 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:51:50.777 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:51:50.777 | WARN  | sale_service | 246 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:51:50.777 | WARN  | sale_service | 245 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:51:53.529 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:51:53.530 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:51:53.530 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:51:53.530 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:51:53.632 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:51:53.639 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:51:53.740 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:51:53.740 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:51:53.740 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:51:53.740 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:51:53.741 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:51:53.741 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:51:53.786 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:51:53.786 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:51:53.786 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:51:53.786 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880d30a10d1b5 (truncated)...]
24/12/23 17:51:53.786 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:51:53.786 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:51:53.786 | WARN  | sale_service | 256 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:51:53.786 | WARN  | sale_service | 256 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:51:56.526 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:51:56.527 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:51:56.527 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:51:56.528 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:51:56.623 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:51:56.623 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:51:56.737 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:51:56.737 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:51:56.738 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:51:56.738 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:51:56.739 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:51:56.739 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:51:56.789 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:51:56.789 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:51:56.789 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880d30a10d1b5 (truncated)...]
24/12/23 17:51:56.789 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:51:56.789 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:51:56.789 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:51:56.790 | WARN  | sale_service | 263 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:51:56.790 | WARN  | sale_service | 263 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:51:59.543 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:51:59.543 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:51:59.544 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:51:59.544 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:51:59.636 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:51:59.640 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:51:59.744 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:51:59.744 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:51:59.744 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:51:59.744 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:51:59.744 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:51:59.744 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:51:59.790 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:51:59.790 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:51:59.791 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:51:59.791 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880d30a10d1b5 (truncated)...]
24/12/23 17:51:59.791 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:51:59.791 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:51:59.791 | WARN  | sale_service | 247 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:51:59.791 | WARN  | sale_service | 247 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:52:01.610 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getProductCart(Authentication)
24/12/23 17:52:01.612 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:52:01.722 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:52:01.825 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart", parameters={}
24/12/23 17:52:01.825 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getProductCart(Authentication)
24/12/23 17:52:04.972 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:52:04.972 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:52:04.973 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:52:04.973 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:52:05.076 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:52:05.076 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:52:05.078 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "_id" : { "$in" : [{ "$oid" : "651d84c5a4cd6f49416b6fda"}]}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.SellerStore in collection: store
24/12/23 17:52:05.170 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:52:05.170 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:52:05.171 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:52:05.179 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:52:05.179 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:52:05.180 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:52:05.185 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "voucher_store_type" : "PRODUCT", "ref_id" : { "$in" : ["6532bbe5fae6d41599929246"]}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherStore in collection: voucher_store
24/12/23 17:52:05.218 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:52:05.219 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:52:05.219 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:52:05.219 | WARN  | sale_service | 246 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:52:05.226 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:52:05.227 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880d30a10d1b5 (truncated)...]
24/12/23 17:52:05.227 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:52:05.227 | WARN  | sale_service | 254 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:52:07.034 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:52:07.034 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:52:07.036 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:52:07.037 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:52:07.148 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:52:07.148 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=[CartByStoreResponse(storeId=651d84c5a4cd6 (truncated)...]
24/12/23 17:52:07.148 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:52:07.149 | WARN  | sale_service | 5427 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart
24/12/23 17:52:07.149 | WARN  | sale_service | 5539 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart
24/12/23 17:52:07.151 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:52:07.159 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:52:07.198 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.VoucherController#getUserVoucher(Authentication, String)
24/12/23 17:52:07.199 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:52:07.261 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:52:07.261 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:52:07.261 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:52:07.261 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:52:07.261 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:52:07.261 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:52:07.292 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:52:07.308 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:52:07.308 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:52:07.308 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:52:07.308 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880d30a10d1b5 (truncated)...]
24/12/23 17:52:07.309 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:52:07.309 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:52:07.309 | WARN  | sale_service | 273 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:52:07.309 | WARN  | sale_service | 273 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:52:07.400 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/voucher/user/voucher?productId=6532bbe5fae6d41599929246", parameters={masked}
24/12/23 17:52:07.400 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.VoucherController#getUserVoucher(Authentication, String)
24/12/23 17:52:07.412 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "voucher_store_type" : "PRODUCT", "ref_id" : "6532bbe5fae6d41599929246"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherStore in collection: voucher_store
24/12/23 17:52:07.489 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "voucher_store_type" : "STORE", "ref_id" : "651d84c5a4cd6f49416b6fda"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherStore in collection: voucher_store
24/12/23 17:52:07.538 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "owner_id" : "lambro25102001", "voucher_store_id" : "65846511d48c0b1c77d1ee61", "voucher_code_status" : "OWNER", "expire_time" : { "$gt" : 1703415127537}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherCode in collection: voucher_code
24/12/23 17:52:07.586 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "owner_id" : "lambro25102001", "voucher_store_id" : "6587e666208da64222b26afc", "voucher_code_status" : "OWNER", "expire_time" : { "$gt" : 1703415127586}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherCode in collection: voucher_code
24/12/23 17:52:07.635 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:52:07.635 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=[UserVoucherResponse(voucherStoreName=Giảm (truncated)...]
24/12/23 17:52:07.637 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:52:07.638 | WARN  | sale_service | 346 | AuthTokenFilter.java: end request ==> GET  /api/v1/voucher/user/voucher?productId=6532bbe5fae6d41599929246
24/12/23 17:52:07.639 | WARN  | sale_service | 441 | AuthTokenFilter.java: end request ==> GET  /api/v1/voucher/user/voucher?productId=6532bbe5fae6d41599929246
24/12/23 17:52:08.522 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:52:08.523 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:52:08.524 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:52:08.524 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:52:08.629 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:52:08.629 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:52:08.725 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:52:08.725 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:52:08.727 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:52:08.729 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:52:08.730 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:52:08.731 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:52:08.773 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:52:08.773 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880d30a10d1b5 (truncated)...]
24/12/23 17:52:08.773 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:52:08.774 | WARN  | sale_service | 251 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:52:08.778 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:52:08.778 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:52:08.778 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:52:08.779 | WARN  | sale_service | 256 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:52:11.531 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:52:11.535 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:52:11.535 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:52:11.538 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:52:11.639 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:52:11.639 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:52:11.736 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:52:11.736 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:52:11.737 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:52:11.737 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:52:11.737 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:52:11.738 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:52:11.784 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:52:11.784 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:52:11.785 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880d30a10d1b5 (truncated)...]
24/12/23 17:52:11.785 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:52:11.787 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:52:11.788 | WARN  | sale_service | 251 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:52:11.792 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:52:11.792 | WARN  | sale_service | 259 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:52:14.529 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:52:14.529 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:52:14.531 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:52:14.531 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:52:14.632 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:52:14.632 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:52:14.726 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:52:14.726 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:52:14.726 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:52:14.727 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:52:14.727 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:52:14.727 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:52:14.773 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:52:14.773 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:52:14.773 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:52:14.773 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880d30a10d1b5 (truncated)...]
24/12/23 17:52:14.773 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:52:14.773 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:52:14.773 | WARN  | sale_service | 243 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:52:14.773 | WARN  | sale_service | 243 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:52:17.523 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:52:17.524 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:52:17.525 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:52:17.525 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:52:17.623 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:52:17.623 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:52:17.716 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:52:17.716 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:52:17.717 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:52:17.720 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:52:17.720 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:52:17.720 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:52:17.767 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:52:17.767 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:52:17.767 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880d30a10d1b5 (truncated)...]
24/12/23 17:52:17.767 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:52:17.767 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:52:17.767 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:52:17.767 | WARN  | sale_service | 242 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:52:17.767 | WARN  | sale_service | 243 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:52:18.917 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#updateCart(Authentication, String, Long, String)
24/12/23 17:52:18.919 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#updateCart(Authentication, String, Long, String)
24/12/23 17:52:18.920 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:52:19.016 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:52:19.117 | DEBUG | sale_service | 0 | LogFormatUtils.java: PUT "/api/v1/cart/65880d30a10d1b5728a693b0?quantity=5&voucherCodeId=65869a7f208da64222b26ab3", parameters={masked}
24/12/23 17:52:19.118 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#updateCart(Authentication, String, Long, String)
24/12/23 17:52:21.276 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:52:21.276 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:52:21.277 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:52:21.277 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:52:21.279 | DEBUG | sale_service | 0 | MongoTemplate.java: findOne using query: { "id" : { "$oid" : "65880d30a10d1b5728a693b0"}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:52:21.283 | DEBUG | sale_service | 0 | MongoTemplate.java: findOne using query: { "_id" : { "$oid" : "65880d30a10d1b5728a693b0"}} fields: {} in db.collection: db-salespage.cart
24/12/23 17:52:21.815 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:52:21.815 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:52:27.427 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "_id" : { "$oid" : "6532bbe5fae6d41599929246"}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Product in collection: product
24/12/23 17:52:27.458 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:52:27.458 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:52:27.458 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:52:27.458 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:52:27.459 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:52:27.459 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:52:27.505 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:52:27.505 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880d30a10d1b5 (truncated)...]
24/12/23 17:52:27.506 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:52:27.506 | WARN  | sale_service | 5692 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:52:27.507 | WARN  | sale_service | 6229 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:52:27.509 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:52:27.509 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:52:27.509 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:52:27.510 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:52:27.510 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:52:27.511 | WARN  | sale_service | 5697 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:52:27.511 | WARN  | sale_service | 6233 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:52:27.513 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:52:27.515 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:52:27.565 | DEBUG | sale_service | 0 | MongoTemplate.java: findOne using query: { "id" : { "$oid" : "65869a7f208da64222b26ab3"}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherCode in collection: voucher_code
24/12/23 17:52:27.567 | DEBUG | sale_service | 0 | MongoTemplate.java: findOne using query: { "_id" : { "$oid" : "65869a7f208da64222b26ab3"}} fields: {} in db.collection: db-salespage.voucher_code
24/12/23 17:52:27.612 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:52:27.618 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:52:28.777 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:52:28.777 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:52:29.305 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:52:29.306 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:52:29.306 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:52:29.306 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:52:29.354 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:52:29.354 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:52:29.354 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:52:29.354 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880d30a10d1b5 (truncated)...]
24/12/23 17:52:29.355 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:52:29.355 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:52:29.355 | WARN  | sale_service | 1744 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:52:29.355 | WARN  | sale_service | 1737 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:52:29.355 | WARN  | sale_service | 1846 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:52:29.355 | WARN  | sale_service | 1841 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:52:29.357 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:52:29.358 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:52:29.358 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:52:29.358 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:52:29.363 | DEBUG | sale_service | 0 | MongoTemplate.java: Saving Document containing fields: [_id, product_detail_id, product_name, username, voucher_code_id, store_id, voucher_info, quantity, created_at, updated_at, _class]
24/12/23 17:52:29.451 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:52:29.451 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=Cập nhật thành công, data=null)]
24/12/23 17:52:29.451 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:52:29.451 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:52:29.451 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:52:29.452 | WARN  | sale_service | 10436 | AuthTokenFilter.java: end request ==> PUT  /api/v1/cart/65880d30a10d1b5728a693b0?quantity=5&voucherCodeId=65869a7f208da64222b26ab3
24/12/23 17:52:29.452 | WARN  | sale_service | 10531 | AuthTokenFilter.java: end request ==> PUT  /api/v1/cart/65880d30a10d1b5728a693b0?quantity=5&voucherCodeId=65869a7f208da64222b26ab3
24/12/23 17:52:29.553 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:52:29.553 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:52:29.554 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:52:29.554 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:52:29.554 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:52:29.554 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:52:29.600 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:52:29.601 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:52:29.602 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:52:29.603 | WARN  | sale_service | 245 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:52:29.606 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:52:29.607 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880d30a10d1b5 (truncated)...]
24/12/23 17:52:29.610 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:52:29.612 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:52:29.612 | WARN  | sale_service | 254 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:52:29.614 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:52:29.649 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:52:29.650 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:52:29.709 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:52:29.744 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:52:29.800 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:52:29.800 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:52:29.801 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:52:29.835 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:52:29.835 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:52:29.836 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:52:29.847 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:52:29.848 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:52:29.848 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:52:29.848 | WARN  | sale_service | 236 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:52:29.883 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:52:29.884 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880d30a10d1b5 (truncated)...]
24/12/23 17:52:29.884 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:52:29.884 | WARN  | sale_service | 235 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:52:32.540 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:52:32.540 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:52:32.542 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:52:32.542 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:52:32.634 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:52:32.634 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:52:32.735 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:52:32.735 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:52:32.735 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:52:32.736 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:52:32.736 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:52:32.736 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:52:32.781 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:52:32.781 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880d30a10d1b5 (truncated)...]
24/12/23 17:52:32.781 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:52:32.782 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:52:32.782 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:52:32.782 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:52:32.782 | WARN  | sale_service | 241 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:52:32.782 | WARN  | sale_service | 241 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:52:35.523 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:52:35.523 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:52:35.524 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:52:35.524 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:52:35.641 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:52:35.641 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:52:35.737 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:52:35.738 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:52:35.739 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:52:35.746 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:52:35.747 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:52:35.749 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:52:35.793 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:52:35.793 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880d30a10d1b5 (truncated)...]
24/12/23 17:52:35.795 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:52:35.795 | WARN  | sale_service | 271 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:52:35.807 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:52:35.808 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:52:35.809 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:52:35.810 | WARN  | sale_service | 286 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:52:38.389 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#paymentProductInCart(Authentication, List)
24/12/23 17:52:38.391 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:52:38.487 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:52:38.523 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:52:38.523 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:52:38.524 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:52:38.524 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:52:38.581 | DEBUG | sale_service | 0 | LogFormatUtils.java: POST "/api/v1/cart/payment", parameters={}
24/12/23 17:52:38.581 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#paymentProductInCart(Authentication, List)
24/12/23 17:52:38.586 | DEBUG | sale_service | 0 | LogFormatUtils.java: Read "application/json;charset=UTF-8" to [[CartPaymentDto(comboId=null, note=, transaction=[ProductTransactionDto(cartId=65880d30a10d1b5728a69 (truncated)...]
24/12/23 17:52:40.693 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:52:40.693 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:52:40.698 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.User in collection: user
24/12/23 17:52:40.786 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:52:40.786 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:52:40.787 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:52:40.807 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:52:40.808 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:52:40.809 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:52:40.851 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:52:40.852 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880d30a10d1b5 (truncated)...]
24/12/23 17:52:40.852 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:52:40.852 | WARN  | sale_service | 2328 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:52:40.862 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:52:40.862 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:52:40.862 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:52:40.863 | WARN  | sale_service | 2339 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:52:42.485 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:52:42.486 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:52:42.486 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:52:42.487 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:52:42.488 | DEBUG | sale_service | 0 | MongoTemplate.java: findOne using query: { "id" : { "$oid" : "65880d30a10d1b5728a693b0"}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:52:42.492 | DEBUG | sale_service | 0 | MongoTemplate.java: findOne using query: { "_id" : { "$oid" : "65880d30a10d1b5728a693b0"}} fields: {} in db.collection: db-salespage.cart
24/12/23 17:52:42.593 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:52:42.593 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:52:42.607 | DEBUG | sale_service | 0 | MongoTemplate.java: findOne using query: { "id" : { "$oid" : "651d84c5a4cd6f49416b6fda"}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.SellerStore in collection: store
24/12/23 17:52:42.611 | DEBUG | sale_service | 0 | MongoTemplate.java: findOne using query: { "_id" : { "$oid" : "651d84c5a4cd6f49416b6fda"}} fields: {} in db.collection: db-salespage.store
24/12/23 17:52:42.687 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:52:42.688 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:52:42.688 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:52:42.689 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:52:42.689 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:52:42.690 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:52:42.712 | DEBUG | sale_service | 0 | MongoTemplate.java: Saving Document containing fields: [_id, product_id, type, quantity, origin_price, sell_price, discount_percent, username, created_at, updated_at, _class]
24/12/23 17:52:42.746 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:52:42.746 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:52:42.747 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880d30a10d1b5 (truncated)...]
24/12/23 17:52:42.747 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:52:42.747 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:52:42.747 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:52:42.747 | WARN  | sale_service | 261 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:52:42.748 | WARN  | sale_service | 262 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:52:43.072 | DEBUG | sale_service | 0 | MongoTemplate.java: Saving Document containing fields: [_id, buyer_username, total_price, balance, product_transaction_details, note, combo_info, created_at, updated_at, _class]
24/12/23 17:52:43.170 | DEBUG | sale_service | 0 | MongoTemplate.java: Inserting list of Documents containing 1 items
24/12/23 17:52:43.301 | DEBUG | sale_service | 0 | MongoTemplate.java: Remove using query: { "_id" : { "$oid" : "65880d30a10d1b5728a693b0"}} in collection: cart.
24/12/23 17:52:43.425 | DEBUG | sale_service | 0 | MongoTemplate.java: Inserting Document containing fields: [username, title, img_url, content, notification_status, notification_type, ref_id, created_at, updated_at, _class] in collection: notification
24/12/23 17:52:43.496 | DEBUG | sale_service | 0 | MongoTemplate.java: Saving Document containing fields: [_id, username, phone_number, display_name, image_url, rate, balance, _class]
24/12/23 17:52:43.632 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:52:43.632 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=Thanh toán thành công, đơn hàng đang được kiểm duyệt, (truncated)...]
24/12/23 17:52:43.634 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:52:43.635 | WARN  | sale_service | 5148 | AuthTokenFilter.java: end request ==> POST  /api/v1/cart/payment
24/12/23 17:52:43.635 | WARN  | sale_service | 5245 | AuthTokenFilter.java: end request ==> POST  /api/v1/cart/payment
24/12/23 17:52:44.525 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:52:44.528 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:52:44.529 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:52:44.531 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:52:44.628 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:52:44.628 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:52:44.726 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:52:44.726 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:52:44.726 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:52:44.726 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:52:44.727 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:52:44.727 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:52:44.783 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:52:44.784 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[], metadata=Metadata(to (truncated)...]
24/12/23 17:52:44.784 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:52:44.785 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:52:44.785 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:52:44.786 | WARN  | sale_service | 258 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:52:44.786 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:52:44.787 | WARN  | sale_service | 257 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:52:48.061 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:52:48.061 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:52:48.062 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:52:48.062 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:52:48.159 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:52:48.160 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:52:48.257 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:52:48.257 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:52:48.258 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:52:48.258 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:52:48.260 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:52:48.260 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:52:48.309 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:52:48.309 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:52:48.310 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[], metadata=Metadata(to (truncated)...]
24/12/23 17:52:48.310 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:52:48.310 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:52:48.310 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:52:48.311 | WARN  | sale_service | 248 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:52:48.311 | WARN  | sale_service | 249 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:52:51.063 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:52:51.064 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:52:51.065 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:52:51.065 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:52:51.165 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:52:51.169 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:52:51.258 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:52:51.258 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:52:51.259 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:52:51.262 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:52:51.263 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:52:51.264 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:52:51.307 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:52:51.308 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:52:51.309 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:52:51.309 | WARN  | sale_service | 244 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:52:51.311 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:52:51.311 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[], metadata=Metadata(to (truncated)...]
24/12/23 17:52:51.311 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:52:51.312 | WARN  | sale_service | 247 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:52:54.059 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:52:54.059 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:52:54.060 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:52:54.060 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:52:54.158 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:52:54.168 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:52:54.258 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:52:54.259 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:52:54.259 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:52:54.270 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:52:54.270 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:52:54.271 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:52:54.311 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:52:54.312 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[], metadata=Metadata(to (truncated)...]
24/12/23 17:52:54.313 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:52:54.314 | WARN  | sale_service | 254 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:52:54.321 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:52:54.322 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:52:54.323 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:52:54.324 | WARN  | sale_service | 263 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:52:57.051 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:52:57.051 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:52:57.052 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:52:57.052 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:52:57.143 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:52:57.144 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:52:57.240 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:52:57.240 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:52:57.240 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:52:57.240 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:52:57.241 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:52:57.241 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:52:57.286 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:52:57.286 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[], metadata=Metadata(to (truncated)...]
24/12/23 17:52:57.286 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:52:57.287 | WARN  | sale_service | 236 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:52:57.287 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:52:57.287 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:52:57.288 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:52:57.288 | WARN  | sale_service | 236 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:53:00.047 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:53:00.047 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:53:00.048 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:53:00.048 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:53:00.152 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:53:00.154 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:53:00.250 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:53:00.251 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:53:00.252 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:53:00.257 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:53:00.258 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:53:00.259 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:53:00.301 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:53:00.302 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:53:00.303 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:53:00.303 | WARN  | sale_service | 254 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:53:00.306 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:53:00.306 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[], metadata=Metadata(to (truncated)...]
24/12/23 17:53:00.307 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:53:00.307 | WARN  | sale_service | 260 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:53:03.051 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:53:03.051 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:53:03.052 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:53:03.052 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:53:03.144 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:53:03.144 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:53:03.238 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:53:03.238 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:53:03.238 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:53:03.242 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:53:03.242 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:53:03.242 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:53:03.286 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:53:03.286 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[], metadata=Metadata(to (truncated)...]
24/12/23 17:53:03.286 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:53:03.286 | WARN  | sale_service | 234 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:53:03.289 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:53:03.289 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:53:03.290 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:53:03.290 | WARN  | sale_service | 238 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:53:06.052 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:53:06.054 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:53:06.058 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:53:06.060 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:53:06.185 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:53:06.185 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:53:06.296 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:53:06.296 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:53:06.297 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:53:06.306 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:53:06.307 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:53:06.308 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:53:06.347 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:53:06.347 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[], metadata=Metadata(to (truncated)...]
24/12/23 17:53:06.347 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:53:06.348 | WARN  | sale_service | 294 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:53:06.357 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:53:06.357 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:53:06.358 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:53:06.358 | WARN  | sale_service | 298 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:53:09.061 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:53:09.062 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:53:09.064 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:53:09.064 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:53:09.163 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:53:09.163 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:53:09.258 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:53:09.258 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:53:09.259 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:53:09.259 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:53:09.260 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:53:09.261 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:53:09.309 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:53:09.309 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:53:09.309 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[], metadata=Metadata(to (truncated)...]
24/12/23 17:53:09.309 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:53:09.310 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:53:09.310 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:53:09.310 | WARN  | sale_service | 247 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:53:09.310 | WARN  | sale_service | 246 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:53:12.059 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:53:12.060 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:53:12.060 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:53:12.060 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:53:12.167 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:53:12.168 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:53:12.270 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:53:12.271 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:53:12.273 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:53:12.274 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:53:12.274 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:53:12.275 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:53:12.325 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:53:12.326 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:53:12.326 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[], metadata=Metadata(to (truncated)...]
24/12/23 17:53:12.326 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:53:12.327 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:53:12.327 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:53:12.328 | WARN  | sale_service | 268 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:53:12.328 | WARN  | sale_service | 268 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:53:15.059 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:53:15.060 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:53:15.060 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:53:15.061 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:53:15.152 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:53:15.152 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:53:15.250 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:53:15.250 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:53:15.251 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:53:15.259 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:53:15.259 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:53:15.260 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:53:15.296 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:53:15.296 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[], metadata=Metadata(to (truncated)...]
24/12/23 17:53:15.296 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:53:15.296 | WARN  | sale_service | 236 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:53:15.312 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:53:15.312 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:53:15.312 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:53:15.313 | WARN  | sale_service | 252 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:53:17.521 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:53:17.521 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:53:17.521 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:53:17.521 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:53:17.660 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:53:17.660 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:53:17.756 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:53:17.756 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:53:17.757 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:53:17.758 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:53:17.758 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:53:17.759 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:53:17.805 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:53:17.805 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:53:17.806 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[], metadata=Metadata(to (truncated)...]
24/12/23 17:53:17.806 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:53:17.806 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:53:17.806 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:53:17.806 | WARN  | sale_service | 285 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:53:17.806 | WARN  | sale_service | 285 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:53:20.525 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:53:20.525 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:53:20.526 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:53:20.526 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:53:20.623 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:53:20.623 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:53:20.719 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:53:20.719 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:53:20.719 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:53:20.719 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:53:20.719 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:53:20.719 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:53:20.764 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:53:20.764 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:53:20.764 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:53:20.764 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[], metadata=Metadata(to (truncated)...]
24/12/23 17:53:20.764 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:53:20.764 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:53:20.764 | WARN  | sale_service | 238 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:53:20.764 | WARN  | sale_service | 238 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:53:21.597 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:53:21.597 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:53:21.598 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:53:21.598 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:53:21.616 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.publicControllers.PublicProductController#getHotProduct(Authentication)
24/12/23 17:53:21.616 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.publicControllers.PublicProductController#getAllProduct(String, String, Double, Double, String, String, String, String, Boolean, Long, Long, Authentication, Pageable)
24/12/23 17:53:21.616 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:53:21.616 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:53:21.693 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:53:21.706 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:53:21.716 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:53:21.716 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:53:21.799 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:53:21.799 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:53:21.799 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:53:21.799 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:53:21.799 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:53:21.800 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:53:21.807 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/public/product/hot-product", parameters={}
24/12/23 17:53:21.808 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.publicControllers.PublicProductController#getHotProduct(Authentication)
24/12/23 17:53:21.808 | INFO  | sale_service | 0 | PublicProductController.java: getProductDetail with username: {lambro25102001}
24/12/23 17:53:21.809 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.SearchHistory in collection: search_history
24/12/23 17:53:21.815 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/public/product?page=0&size=12", parameters={masked}
24/12/23 17:53:21.816 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.publicControllers.PublicProductController#getAllProduct(String, String, Double, Double, String, String, String, String, Boolean, Long, Long, Authentication, Pageable)
24/12/23 17:53:21.816 | INFO  | sale_service | 0 | PublicProductController.java: getProductDetail with username: {lambro25102001}
24/12/23 17:53:21.817 | DEBUG | sale_service | 0 | MongoTemplate.java: Executing count: {} in collection: product
24/12/23 17:53:21.851 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:53:21.851 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:53:21.851 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:53:21.851 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:53:21.851 | WARN  | sale_service | 253 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:53:21.852 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[], metadata=Metadata(to (truncated)...]
24/12/23 17:53:21.852 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:53:21.852 | WARN  | sale_service | 254 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:53:21.872 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: {} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Product in collection: product
24/12/23 17:53:21.873 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "is_hot" : true} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Product in collection: product
24/12/23 17:53:21.978 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "product_id" : { "$in" : ["6532bbe5fae6d41599929246", "6535339b8d69bd44723ba6fb", "653609f1e14dd822b9121ad3", "65360a97e14dd822b9121ad4", "65360b29e14dd822b9121ad5", "653a7660a4b25b73765c1cda", "655cdfb9524e3f7af0d0b842", "655ce106524e3f7af0d0b84d", "655ce182524e3f7af0d0b850", "655ce1fb524e3f7af0d0b857", "655ce3dd524e3f7af0d0b85e", "6565806a6c78c45470cf8554"]}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.ProductStatistic in collection: product_statistic
24/12/23 17:53:22.005 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "product_id" : { "$in" : ["6578615f79d74a1ab1f5c70c", "65785f9a79d74a1ab1f5c709", "656626cb6c78c45470cf8583", "6565806a6c78c45470cf8554", "655ce3dd524e3f7af0d0b85e", "655ce1fb524e3f7af0d0b857", "655ce182524e3f7af0d0b850", "655ce106524e3f7af0d0b84d", "655cdfb9524e3f7af0d0b842", "6535339b8d69bd44723ba6fb", "6532bbe5fae6d41599929246", "653609f1e14dd822b9121ad3"]}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.ProductStatistic in collection: product_statistic
24/12/23 17:53:22.667 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "product_id" : { "$in" : ["6578615f79d74a1ab1f5c70c", "65785f9a79d74a1ab1f5c709", "656626cb6c78c45470cf8583", "6565806a6c78c45470cf8554", "655ce3dd524e3f7af0d0b85e", "655ce1fb524e3f7af0d0b857", "655ce182524e3f7af0d0b850", "655ce106524e3f7af0d0b84d", "655cdfb9524e3f7af0d0b842", "6535339b8d69bd44723ba6fb", "6532bbe5fae6d41599929246", "653609f1e14dd822b9121ad3"]}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.ProductDetail in collection: product_detail
24/12/23 17:53:22.743 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:53:22.743 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=[ProductDataResponse(productId=6578615f79d (truncated)...]
24/12/23 17:53:22.746 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:53:22.746 | WARN  | sale_service | 1030 | AuthTokenFilter.java: end request ==> GET  /api/v1/public/product/hot-product
24/12/23 17:53:22.746 | WARN  | sale_service | 1130 | AuthTokenFilter.java: end request ==> GET  /api/v1/public/product/hot-product
24/12/23 17:53:22.875 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.publicControllers.PublicSellerStoreController#getAllStore(String, String, Pageable)
24/12/23 17:53:22.876 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:53:22.968 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:53:23.007 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "product_id" : { "$in" : ["6532bbe5fae6d41599929246", "6535339b8d69bd44723ba6fb", "653609f1e14dd822b9121ad3", "65360a97e14dd822b9121ad4", "65360b29e14dd822b9121ad5", "653a7660a4b25b73765c1cda", "655cdfb9524e3f7af0d0b842", "655ce106524e3f7af0d0b84d", "655ce182524e3f7af0d0b850", "655ce1fb524e3f7af0d0b857", "655ce3dd524e3f7af0d0b85e", "6565806a6c78c45470cf8554"]}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.ProductDetail in collection: product_detail
24/12/23 17:53:23.060 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/public/seller-store?page=0&size=6", parameters={masked}
24/12/23 17:53:23.061 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.publicControllers.PublicSellerStoreController#getAllStore(String, String, Pageable)
24/12/23 17:53:23.065 | DEBUG | sale_service | 0 | MongoTemplate.java: Executing count: {} in collection: store
24/12/23 17:53:23.080 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:53:23.081 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[ProductDataResponse(pro (truncated)...]
24/12/23 17:53:23.081 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:53:23.082 | WARN  | sale_service | 1366 | AuthTokenFilter.java: end request ==> GET  /api/v1/public/product?page=0&size=12
24/12/23 17:53:23.082 | WARN  | sale_service | 1466 | AuthTokenFilter.java: end request ==> GET  /api/v1/public/product?page=0&size=12
24/12/23 17:53:23.111 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: {} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.SellerStore in collection: store
24/12/23 17:53:23.163 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:53:23.164 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[SellerStoreResponse(id= (truncated)...]
24/12/23 17:53:23.164 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:53:23.164 | WARN  | sale_service | 289 | AuthTokenFilter.java: end request ==> GET  /api/v1/public/seller-store?page=0&size=6
24/12/23 17:53:24.556 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:53:24.556 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:53:24.557 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:53:24.557 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:53:24.650 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:53:24.651 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:53:24.741 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:53:24.741 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:53:24.742 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:53:24.742 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:53:24.743 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:53:24.743 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:53:24.788 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:53:24.788 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:53:24.789 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[], metadata=Metadata(to (truncated)...]
24/12/23 17:53:24.789 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:53:24.789 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:53:24.789 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:53:24.789 | WARN  | sale_service | 231 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:53:24.789 | WARN  | sale_service | 231 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:53:27.578 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:53:27.579 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:53:27.580 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:53:27.581 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:53:27.674 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:53:27.850 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:53:27.851 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:53:27.852 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:53:27.897 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:53:27.897 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[], metadata=Metadata(to (truncated)...]
24/12/23 17:53:27.898 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:53:27.898 | WARN  | sale_service | 224 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:53:27.898 | WARN  | sale_service | 319 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:53:27.963 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:53:28.057 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:53:28.057 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:53:28.058 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:53:28.117 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:53:28.117 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:53:28.119 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:53:28.119 | WARN  | sale_service | 539 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:53:30.561 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:53:30.561 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:53:30.562 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:53:30.562 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:53:30.651 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:53:30.660 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:53:30.742 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:53:30.743 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:53:30.743 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:53:30.756 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:53:30.756 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:53:30.757 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:53:30.791 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:53:30.791 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[], metadata=Metadata(to (truncated)...]
24/12/23 17:53:30.791 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:53:30.791 | WARN  | sale_service | 230 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:53:30.803 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:53:30.803 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:53:30.804 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:53:30.804 | WARN  | sale_service | 243 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:53:33.557 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:53:33.557 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:53:33.558 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:53:33.558 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:53:33.667 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:53:33.669 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:53:33.764 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:53:33.765 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:53:33.765 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:53:33.769 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:53:33.769 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:53:33.770 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:53:33.814 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:53:33.814 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:53:33.814 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:53:33.814 | WARN  | sale_service | 257 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:53:33.819 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:53:33.819 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[], metadata=Metadata(to (truncated)...]
24/12/23 17:53:33.819 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:53:33.820 | WARN  | sale_service | 263 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:53:36.564 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:53:36.564 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:53:36.565 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:53:36.565 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:53:36.664 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:53:36.667 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:53:36.759 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:53:36.759 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:53:36.760 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:53:36.770 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:53:36.770 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:53:36.771 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:53:36.808 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:53:36.809 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[], metadata=Metadata(to (truncated)...]
24/12/23 17:53:36.809 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:53:36.810 | WARN  | sale_service | 246 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:53:36.820 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:53:36.821 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:53:36.822 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:53:36.822 | WARN  | sale_service | 258 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:53:39.578 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:53:39.579 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:53:39.581 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:53:39.581 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:53:39.672 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:53:39.685 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:53:39.762 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:53:39.763 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:53:39.765 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:53:39.779 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:53:39.779 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:53:39.780 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:53:39.814 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:53:39.815 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:53:39.815 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:53:39.815 | WARN  | sale_service | 235 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:53:39.834 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:53:39.835 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[], metadata=Metadata(to (truncated)...]
24/12/23 17:53:39.835 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:53:39.836 | WARN  | sale_service | 257 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:53:42.569 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:53:42.569 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:53:42.570 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:53:42.570 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:53:42.666 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:53:42.674 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:53:42.760 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:53:42.760 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:53:42.761 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:53:42.765 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:53:42.766 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:53:42.767 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:53:42.808 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:53:42.809 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:53:42.809 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:53:42.809 | WARN  | sale_service | 239 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:53:42.816 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:53:42.817 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[], metadata=Metadata(to (truncated)...]
24/12/23 17:53:42.817 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:53:42.817 | WARN  | sale_service | 247 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:53:45.570 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:53:45.570 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:53:45.571 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:53:45.571 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:53:45.687 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:53:45.692 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:53:45.786 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:53:45.786 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:53:45.787 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:53:45.793 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:53:45.793 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:53:45.793 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:53:45.833 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:53:45.833 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:53:45.834 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:53:45.834 | WARN  | sale_service | 263 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:53:45.839 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:53:45.839 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[], metadata=Metadata(to (truncated)...]
24/12/23 17:53:45.839 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:53:45.839 | WARN  | sale_service | 268 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:53:48.564 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:53:48.564 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:53:48.565 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:53:48.565 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:53:48.657 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:53:48.663 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:53:48.763 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:53:48.764 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:53:48.764 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:53:48.767 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:53:48.767 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:53:48.768 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:53:48.809 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:53:48.809 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:53:48.810 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:53:48.810 | WARN  | sale_service | 245 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:53:48.816 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:53:48.816 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[], metadata=Metadata(to (truncated)...]
24/12/23 17:53:48.816 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:53:48.816 | WARN  | sale_service | 251 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:53:51.625 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:53:51.625 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:53:51.626 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:53:51.626 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:53:51.725 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:53:51.727 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:53:51.834 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:53:51.834 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:53:51.834 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:53:51.834 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:53:51.835 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:53:51.835 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:53:51.886 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:53:51.886 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[], metadata=Metadata(to (truncated)...]
24/12/23 17:53:51.887 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:53:51.887 | WARN  | sale_service | 260 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:53:52.155 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:53:52.155 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:53:52.156 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:53:52.156 | WARN  | sale_service | 431 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:53:52.157 | WARN  | sale_service | 530 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:53:54.562 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:53:54.562 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:53:54.563 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:53:54.563 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:53:54.655 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:53:54.659 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:53:54.760 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:53:54.761 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:53:54.761 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:53:54.808 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:53:54.808 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:53:54.808 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:53:54.808 | WARN  | sale_service | 246 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:53:55.018 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:53:55.019 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:53:55.019 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:53:55.062 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:53:55.062 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[], metadata=Metadata(to (truncated)...]
24/12/23 17:53:55.063 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:53:55.063 | WARN  | sale_service | 408 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:53:55.063 | WARN  | sale_service | 501 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:53:57.575 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:53:57.575 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:53:57.576 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:53:57.576 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:53:57.674 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:53:57.674 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:53:57.770 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:53:57.770 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:53:57.771 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:53:57.786 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:53:57.787 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:53:57.787 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:53:57.825 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:53:57.826 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:53:57.826 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:53:57.826 | WARN  | sale_service | 250 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:53:57.834 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:53:57.834 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[], metadata=Metadata(to (truncated)...]
24/12/23 17:53:57.834 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:53:57.835 | WARN  | sale_service | 259 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:54:00.571 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:54:00.572 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:54:00.572 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:54:00.573 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:54:00.664 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:54:00.668 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:54:00.768 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:54:00.769 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:54:00.769 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:54:00.769 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:54:00.769 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:54:00.770 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:54:00.814 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:54:00.814 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:54:00.814 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:54:00.815 | WARN  | sale_service | 243 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:54:00.816 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:54:00.816 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[], metadata=Metadata(to (truncated)...]
24/12/23 17:54:00.817 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:54:00.817 | WARN  | sale_service | 246 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:54:03.580 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:54:03.583 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:54:03.588 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:54:03.591 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:54:03.698 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:54:03.709 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:54:03.795 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:54:03.795 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:54:03.796 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:54:03.802 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:54:03.802 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:54:03.803 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:54:03.842 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:54:03.842 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[], metadata=Metadata(to (truncated)...]
24/12/23 17:54:03.842 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:54:03.842 | WARN  | sale_service | 261 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:54:03.852 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:54:03.852 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:54:03.853 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:54:03.853 | WARN  | sale_service | 264 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:54:06.559 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:54:06.559 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:54:06.559 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:54:06.559 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:54:06.668 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:54:06.674 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:54:06.764 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:54:06.764 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:54:06.765 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:54:06.768 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:54:06.768 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:54:06.769 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:54:06.810 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:54:06.810 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:54:06.811 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:54:06.811 | WARN  | sale_service | 252 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:54:06.816 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:54:06.816 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[], metadata=Metadata(to (truncated)...]
24/12/23 17:54:06.817 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:54:06.817 | WARN  | sale_service | 258 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:54:09.566 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:54:09.567 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:54:09.567 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:54:09.568 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:54:09.660 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:54:09.662 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:54:09.757 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:54:09.757 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:54:09.757 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:54:09.803 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:54:09.803 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:54:09.804 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:54:09.804 | WARN  | sale_service | 236 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:54:10.020 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:54:10.020 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:54:10.021 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:54:10.064 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:54:10.064 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[], metadata=Metadata(to (truncated)...]
24/12/23 17:54:10.065 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:54:10.065 | WARN  | sale_service | 402 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:54:10.065 | WARN  | sale_service | 498 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:54:12.070 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.publicControllers.PublicProductController#getProductDetail(Authentication, String)
24/12/23 17:54:12.070 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.publicControllers.PublicRatingController#getRatingProduct(String, Pageable)
24/12/23 17:54:12.071 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.publicControllers.PublicProductController#getSuggestProduct(String)
24/12/23 17:54:12.071 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.publicControllers.PublicVoucherController#getPublicVoucher(Authentication, String)
24/12/23 17:54:12.071 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:54:12.071 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:54:12.072 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:54:12.072 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:54:12.175 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:54:12.175 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:54:12.175 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:54:12.175 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:54:12.270 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/public/product/suggest/6532bbe5fae6d41599929246", parameters={}
24/12/23 17:54:12.271 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.publicControllers.PublicProductController#getSuggestProduct(String)
24/12/23 17:54:12.272 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/public/product/6532bbe5fae6d41599929246", parameters={}
24/12/23 17:54:12.272 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/public/voucher/6532bbe5fae6d41599929246", parameters={}
24/12/23 17:54:12.273 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/public/rating/product/6532bbe5fae6d41599929246?page=0&size=6", parameters={masked}
24/12/23 17:54:12.273 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.publicControllers.PublicVoucherController#getPublicVoucher(Authentication, String)
24/12/23 17:54:12.273 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.publicControllers.PublicProductController#getProductDetail(Authentication, String)
24/12/23 17:54:12.273 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.publicControllers.PublicRatingController#getRatingProduct(String, Pageable)
24/12/23 17:54:12.274 | INFO  | sale_service | 0 | PublicProductController.java: getProductDetail with username: {lambro25102001}
24/12/23 17:54:12.275 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "ref_id" : "6532bbe5fae6d41599929246", "rating_type" : "PRODUCT"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Rating in collection: rating
24/12/23 17:54:12.275 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "product_id" : "6532bbe5fae6d41599929246", "daily" : { "$date" : "2023-12-23T17:00:00Z"}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.ProductStatistic in collection: product_statistic
24/12/23 17:54:12.307 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "voucher_store_type" : "PRODUCT", "ref_id" : "6532bbe5fae6d41599929246"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherStore in collection: voucher_store
24/12/23 17:54:12.307 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "category_id" : "6532bb2ffae6d41599929245"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Product in collection: product
24/12/23 17:54:12.325 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:54:12.324 | ERROR | sale_service | 0 | SimpleAsyncUncaughtExceptionHandler.java: Unexpected exception occurred invoking async method: public void com.salespage.salespageservice.domains.services.StatisticService.updateView(java.lang.String)
java.lang.NullPointerException: null
	at com.salespage.salespageservice.domains.services.StatisticService.updateView(StatisticService.java:29) ~[classes/:?]
	at com.salespage.salespageservice.domains.services.StatisticService$$FastClassBySpringCGLIB$$9ffee42.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.3.23.jar:5.3.23]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793) ~[spring-aop-5.3.23.jar:5.3.23]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.3.23.jar:5.3.23]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.23.jar:5.3.23]
	at org.springframework.aop.interceptor.AsyncExecutionInterceptor.lambda$invoke$0(AsyncExecutionInterceptor.java:115) ~[spring-aop-5.3.23.jar:5.3.23]
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:264) ~[?:?]
	at java.util.concurrent.FutureTask.run(FutureTask.java) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) ~[?:?]
	at java.lang.Thread.run(Thread.java:829) ~[?:?]
24/12/23 17:54:12.325 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Rating(id=657dcd18f11b7 (truncated)...]
24/12/23 17:54:12.326 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:54:12.327 | WARN  | sale_service | 256 | AuthTokenFilter.java: end request ==> GET  /api/v1/public/rating/product/6532bbe5fae6d41599929246?page=0&size=6
24/12/23 17:54:12.334 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "product_id" : "6532bbe5fae6d41599929246", "daily" : { "$date" : "2023-12-23T17:00:00Z"}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.ProductStatistic in collection: product_statistic
24/12/23 17:54:12.364 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "voucher_store_type" : "STORE", "ref_id" : "651d84c5a4cd6f49416b6fda"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherStore in collection: voucher_store
24/12/23 17:54:12.364 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: {} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.ProductStatistic in collection: product_statistic
24/12/23 17:54:12.394 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "product_id" : "6532bbe5fae6d41599929246"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.ProductDetail in collection: product_detail
24/12/23 17:54:12.408 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "voucher_store_id" : { "$in" : ["65846511d48c0b1c77d1ee61", "6587e666208da64222b26afc"]}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherCodeLimit in collection: voucher_code_limit
24/12/23 17:54:12.428 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "_id" : { "$in" : [{ "$oid" : "6532bbe5fae6d41599929246"}]}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Product in collection: product
24/12/23 17:54:12.459 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:54:12.459 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=[UserVoucherResponse(voucherStoreName=Giảm (truncated)...]
24/12/23 17:54:12.460 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:54:12.460 | WARN  | sale_service | 284 | AuthTokenFilter.java: end request ==> GET  /api/v1/public/voucher/6532bbe5fae6d41599929246
24/12/23 17:54:12.460 | WARN  | sale_service | 388 | AuthTokenFilter.java: end request ==> GET  /api/v1/public/voucher/6532bbe5fae6d41599929246
24/12/23 17:54:12.474 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "ref_id" : "6532bbe5fae6d41599929246", "favorite_type" : "PRODUCT"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.UserFavorite in collection: user_favarite
24/12/23 17:54:12.477 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:54:12.477 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=[ProductDataResponse(productId=653a7660a4b (truncated)...]
24/12/23 17:54:12.477 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:54:12.477 | WARN  | sale_service | 302 | AuthTokenFilter.java: end request ==> GET  /api/v1/public/product/suggest/6532bbe5fae6d41599929246
24/12/23 17:54:12.477 | WARN  | sale_service | 406 | AuthTokenFilter.java: end request ==> GET  /api/v1/public/product/suggest/6532bbe5fae6d41599929246
24/12/23 17:54:12.534 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "ref_id" : "6532bbe5fae6d41599929246", "rating_type" : "PRODUCT"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Rating in collection: rating
24/12/23 17:54:12.563 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:54:12.563 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:54:12.564 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:54:12.564 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:54:12.610 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:54:12.610 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=ProductDetailResponse(totalSell=null, tota (truncated)...]
24/12/23 17:54:12.611 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:54:12.611 | WARN  | sale_service | 436 | AuthTokenFilter.java: end request ==> GET  /api/v1/public/product/6532bbe5fae6d41599929246
24/12/23 17:54:12.611 | WARN  | sale_service | 540 | AuthTokenFilter.java: end request ==> GET  /api/v1/public/product/6532bbe5fae6d41599929246
24/12/23 17:54:12.664 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:54:12.664 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:54:12.774 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:54:12.774 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:54:12.774 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:54:12.774 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:54:12.775 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:54:12.775 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:54:12.822 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:54:12.822 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:54:12.822 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[], metadata=Metadata(to (truncated)...]
24/12/23 17:54:12.822 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:54:12.822 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:54:12.822 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:54:12.823 | WARN  | sale_service | 259 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:54:12.823 | WARN  | sale_service | 259 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:54:15.558 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:54:15.558 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:54:15.559 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:54:15.559 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:54:15.686 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:54:15.686 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:54:15.786 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:54:15.786 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:54:15.786 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:54:15.787 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:54:15.787 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:54:15.787 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:54:15.837 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:54:15.837 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:54:15.837 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[], metadata=Metadata(to (truncated)...]
24/12/23 17:54:15.837 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:54:15.838 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:54:15.838 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:54:15.838 | WARN  | sale_service | 279 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:54:15.838 | WARN  | sale_service | 279 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:54:18.561 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:54:18.561 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:54:18.562 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:54:18.562 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:54:18.627 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#createCart(Authentication, CartDto)
24/12/23 17:54:18.627 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:54:18.671 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:54:18.671 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:54:18.721 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:54:18.765 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:54:18.766 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:54:18.766 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:54:18.771 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:54:18.771 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:54:18.772 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:54:18.813 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:54:18.813 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[], metadata=Metadata(to (truncated)...]
24/12/23 17:54:18.813 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:54:18.814 | WARN  | sale_service | 250 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:54:18.815 | DEBUG | sale_service | 0 | LogFormatUtils.java: POST "/api/v1/cart", parameters={}
24/12/23 17:54:18.816 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#createCart(Authentication, CartDto)
24/12/23 17:54:18.816 | DEBUG | sale_service | 0 | LogFormatUtils.java: Read "application/json;charset=UTF-8" to [CartDto(productDetailId=6532bc2ffae6d41599929247, quantity=5, storeId=651d84c5a4cd6f49416b6fda, vouc (truncated)...]
24/12/23 17:54:18.823 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:54:18.823 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:54:18.824 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:54:18.824 | WARN  | sale_service | 261 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:54:18.829 | DEBUG | sale_service | 0 | MongoTemplate.java: findOne using query: { "id" : { "$oid" : "6532bc2ffae6d41599929247"}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.ProductDetail in collection: product_detail
24/12/23 17:54:18.830 | DEBUG | sale_service | 0 | MongoTemplate.java: findOne using query: { "_id" : { "$oid" : "6532bc2ffae6d41599929247"}} fields: {} in db.collection: db-salespage.product_detail
24/12/23 17:54:18.949 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "product_detail_id" : "6532bc2ffae6d41599929247"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:54:19.012 | DEBUG | sale_service | 0 | MongoTemplate.java: Inserting Document containing fields: [username, title, img_url, content, notification_status, notification_type, ref_id, created_at, updated_at, _class] in collection: notification
24/12/23 17:54:19.068 | DEBUG | sale_service | 0 | MongoTemplate.java: Saving Document containing fields: [_id, product_detail_id, product_name, username, store_id, quantity, created_at, updated_at, _class]
24/12/23 17:54:19.145 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:54:19.145 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=Thêm vào giỏ hàng thành công, data=null)]
24/12/23 17:54:19.146 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:54:19.146 | WARN  | sale_service | 424 | AuthTokenFilter.java: end request ==> POST  /api/v1/cart
24/12/23 17:54:19.146 | WARN  | sale_service | 518 | AuthTokenFilter.java: end request ==> POST  /api/v1/cart
24/12/23 17:54:21.569 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:54:21.570 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:54:21.571 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:54:21.571 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:54:21.677 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:54:21.683 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:54:21.783 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:54:21.783 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:54:21.784 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:54:21.810 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:54:21.811 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:54:21.811 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:54:21.827 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:54:21.827 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880ddaa10d1b5 (truncated)...]
24/12/23 17:54:21.828 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:54:21.828 | WARN  | sale_service | 256 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:54:21.865 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:54:21.865 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:54:21.866 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:54:21.866 | WARN  | sale_service | 296 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:54:22.899 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:54:22.899 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:54:22.900 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:54:22.900 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:54:22.916 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getProductCart(Authentication)
24/12/23 17:54:22.917 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:54:22.998 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:54:22.998 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:54:23.013 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:54:23.099 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:54:23.099 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:54:23.100 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:54:23.100 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:54:23.100 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:54:23.100 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:54:23.105 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart", parameters={}
24/12/23 17:54:23.106 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getProductCart(Authentication)
24/12/23 17:54:25.217 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:54:25.217 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:54:25.217 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:54:25.217 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880ddaa10d1b5 (truncated)...]
24/12/23 17:54:25.218 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:54:25.218 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:54:25.218 | WARN  | sale_service | 2220 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:54:25.218 | WARN  | sale_service | 2220 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:54:25.218 | WARN  | sale_service | 2317 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:54:25.218 | WARN  | sale_service | 2317 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:54:25.234 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:54:25.344 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "_id" : { "$in" : [{ "$oid" : "651d84c5a4cd6f49416b6fda"}]}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.SellerStore in collection: store
24/12/23 17:54:25.421 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "voucher_store_type" : "PRODUCT", "ref_id" : { "$in" : ["6532bbe5fae6d41599929246"]}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherStore in collection: voucher_store
24/12/23 17:54:28.970 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:54:28.971 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:54:28.971 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:54:28.972 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:54:29.065 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:54:29.071 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:54:29.132 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:54:29.132 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=[CartByStoreResponse(storeId=651d84c5a4cd6 (truncated)...]
24/12/23 17:54:29.132 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:54:29.132 | WARN  | sale_service | 6119 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart
24/12/23 17:54:29.133 | WARN  | sale_service | 6216 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart
24/12/23 17:54:29.166 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:54:29.166 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:54:29.167 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:54:29.177 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:54:29.177 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:54:29.178 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:54:29.191 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.VoucherController#getUserVoucher(Authentication, String)
24/12/23 17:54:29.191 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:54:29.229 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:54:29.230 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880ddaa10d1b5 (truncated)...]
24/12/23 17:54:29.230 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:54:29.230 | WARN  | sale_service | 259 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:54:29.235 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:54:29.236 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:54:29.271 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:54:29.272 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:54:29.272 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:54:29.273 | WARN  | sale_service | 202 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:54:29.273 | WARN  | sale_service | 301 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:54:29.274 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:54:29.275 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:54:29.314 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:54:29.348 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:54:29.372 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:54:29.409 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/voucher/user/voucher?productId=6532bbe5fae6d41599929246", parameters={masked}
24/12/23 17:54:29.409 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.VoucherController#getUserVoucher(Authentication, String)
24/12/23 17:54:29.422 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "voucher_store_type" : "PRODUCT", "ref_id" : "6532bbe5fae6d41599929246"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherStore in collection: voucher_store
24/12/23 17:54:29.441 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:54:29.441 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:54:29.441 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:54:29.485 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:54:29.486 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:54:29.486 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "voucher_store_type" : "STORE", "ref_id" : "651d84c5a4cd6f49416b6fda"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherStore in collection: voucher_store
24/12/23 17:54:29.486 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:54:29.493 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:54:29.493 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880ddaa10d1b5 (truncated)...]
24/12/23 17:54:29.494 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:54:29.494 | WARN  | sale_service | 258 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:54:29.534 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "owner_id" : "lambro25102001", "voucher_store_id" : "65846511d48c0b1c77d1ee61", "voucher_code_status" : "OWNER", "expire_time" : { "$gt" : 1703415269534}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherCode in collection: voucher_code
24/12/23 17:54:29.535 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:54:29.535 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:54:29.536 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:54:29.536 | WARN  | sale_service | 261 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:54:29.604 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "owner_id" : "lambro25102001", "voucher_store_id" : "6587e666208da64222b26afc", "voucher_code_status" : "OWNER", "expire_time" : { "$gt" : 1703415269604}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherCode in collection: voucher_code
24/12/23 17:54:29.654 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:54:29.654 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=[UserVoucherResponse(voucherStoreName=Giảm (truncated)...]
24/12/23 17:54:29.655 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:54:29.655 | WARN  | sale_service | 342 | AuthTokenFilter.java: end request ==> GET  /api/v1/voucher/user/voucher?productId=6532bbe5fae6d41599929246
24/12/23 17:54:29.655 | WARN  | sale_service | 464 | AuthTokenFilter.java: end request ==> GET  /api/v1/voucher/user/voucher?productId=6532bbe5fae6d41599929246
24/12/23 17:54:31.815 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:54:31.815 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:54:31.815 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:54:31.815 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:54:31.911 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:54:31.911 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:54:32.005 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:54:32.006 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:54:32.007 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:54:32.010 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:54:32.010 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:54:32.011 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:54:32.062 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:54:32.063 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880ddaa10d1b5 (truncated)...]
24/12/23 17:54:32.064 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:54:32.064 | WARN  | sale_service | 249 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:54:32.065 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:54:32.066 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:54:32.067 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:54:32.068 | WARN  | sale_service | 253 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:54:33.891 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getProductCart(Authentication)
24/12/23 17:54:33.892 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:54:33.892 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#updateCart(Authentication, String, Long, String)
24/12/23 17:54:33.894 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#updateCart(Authentication, String, Long, String)
24/12/23 17:54:33.896 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:54:33.994 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:54:34.009 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:54:34.089 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart", parameters={}
24/12/23 17:54:34.089 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getProductCart(Authentication)
24/12/23 17:54:39.043 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:54:39.045 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:54:39.045 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:54:39.049 | DEBUG | sale_service | 0 | LogFormatUtils.java: PUT "/api/v1/cart/65880ddaa10d1b5728a693b5?quantity=5&voucherCodeId=65869a7f208da64222b26ab3", parameters={masked}
24/12/23 17:54:39.049 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:54:39.050 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#updateCart(Authentication, String, Long, String)
24/12/23 17:54:44.828 | DEBUG | sale_service | 0 | MongoTemplate.java: findOne using query: { "id" : { "$oid" : "65880ddaa10d1b5728a693b5"}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:54:44.828 | DEBUG | sale_service | 0 | MongoTemplate.java: findOne using query: { "_id" : { "$oid" : "65880ddaa10d1b5728a693b5"}} fields: {} in db.collection: db-salespage.cart
24/12/23 17:54:44.875 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "_id" : { "$in" : [{ "$oid" : "651d84c5a4cd6f49416b6fda"}]}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.SellerStore in collection: store
24/12/23 17:54:44.875 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:54:44.887 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:54:48.163 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:54:48.164 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:54:48.164 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:54:50.337 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:54:50.337 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:54:52.747 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "voucher_store_type" : "PRODUCT", "ref_id" : { "$in" : ["6532bbe5fae6d41599929246"]}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherStore in collection: voucher_store
24/12/23 17:54:52.747 | DEBUG | sale_service | 0 | MongoTemplate.java: Saving Document containing fields: [_id, product_detail_id, product_name, username, voucher_code_id, store_id, voucher_info, quantity, created_at, updated_at, _class]
24/12/23 17:54:52.747 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:54:52.797 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:54:52.798 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880ddaa10d1b5 (truncated)...]
24/12/23 17:54:52.798 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:54:52.797 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:54:52.799 | WARN  | sale_service | 7912 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:54:52.799 | WARN  | sale_service | 13754 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:54:52.799 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:54:52.800 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:54:52.800 | WARN  | sale_service | 7925 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:54:52.800 | WARN  | sale_service | 13751 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:54:52.802 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:54:52.802 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:54:52.802 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:54:52.802 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:54:52.865 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:54:52.866 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=Cập nhật thành công, data=null)]
24/12/23 17:54:52.866 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:54:52.866 | WARN  | sale_service | 18857 | AuthTokenFilter.java: end request ==> PUT  /api/v1/cart/65880ddaa10d1b5728a693b5?quantity=5&voucherCodeId=65869a7f208da64222b26ab3
24/12/23 17:54:52.866 | WARN  | sale_service | 18970 | AuthTokenFilter.java: end request ==> PUT  /api/v1/cart/65880ddaa10d1b5728a693b5?quantity=5&voucherCodeId=65869a7f208da64222b26ab3
24/12/23 17:54:52.901 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:54:52.911 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:54:52.936 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.VoucherController#getUserVoucher(Authentication, String)
24/12/23 17:54:52.937 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:54:52.955 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:54:52.955 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=[CartByStoreResponse(storeId=651d84c5a4cd6 (truncated)...]
24/12/23 17:54:52.956 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:54:52.956 | WARN  | sale_service | 18962 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart
24/12/23 17:54:52.956 | WARN  | sale_service | 19063 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart
24/12/23 17:54:53.008 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:54:53.009 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:54:53.009 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:54:53.009 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:54:53.010 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:54:53.010 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:54:53.038 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:54:53.057 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:54:53.057 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:54:53.058 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:54:53.058 | WARN  | sale_service | 256 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:54:53.058 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:54:53.058 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880ddaa10d1b5 (truncated)...]
24/12/23 17:54:53.059 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:54:53.059 | WARN  | sale_service | 257 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:54:53.059 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:54:53.059 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:54:53.060 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:54:53.060 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:54:53.132 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/voucher/user/voucher?productId=6532bbe5fae6d41599929246", parameters={masked}
24/12/23 17:54:53.132 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.VoucherController#getUserVoucher(Authentication, String)
24/12/23 17:54:53.146 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "voucher_store_type" : "PRODUCT", "ref_id" : "6532bbe5fae6d41599929246"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherStore in collection: voucher_store
24/12/23 17:54:53.154 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:54:53.158 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:54:53.198 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "voucher_store_type" : "STORE", "ref_id" : "651d84c5a4cd6f49416b6fda"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherStore in collection: voucher_store
24/12/23 17:54:53.245 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "owner_id" : "lambro25102001", "voucher_store_id" : "65846511d48c0b1c77d1ee61", "voucher_code_status" : "OWNER", "expire_time" : { "$gt" : 1703415293245}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherCode in collection: voucher_code
24/12/23 17:54:53.245 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:54:53.246 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:54:53.246 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:54:53.254 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:54:53.255 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:54:53.255 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:54:53.296 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "owner_id" : "lambro25102001", "voucher_store_id" : "6587e666208da64222b26afc", "voucher_code_status" : "OWNER", "expire_time" : { "$gt" : 1703415293295}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherCode in collection: voucher_code
24/12/23 17:54:53.296 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:54:53.297 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880ddaa10d1b5 (truncated)...]
24/12/23 17:54:53.299 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:54:53.299 | WARN  | sale_service | 238 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:54:53.303 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:54:53.305 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:54:53.307 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:54:53.307 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:54:53.309 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:54:53.310 | WARN  | sale_service | 250 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:54:53.323 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:54:53.325 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:54:53.344 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:54:53.344 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=[UserVoucherResponse(voucherStoreName=Giảm (truncated)...]
24/12/23 17:54:53.347 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:54:53.347 | WARN  | sale_service | 310 | AuthTokenFilter.java: end request ==> GET  /api/v1/voucher/user/voucher?productId=6532bbe5fae6d41599929246
24/12/23 17:54:53.347 | WARN  | sale_service | 411 | AuthTokenFilter.java: end request ==> GET  /api/v1/voucher/user/voucher?productId=6532bbe5fae6d41599929246
24/12/23 17:54:53.418 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:54:53.418 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:54:53.526 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:54:53.526 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:54:53.526 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:54:53.526 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:54:53.526 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:54:53.527 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:54:53.576 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:54:53.576 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:54:53.576 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:54:53.576 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880ddaa10d1b5 (truncated)...]
24/12/23 17:54:53.576 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:54:53.576 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:54:53.576 | WARN  | sale_service | 252 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:54:53.576 | WARN  | sale_service | 271 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:54:53.578 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:54:53.578 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:54:53.579 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:54:53.579 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:54:53.671 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:54:53.681 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:54:53.763 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:54:53.763 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:54:53.764 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:54:53.779 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:54:53.780 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:54:53.780 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:54:53.989 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:54:53.989 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:54:53.989 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880ddaa10d1b5 (truncated)...]
24/12/23 17:54:53.989 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:54:53.990 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:54:53.990 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:54:53.990 | WARN  | sale_service | 308 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:54:53.990 | WARN  | sale_service | 319 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:54:53.990 | WARN  | sale_service | 412 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:54:53.990 | WARN  | sale_service | 412 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:54:53.991 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:54:53.992 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:54:53.992 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:54:53.992 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:54:54.086 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:54:54.087 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:54:54.189 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:54:54.189 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:54:54.190 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:54:54.190 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:54:54.190 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:54:54.190 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:54:54.238 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:54:54.239 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880ddaa10d1b5 (truncated)...]
24/12/23 17:54:54.239 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:54:54.240 | WARN  | sale_service | 247 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:54:54.240 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:54:54.240 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:54:54.240 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:54:54.240 | WARN  | sale_service | 247 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:54:54.241 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:54:54.242 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:54:54.242 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:54:54.242 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:54:54.345 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:54:54.345 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:54:54.442 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:54:54.442 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:54:54.443 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:54:54.443 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:54:54.443 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:54:54.443 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:54:54.491 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:54:54.491 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:54:54.491 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:54:54.491 | WARN  | sale_service | 249 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:54:54.492 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:54:54.492 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880ddaa10d1b5 (truncated)...]
24/12/23 17:54:54.492 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:54:54.492 | WARN  | sale_service | 250 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:54:55.816 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:54:55.817 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:54:55.817 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:54:55.817 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:54:55.909 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:54:55.910 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:54:56.000 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:54:56.000 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:54:56.001 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:54:56.003 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:54:56.003 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:54:56.004 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:54:56.048 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:54:56.048 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:54:56.048 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:54:56.048 | WARN  | sale_service | 230 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:54:56.049 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:54:56.049 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880ddaa10d1b5 (truncated)...]
24/12/23 17:54:56.050 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:54:56.050 | WARN  | sale_service | 232 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:54:58.822 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:54:58.823 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:54:58.824 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:54:58.825 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:54:58.915 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:54:58.918 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:54:59.024 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:54:59.024 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:54:59.024 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:54:59.025 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:54:59.026 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:54:59.026 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:54:59.085 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:54:59.085 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:54:59.085 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880ddaa10d1b5 (truncated)...]
24/12/23 17:54:59.085 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:54:59.085 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:54:59.086 | WARN  | sale_service | 262 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:54:59.086 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:54:59.086 | WARN  | sale_service | 262 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:55:01.826 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:55:01.826 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:55:01.827 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:55:01.827 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:55:01.932 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:55:01.933 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:55:02.075 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:55:02.075 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:55:02.076 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:55:02.076 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:55:02.076 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:55:02.077 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:55:02.143 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:55:02.143 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:55:02.143 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:55:02.143 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880ddaa10d1b5 (truncated)...]
24/12/23 17:55:02.143 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:55:02.143 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:55:02.143 | WARN  | sale_service | 211 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:55:02.143 | WARN  | sale_service | 210 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:55:02.144 | WARN  | sale_service | 316 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:55:02.144 | WARN  | sale_service | 316 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:55:04.843 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:55:04.843 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:55:04.845 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:55:04.845 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:55:04.971 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:55:04.971 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:55:05.068 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:55:05.068 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:55:05.069 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:55:05.069 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:55:05.069 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:55:05.069 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:55:05.118 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:55:05.119 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880ddaa10d1b5 (truncated)...]
24/12/23 17:55:05.119 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:55:05.120 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:55:05.121 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:55:05.122 | WARN  | sale_service | 277 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:55:05.125 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:55:05.126 | WARN  | sale_service | 282 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:55:07.823 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:55:07.824 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:55:07.826 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:55:07.826 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:55:07.924 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:55:07.927 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:55:08.017 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:55:08.018 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:55:08.019 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:55:08.031 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:55:08.032 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:55:08.035 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:55:08.079 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:55:08.080 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880ddaa10d1b5 (truncated)...]
24/12/23 17:55:08.080 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:55:08.080 | WARN  | sale_service | 254 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:55:08.084 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:55:08.085 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:55:08.085 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:55:08.085 | WARN  | sale_service | 259 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:55:09.099 | ERROR | sale_service | 0 | PingConnectionHandler.java: Unable to send PING command over channel: [id: 0xa47ce108, L:/192.168.31.183:51252 - R:tcp.appengine.bfcplatform.vn/103.69.194.195:13437]
org.redisson.client.RedisTimeoutException: Command execution timeout for command: (PING), params: [], Redis client: [addr=redis://tcp.appengine.bfcplatform.vn:13437]
	at org.redisson.client.RedisConnection.lambda$async$0(RedisConnection.java:244) ~[redisson-3.19.1.jar:3.19.1]
	at io.netty.util.HashedWheelTimer$HashedWheelTimeout.run(HashedWheelTimer.java:715) ~[netty-common-4.1.84.Final.jar:4.1.84.Final]
	at io.netty.util.concurrent.ImmediateExecutor.execute(ImmediateExecutor.java:34) ~[netty-common-4.1.84.Final.jar:4.1.84.Final]
	at io.netty.util.HashedWheelTimer$HashedWheelTimeout.expire(HashedWheelTimer.java:703) ~[netty-common-4.1.84.Final.jar:4.1.84.Final]
	at io.netty.util.HashedWheelTimer$HashedWheelBucket.expireTimeouts(HashedWheelTimer.java:790) ~[netty-common-4.1.84.Final.jar:4.1.84.Final]
	at io.netty.util.HashedWheelTimer$Worker.run(HashedWheelTimer.java:503) ~[netty-common-4.1.84.Final.jar:4.1.84.Final]
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) ~[netty-common-4.1.84.Final.jar:4.1.84.Final]
	at java.lang.Thread.run(Thread.java:829) ~[?:?]
24/12/23 17:55:10.830 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:55:10.832 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:55:10.835 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:55:10.836 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:55:10.944 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:55:10.944 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:55:11.039 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:55:11.039 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:55:11.040 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:55:11.043 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:55:11.043 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:55:11.043 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:55:11.089 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:55:11.089 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880ddaa10d1b5 (truncated)...]
24/12/23 17:55:11.089 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:55:11.089 | WARN  | sale_service | 257 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:55:11.090 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:55:11.090 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:55:11.090 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:55:11.090 | WARN  | sale_service | 254 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:55:14.153 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:55:14.153 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:55:14.153 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:55:14.153 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:55:14.247 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:55:14.252 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:55:14.365 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:55:14.365 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:55:14.366 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:55:14.369 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:55:14.370 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:55:14.370 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:55:14.418 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:55:14.418 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:55:14.418 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:55:14.418 | WARN  | sale_service | 264 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:55:14.426 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:55:14.426 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880ddaa10d1b5 (truncated)...]
24/12/23 17:55:14.427 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:55:14.427 | WARN  | sale_service | 273 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:55:15.080 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getProductCart(Authentication)
24/12/23 17:55:15.081 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:55:15.177 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:55:15.281 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart", parameters={}
24/12/23 17:55:15.281 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getProductCart(Authentication)
24/12/23 17:55:15.295 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:55:15.398 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "_id" : { "$in" : [{ "$oid" : "651d84c5a4cd6f49416b6fda"}]}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.SellerStore in collection: store
24/12/23 17:55:15.484 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "voucher_store_type" : "PRODUCT", "ref_id" : { "$in" : ["6532bbe5fae6d41599929246"]}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherStore in collection: voucher_store
24/12/23 17:55:15.672 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:55:15.672 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=[CartByStoreResponse(storeId=651d84c5a4cd6 (truncated)...]
24/12/23 17:55:15.672 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:55:15.673 | WARN  | sale_service | 497 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart
24/12/23 17:55:15.673 | WARN  | sale_service | 592 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart
24/12/23 17:55:15.745 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.VoucherController#getUserVoucher(Authentication, String)
24/12/23 17:55:15.746 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:55:15.839 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:55:15.934 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/voucher/user/voucher?productId=6532bbe5fae6d41599929246", parameters={masked}
24/12/23 17:55:15.934 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.VoucherController#getUserVoucher(Authentication, String)
24/12/23 17:55:15.948 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "voucher_store_type" : "PRODUCT", "ref_id" : "6532bbe5fae6d41599929246"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherStore in collection: voucher_store
24/12/23 17:55:15.996 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "voucher_store_type" : "STORE", "ref_id" : "651d84c5a4cd6f49416b6fda"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherStore in collection: voucher_store
24/12/23 17:55:16.042 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "owner_id" : "lambro25102001", "voucher_store_id" : "65846511d48c0b1c77d1ee61", "voucher_code_status" : "OWNER", "expire_time" : { "$gt" : 1703415316042}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherCode in collection: voucher_code
24/12/23 17:55:16.089 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "owner_id" : "lambro25102001", "voucher_store_id" : "6587e666208da64222b26afc", "voucher_code_status" : "OWNER", "expire_time" : { "$gt" : 1703415316089}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherCode in collection: voucher_code
24/12/23 17:55:16.136 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:55:16.136 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=[UserVoucherResponse(voucherStoreName=Giảm (truncated)...]
24/12/23 17:55:16.136 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:55:16.136 | WARN  | sale_service | 296 | AuthTokenFilter.java: end request ==> GET  /api/v1/voucher/user/voucher?productId=6532bbe5fae6d41599929246
24/12/23 17:55:16.136 | WARN  | sale_service | 390 | AuthTokenFilter.java: end request ==> GET  /api/v1/voucher/user/voucher?productId=6532bbe5fae6d41599929246
24/12/23 17:55:17.126 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:55:17.127 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:55:17.128 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:55:17.128 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:55:17.228 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:55:17.233 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:55:17.325 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:55:17.326 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:55:17.327 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:55:17.344 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:55:17.345 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:55:17.346 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:55:17.376 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:55:17.376 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:55:17.376 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:55:17.377 | WARN  | sale_service | 249 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:55:17.395 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:55:17.395 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880ddaa10d1b5 (truncated)...]
24/12/23 17:55:17.396 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:55:17.396 | WARN  | sale_service | 268 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:55:20.146 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:55:20.146 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:55:20.148 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:55:20.148 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:55:20.273 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:55:20.273 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:55:20.400 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:55:20.400 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:55:20.401 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:55:20.401 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:55:20.403 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:55:20.403 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:55:20.451 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:55:20.451 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880ddaa10d1b5 (truncated)...]
24/12/23 17:55:20.452 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:55:20.452 | WARN  | sale_service | 305 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:55:20.452 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:55:20.453 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:55:20.453 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:55:20.453 | WARN  | sale_service | 306 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:55:23.129 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:55:23.130 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:55:23.130 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:55:23.131 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:55:23.226 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:55:23.241 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:55:23.324 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:55:23.324 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:55:23.325 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:55:23.336 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:55:23.336 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:55:23.336 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:55:23.384 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:55:23.385 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:55:23.385 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:55:23.385 | WARN  | sale_service | 254 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:55:23.391 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:55:23.392 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880ddaa10d1b5 (truncated)...]
24/12/23 17:55:23.392 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:55:23.392 | WARN  | sale_service | 262 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:55:26.145 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:55:26.148 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:55:26.150 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:55:26.152 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:55:26.245 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:55:26.245 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:55:26.363 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:55:26.363 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:55:26.364 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:55:26.364 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:55:26.364 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:55:26.364 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:55:26.418 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:55:26.418 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:55:26.418 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:55:26.418 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:55:26.418 | WARN  | sale_service | 267 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:55:26.419 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880ddaa10d1b5 (truncated)...]
24/12/23 17:55:26.419 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:55:26.419 | WARN  | sale_service | 273 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:55:29.130 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:55:29.131 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:55:29.131 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:55:29.131 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:55:29.225 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:55:29.228 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:55:29.319 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:55:29.319 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:55:29.320 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:55:29.322 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:55:29.322 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:55:29.323 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:55:29.384 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:55:29.384 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:55:29.385 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:55:29.385 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880ddaa10d1b5 (truncated)...]
24/12/23 17:55:29.385 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:55:29.386 | WARN  | sale_service | 254 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:55:29.386 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:55:29.386 | WARN  | sale_service | 254 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:55:31.090 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getProductCart(Authentication)
24/12/23 17:55:31.091 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:55:31.191 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:55:31.283 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart", parameters={}
24/12/23 17:55:31.283 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getProductCart(Authentication)
24/12/23 17:55:31.358 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "_id" : { "$in" : [{ "$oid" : "651d84c5a4cd6f49416b6fda"}]}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.SellerStore in collection: store
24/12/23 17:55:31.503 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "voucher_store_type" : "PRODUCT", "ref_id" : { "$in" : ["6532bbe5fae6d41599929246"]}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherStore in collection: voucher_store
24/12/23 17:55:31.695 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:55:31.696 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=[CartByStoreResponse(storeId=651d84c5a4cd6 (truncated)...]
24/12/23 17:55:31.697 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:55:31.697 | WARN  | sale_service | 506 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart
24/12/23 17:55:31.697 | WARN  | sale_service | 605 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart
24/12/23 17:55:31.767 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.VoucherController#getUserVoucher(Authentication, String)
24/12/23 17:55:31.768 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:55:31.863 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:55:31.959 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/voucher/user/voucher?productId=6532bbe5fae6d41599929246", parameters={masked}
24/12/23 17:55:31.960 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.VoucherController#getUserVoucher(Authentication, String)
24/12/23 17:55:31.980 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "voucher_store_type" : "PRODUCT", "ref_id" : "6532bbe5fae6d41599929246"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherStore in collection: voucher_store
24/12/23 17:55:32.029 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "voucher_store_type" : "STORE", "ref_id" : "651d84c5a4cd6f49416b6fda"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherStore in collection: voucher_store
24/12/23 17:55:32.078 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "owner_id" : "lambro25102001", "voucher_store_id" : "65846511d48c0b1c77d1ee61", "voucher_code_status" : "OWNER", "expire_time" : { "$gt" : 1703415332078}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherCode in collection: voucher_code
24/12/23 17:55:32.127 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "owner_id" : "lambro25102001", "voucher_store_id" : "6587e666208da64222b26afc", "voucher_code_status" : "OWNER", "expire_time" : { "$gt" : 1703415332127}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherCode in collection: voucher_code
24/12/23 17:55:32.135 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:55:32.135 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:55:32.136 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:55:32.136 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:55:32.174 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:55:32.174 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=[UserVoucherResponse(voucherStoreName=Giảm (truncated)...]
24/12/23 17:55:32.175 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:55:32.175 | WARN  | sale_service | 311 | AuthTokenFilter.java: end request ==> GET  /api/v1/voucher/user/voucher?productId=6532bbe5fae6d41599929246
24/12/23 17:55:32.175 | WARN  | sale_service | 407 | AuthTokenFilter.java: end request ==> GET  /api/v1/voucher/user/voucher?productId=6532bbe5fae6d41599929246
24/12/23 17:55:32.234 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:55:32.238 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:55:32.345 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:55:32.345 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:55:32.345 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:55:32.345 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:55:32.345 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:55:32.346 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:55:32.404 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:55:32.404 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:55:32.404 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:55:32.404 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880ddaa10d1b5 (truncated)...]
24/12/23 17:55:32.405 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:55:32.405 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:55:32.405 | WARN  | sale_service | 268 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:55:32.405 | WARN  | sale_service | 269 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:55:32.737 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getProductCart(Authentication)
24/12/23 17:55:32.738 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:55:32.836 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:55:32.925 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart", parameters={}
24/12/23 17:55:32.926 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getProductCart(Authentication)
24/12/23 17:55:33.043 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "_id" : { "$in" : [{ "$oid" : "651d84c5a4cd6f49416b6fda"}]}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.SellerStore in collection: store
24/12/23 17:55:33.125 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "voucher_store_type" : "PRODUCT", "ref_id" : { "$in" : ["6532bbe5fae6d41599929246"]}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherStore in collection: voucher_store
24/12/23 17:55:33.295 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:55:33.296 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=[CartByStoreResponse(storeId=651d84c5a4cd6 (truncated)...]
24/12/23 17:55:33.296 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:55:33.296 | WARN  | sale_service | 461 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart
24/12/23 17:55:33.296 | WARN  | sale_service | 558 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart
24/12/23 17:55:33.358 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.VoucherController#getUserVoucher(Authentication, String)
24/12/23 17:55:33.359 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:55:33.475 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:55:33.569 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/voucher/user/voucher?productId=6532bbe5fae6d41599929246", parameters={masked}
24/12/23 17:55:33.569 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.VoucherController#getUserVoucher(Authentication, String)
24/12/23 17:55:33.592 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "voucher_store_type" : "PRODUCT", "ref_id" : "6532bbe5fae6d41599929246"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherStore in collection: voucher_store
24/12/23 17:55:33.679 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "voucher_store_type" : "STORE", "ref_id" : "651d84c5a4cd6f49416b6fda"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherStore in collection: voucher_store
24/12/23 17:55:33.727 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "owner_id" : "lambro25102001", "voucher_store_id" : "65846511d48c0b1c77d1ee61", "voucher_code_status" : "OWNER", "expire_time" : { "$gt" : 1703415333727}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherCode in collection: voucher_code
24/12/23 17:55:33.774 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "owner_id" : "lambro25102001", "voucher_store_id" : "6587e666208da64222b26afc", "voucher_code_status" : "OWNER", "expire_time" : { "$gt" : 1703415333774}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherCode in collection: voucher_code
24/12/23 17:55:33.831 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:55:33.831 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=[UserVoucherResponse(voucherStoreName=Giảm (truncated)...]
24/12/23 17:55:33.832 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:55:33.832 | WARN  | sale_service | 356 | AuthTokenFilter.java: end request ==> GET  /api/v1/voucher/user/voucher?productId=6532bbe5fae6d41599929246
24/12/23 17:55:33.832 | WARN  | sale_service | 473 | AuthTokenFilter.java: end request ==> GET  /api/v1/voucher/user/voucher?productId=6532bbe5fae6d41599929246
24/12/23 17:55:34.576 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getProductCart(Authentication)
24/12/23 17:55:34.576 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:55:34.669 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:55:34.758 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart", parameters={}
24/12/23 17:55:34.759 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getProductCart(Authentication)
24/12/23 17:55:34.830 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "_id" : { "$in" : [{ "$oid" : "651d84c5a4cd6f49416b6fda"}]}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.SellerStore in collection: store
24/12/23 17:55:34.905 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "voucher_store_type" : "PRODUCT", "ref_id" : { "$in" : ["6532bbe5fae6d41599929246"]}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherStore in collection: voucher_store
24/12/23 17:55:35.074 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:55:35.075 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=[CartByStoreResponse(storeId=651d84c5a4cd6 (truncated)...]
24/12/23 17:55:35.075 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:55:35.075 | WARN  | sale_service | 406 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart
24/12/23 17:55:35.076 | WARN  | sale_service | 500 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart
24/12/23 17:55:35.129 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.VoucherController#getUserVoucher(Authentication, String)
24/12/23 17:55:35.130 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:55:35.172 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:55:35.172 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:55:35.173 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:55:35.173 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:55:35.223 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:55:35.267 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:55:35.272 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:55:35.318 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/voucher/user/voucher?productId=6532bbe5fae6d41599929246", parameters={masked}
24/12/23 17:55:35.318 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.VoucherController#getUserVoucher(Authentication, String)
24/12/23 17:55:35.331 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "voucher_store_type" : "PRODUCT", "ref_id" : "6532bbe5fae6d41599929246"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherStore in collection: voucher_store
24/12/23 17:55:35.360 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:55:35.360 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:55:35.361 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:55:35.383 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "voucher_store_type" : "STORE", "ref_id" : "651d84c5a4cd6f49416b6fda"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherStore in collection: voucher_store
24/12/23 17:55:35.410 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:55:35.410 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:55:35.410 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:55:35.410 | WARN  | sale_service | 236 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:55:35.433 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "owner_id" : "lambro25102001", "voucher_store_id" : "65846511d48c0b1c77d1ee61", "voucher_code_status" : "OWNER", "expire_time" : { "$gt" : 1703415335433}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherCode in collection: voucher_code
24/12/23 17:55:35.505 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "owner_id" : "lambro25102001", "voucher_store_id" : "6587e666208da64222b26afc", "voucher_code_status" : "OWNER", "expire_time" : { "$gt" : 1703415335505}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherCode in collection: voucher_code
24/12/23 17:55:35.552 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:55:35.553 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=[UserVoucherResponse(voucherStoreName=Giảm (truncated)...]
24/12/23 17:55:35.553 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:55:35.553 | WARN  | sale_service | 331 | AuthTokenFilter.java: end request ==> GET  /api/v1/voucher/user/voucher?productId=6532bbe5fae6d41599929246
24/12/23 17:55:35.553 | WARN  | sale_service | 424 | AuthTokenFilter.java: end request ==> GET  /api/v1/voucher/user/voucher?productId=6532bbe5fae6d41599929246
24/12/23 17:55:35.650 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:55:35.650 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:55:35.651 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:55:35.701 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:55:35.701 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880ddaa10d1b5 (truncated)...]
24/12/23 17:55:35.702 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:55:35.702 | WARN  | sale_service | 430 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:55:35.702 | WARN  | sale_service | 529 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:55:38.136 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:55:38.136 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:55:38.136 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:55:38.136 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:55:38.183 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getProductCart(Authentication)
24/12/23 17:55:38.184 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:55:38.233 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:55:38.233 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:55:38.293 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:55:38.345 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:55:38.345 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:55:38.345 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:55:38.345 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:55:38.345 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:55:38.346 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:55:38.389 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart", parameters={}
24/12/23 17:55:38.389 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getProductCart(Authentication)
24/12/23 17:55:38.397 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:55:38.397 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:55:38.397 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:55:38.397 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880ddaa10d1b5 (truncated)...]
24/12/23 17:55:38.397 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:55:38.397 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:55:38.397 | WARN  | sale_service | 260 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:55:38.397 | WARN  | sale_service | 260 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:55:38.477 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "_id" : { "$in" : [{ "$oid" : "651d84c5a4cd6f49416b6fda"}]}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.SellerStore in collection: store
24/12/23 17:55:38.573 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "voucher_store_type" : "PRODUCT", "ref_id" : { "$in" : ["6532bbe5fae6d41599929246"]}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherStore in collection: voucher_store
24/12/23 17:55:38.815 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:55:38.815 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=[CartByStoreResponse(storeId=651d84c5a4cd6 (truncated)...]
24/12/23 17:55:38.815 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:55:38.815 | WARN  | sale_service | 523 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart
24/12/23 17:55:38.816 | WARN  | sale_service | 633 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart
24/12/23 17:55:38.879 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.VoucherController#getUserVoucher(Authentication, String)
24/12/23 17:55:38.880 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:55:38.975 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:55:39.068 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/voucher/user/voucher?productId=6532bbe5fae6d41599929246", parameters={masked}
24/12/23 17:55:39.068 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.VoucherController#getUserVoucher(Authentication, String)
24/12/23 17:55:39.080 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "voucher_store_type" : "PRODUCT", "ref_id" : "6532bbe5fae6d41599929246"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherStore in collection: voucher_store
24/12/23 17:55:39.127 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "voucher_store_type" : "STORE", "ref_id" : "651d84c5a4cd6f49416b6fda"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherStore in collection: voucher_store
24/12/23 17:55:39.212 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "owner_id" : "lambro25102001", "voucher_store_id" : "65846511d48c0b1c77d1ee61", "voucher_code_status" : "OWNER", "expire_time" : { "$gt" : 1703415339212}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherCode in collection: voucher_code
24/12/23 17:55:39.260 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "owner_id" : "lambro25102001", "voucher_store_id" : "6587e666208da64222b26afc", "voucher_code_status" : "OWNER", "expire_time" : { "$gt" : 1703415339260}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherCode in collection: voucher_code
24/12/23 17:55:39.308 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:55:39.308 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=[UserVoucherResponse(voucherStoreName=Giảm (truncated)...]
24/12/23 17:55:39.309 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:55:39.309 | WARN  | sale_service | 334 | AuthTokenFilter.java: end request ==> GET  /api/v1/voucher/user/voucher?productId=6532bbe5fae6d41599929246
24/12/23 17:55:39.309 | WARN  | sale_service | 428 | AuthTokenFilter.java: end request ==> GET  /api/v1/voucher/user/voucher?productId=6532bbe5fae6d41599929246
24/12/23 17:55:41.132 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:55:41.133 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:55:41.133 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:55:41.134 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:55:41.234 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:55:41.234 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:55:41.350 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:55:41.350 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:55:41.351 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:55:41.351 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:55:41.352 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:55:41.352 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:55:41.403 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:55:41.404 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:55:41.404 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880ddaa10d1b5 (truncated)...]
24/12/23 17:55:41.404 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:55:41.405 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:55:41.405 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:55:41.406 | WARN  | sale_service | 271 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:55:41.406 | WARN  | sale_service | 273 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:55:43.190 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#updateCart(Authentication, String, Long, String)
24/12/23 17:55:43.191 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:55:43.299 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:55:43.398 | DEBUG | sale_service | 0 | LogFormatUtils.java: PUT "/api/v1/cart/65880ddaa10d1b5728a693b5?quantity=5&voucherCodeId=65869a7f208da64222b26ab3", parameters={masked}
24/12/23 17:55:43.399 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#updateCart(Authentication, String, Long, String)
24/12/23 17:55:43.401 | DEBUG | sale_service | 0 | MongoTemplate.java: findOne using query: { "id" : { "$oid" : "65880ddaa10d1b5728a693b5"}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:55:43.402 | DEBUG | sale_service | 0 | MongoTemplate.java: findOne using query: { "_id" : { "$oid" : "65880ddaa10d1b5728a693b5"}} fields: {} in db.collection: db-salespage.cart
24/12/23 17:55:43.514 | DEBUG | sale_service | 0 | MongoTemplate.java: Saving Document containing fields: [_id, product_detail_id, product_name, username, voucher_code_id, store_id, voucher_info, quantity, created_at, updated_at, _class]
24/12/23 17:55:43.593 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:55:43.593 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=Cập nhật thành công, data=null)]
24/12/23 17:55:43.593 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:55:43.593 | WARN  | sale_service | 295 | AuthTokenFilter.java: end request ==> PUT  /api/v1/cart/65880ddaa10d1b5728a693b5?quantity=5&voucherCodeId=65869a7f208da64222b26ab3
24/12/23 17:55:43.594 | WARN  | sale_service | 404 | AuthTokenFilter.java: end request ==> PUT  /api/v1/cart/65880ddaa10d1b5728a693b5?quantity=5&voucherCodeId=65869a7f208da64222b26ab3
24/12/23 17:55:43.599 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getProductCart(Authentication)
24/12/23 17:55:43.601 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:55:43.985 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:55:44.079 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart", parameters={}
24/12/23 17:55:44.079 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getProductCart(Authentication)
24/12/23 17:55:44.092 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:55:44.132 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:55:44.132 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:55:44.132 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:55:44.132 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:55:44.195 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "_id" : { "$in" : [{ "$oid" : "651d84c5a4cd6f49416b6fda"}]}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.SellerStore in collection: store
24/12/23 17:55:44.225 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:55:44.227 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:55:44.319 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:55:44.319 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:55:44.319 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:55:44.320 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:55:44.320 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:55:44.320 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:55:44.356 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "voucher_store_type" : "PRODUCT", "ref_id" : { "$in" : ["6532bbe5fae6d41599929246"]}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherStore in collection: voucher_store
24/12/23 17:55:44.368 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:55:44.368 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:55:44.369 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880ddaa10d1b5 (truncated)...]
24/12/23 17:55:44.369 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:55:44.369 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:55:44.369 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:55:44.369 | WARN  | sale_service | 236 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:55:44.369 | WARN  | sale_service | 236 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:55:44.508 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:55:44.509 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=[CartByStoreResponse(storeId=651d84c5a4cd6 (truncated)...]
24/12/23 17:55:44.509 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:55:44.509 | WARN  | sale_service | 524 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart
24/12/23 17:55:44.509 | WARN  | sale_service | 908 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart
24/12/23 17:55:44.576 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.VoucherController#getUserVoucher(Authentication, String)
24/12/23 17:55:44.576 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:55:44.676 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:55:44.769 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/voucher/user/voucher?productId=6532bbe5fae6d41599929246", parameters={masked}
24/12/23 17:55:44.769 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.VoucherController#getUserVoucher(Authentication, String)
24/12/23 17:55:44.789 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "voucher_store_type" : "PRODUCT", "ref_id" : "6532bbe5fae6d41599929246"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherStore in collection: voucher_store
24/12/23 17:55:44.846 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "voucher_store_type" : "STORE", "ref_id" : "651d84c5a4cd6f49416b6fda"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherStore in collection: voucher_store
24/12/23 17:55:44.891 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "owner_id" : "lambro25102001", "voucher_store_id" : "65846511d48c0b1c77d1ee61", "voucher_code_status" : "OWNER", "expire_time" : { "$gt" : 1703415344890}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherCode in collection: voucher_code
24/12/23 17:55:44.942 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "owner_id" : "lambro25102001", "voucher_store_id" : "6587e666208da64222b26afc", "voucher_code_status" : "OWNER", "expire_time" : { "$gt" : 1703415344942}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherCode in collection: voucher_code
24/12/23 17:55:45.005 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:55:45.006 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=[UserVoucherResponse(voucherStoreName=Giảm (truncated)...]
24/12/23 17:55:45.006 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:55:45.006 | WARN  | sale_service | 330 | AuthTokenFilter.java: end request ==> GET  /api/v1/voucher/user/voucher?productId=6532bbe5fae6d41599929246
24/12/23 17:55:45.007 | WARN  | sale_service | 430 | AuthTokenFilter.java: end request ==> GET  /api/v1/voucher/user/voucher?productId=6532bbe5fae6d41599929246
24/12/23 17:55:47.157 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:55:47.157 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:55:47.159 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:55:47.160 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:55:47.255 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:55:47.257 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:55:47.348 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:55:47.348 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:55:47.349 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:55:47.356 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:55:47.356 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:55:47.356 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:55:47.395 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:55:47.396 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880ddaa10d1b5 (truncated)...]
24/12/23 17:55:47.396 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:55:47.396 | WARN  | sale_service | 236 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:55:47.403 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:55:47.403 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:55:47.403 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:55:47.404 | WARN  | sale_service | 245 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:55:49.883 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#paymentProductInCart(Authentication, List)
24/12/23 17:55:49.884 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:55:50.009 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:55:50.107 | DEBUG | sale_service | 0 | LogFormatUtils.java: POST "/api/v1/cart/payment", parameters={}
24/12/23 17:55:50.108 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#paymentProductInCart(Authentication, List)
24/12/23 17:55:50.108 | DEBUG | sale_service | 0 | LogFormatUtils.java: Read "application/json;charset=UTF-8" to [[CartPaymentDto(comboId=null, note=, transaction=[ProductTransactionDto(cartId=65880ddaa10d1b5728a69 (truncated)...]
24/12/23 17:55:51.807 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:55:51.807 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:55:51.808 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:55:51.808 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:55:51.810 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.User in collection: user
24/12/23 17:55:52.765 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:55:52.766 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:55:53.620 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:55:53.620 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:55:53.620 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:55:53.620 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:55:54.034 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:55:54.034 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:55:55.381 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:55:55.381 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:55:55.382 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:55:55.382 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880ddaa10d1b5 (truncated)...]
24/12/23 17:55:55.771 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:55:55.772 | WARN  | sale_service | 3008 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:55:55.772 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:55:55.772 | WARN  | sale_service | 3965 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:55:55.773 | WARN  | sale_service | 3009 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:55:55.773 | WARN  | sale_service | 3966 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:55:55.775 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:55:55.775 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:55:55.776 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:55:55.776 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:55:56.174 | DEBUG | sale_service | 0 | MongoTemplate.java: findOne using query: { "id" : { "$oid" : "65880ddaa10d1b5728a693b5"}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:55:56.178 | DEBUG | sale_service | 0 | MongoTemplate.java: findOne using query: { "_id" : { "$oid" : "65880ddaa10d1b5728a693b5"}} fields: {} in db.collection: db-salespage.cart
24/12/23 17:55:56.216 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:55:56.219 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:55:57.123 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:55:57.123 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:55:57.124 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:55:57.124 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:55:57.124 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:55:57.124 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:55:57.819 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:55:57.819 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:55:57.819 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:55:57.819 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880ddaa10d1b5 (truncated)...]
24/12/23 17:55:57.821 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:55:57.821 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:55:57.822 | WARN  | sale_service | 1606 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:55:57.822 | WARN  | sale_service | 1604 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:55:57.822 | WARN  | sale_service | 2047 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:55:57.822 | WARN  | sale_service | 2047 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:55:57.825 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:55:57.825 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:55:57.827 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:55:57.827 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:55:58.557 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:55:58.557 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:55:59.523 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:55:59.523 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:55:59.523 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:55:59.523 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:56:00.387 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:56:00.387 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:56:00.812 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:56:00.812 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:56:00.812 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:56:00.813 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880ddaa10d1b5 (truncated)...]
24/12/23 17:56:00.813 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:56:00.813 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:56:00.814 | WARN  | sale_service | 2257 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:56:00.814 | WARN  | sale_service | 2987 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:56:00.814 | WARN  | sale_service | 2257 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:56:00.814 | WARN  | sale_service | 2987 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:56:05.623 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:56:05.623 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:56:05.625 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:56:05.625 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:56:06.499 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:56:06.502 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:56:07.243 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:56:07.243 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:56:07.244 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:56:07.244 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:56:07.514 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:56:07.514 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:56:08.252 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:56:08.252 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:56:08.252 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:56:08.252 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880ddaa10d1b5 (truncated)...]
24/12/23 17:56:08.538 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:56:08.538 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:56:08.539 | WARN  | sale_service | 2039 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:56:08.539 | WARN  | sale_service | 2037 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:56:08.539 | WARN  | sale_service | 2914 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:56:08.539 | WARN  | sale_service | 2914 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:56:08.542 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:56:08.543 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:56:08.544 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:56:08.544 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:56:09.220 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:56:09.220 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:56:11.227 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:56:11.227 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:56:11.228 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:56:11.229 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:56:11.229 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:56:11.229 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:56:11.234 | DEBUG | sale_service | 0 | MongoTemplate.java: Saving Document containing fields: [_id, voucher_store_id, owner_id, code, expire_time, voucher_code_status, created_at, updated_at, _class]
24/12/23 17:56:11.275 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:56:11.275 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:56:11.276 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:56:11.276 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880ddaa10d1b5 (truncated)...]
24/12/23 17:56:11.276 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:56:11.276 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:56:11.276 | WARN  | sale_service | 2057 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:56:11.276 | WARN  | sale_service | 2057 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:56:11.276 | WARN  | sale_service | 2733 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:56:11.276 | WARN  | sale_service | 2733 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:56:11.278 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:56:11.278 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:56:11.278 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:56:11.278 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:56:15.948 | DEBUG | sale_service | 0 | MongoTemplate.java: Saving Document containing fields: [_id, product_id, type, quantity, origin_price, sell_price, discount_percent, username, created_at, updated_at, _class]
24/12/23 17:56:15.991 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:56:15.993 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:56:16.057 | DEBUG | sale_service | 0 | MongoTemplate.java: Saving Document containing fields: [_id, buyer_username, total_price, balance, product_transaction_details, note, combo_info, created_at, updated_at, _class]
24/12/23 17:56:16.084 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:56:16.084 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:56:16.084 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:56:16.092 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:56:16.092 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:56:16.092 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:56:16.135 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:56:16.136 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880ddaa10d1b5 (truncated)...]
24/12/23 17:56:16.136 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:56:16.136 | WARN  | sale_service | 4858 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:56:16.137 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:56:16.139 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:56:16.142 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:56:16.142 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:56:16.143 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:56:16.143 | WARN  | sale_service | 4865 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:56:16.145 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:56:16.146 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:56:16.156 | DEBUG | sale_service | 0 | MongoTemplate.java: Inserting list of Documents containing 1 items
24/12/23 17:56:16.239 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:56:16.249 | DEBUG | sale_service | 0 | MongoTemplate.java: Remove using query: { "_id" : { "$oid" : "65880ddaa10d1b5728a693b5"}} in collection: cart.
24/12/23 17:56:16.256 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:56:16.321 | DEBUG | sale_service | 0 | MongoTemplate.java: Inserting Document containing fields: [username, title, img_url, content, notification_status, notification_type, ref_id, created_at, updated_at, _class] in collection: notification
24/12/23 17:56:16.340 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:56:16.340 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:56:16.340 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:56:16.353 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:56:16.354 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:56:16.354 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:56:16.379 | DEBUG | sale_service | 0 | MongoTemplate.java: Saving Document containing fields: [_id, username, phone_number, display_name, image_url, rate, balance, _class]
24/12/23 17:56:16.387 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:56:16.387 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880ddaa10d1b5 (truncated)...]
24/12/23 17:56:16.387 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:56:16.387 | WARN  | sale_service | 249 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:56:16.388 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:56:16.389 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:56:16.399 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:56:16.399 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:56:16.400 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:56:16.400 | WARN  | sale_service | 255 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:56:16.401 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:56:16.401 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:56:16.500 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:56:16.507 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:56:16.520 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:56:16.521 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=Thanh toán thành công, đơn hàng đang được kiểm duyệt, (truncated)...]
24/12/23 17:56:16.521 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:56:16.522 | WARN  | sale_service | 26512 | AuthTokenFilter.java: end request ==> POST  /api/v1/cart/payment
24/12/23 17:56:16.523 | WARN  | sale_service | 26638 | AuthTokenFilter.java: end request ==> POST  /api/v1/cart/payment
24/12/23 17:56:16.595 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:56:16.596 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:56:16.596 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:56:16.603 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:56:16.604 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:56:16.604 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:56:16.646 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:56:16.646 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[], metadata=Metadata(to (truncated)...]
24/12/23 17:56:16.646 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:56:16.646 | WARN  | sale_service | 257 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:56:16.648 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:56:16.649 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:56:16.652 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:56:16.653 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:56:16.653 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:56:16.653 | WARN  | sale_service | 251 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:56:16.657 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:56:16.657 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:56:16.742 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:56:16.750 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:56:16.835 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:56:16.835 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:56:16.836 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:56:16.850 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:56:16.850 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:56:16.851 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:56:16.894 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:56:16.894 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[], metadata=Metadata(to (truncated)...]
24/12/23 17:56:16.894 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:56:16.894 | WARN  | sale_service | 246 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:56:16.910 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:56:16.911 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:56:16.911 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:56:16.911 | WARN  | sale_service | 254 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:56:17.128 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:56:17.128 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:56:17.128 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:56:17.128 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:56:17.227 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:56:17.227 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:56:17.322 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:56:17.322 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:56:17.323 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:56:17.323 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:56:17.323 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:56:17.323 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:56:17.368 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:56:17.368 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[], metadata=Metadata(to (truncated)...]
24/12/23 17:56:17.368 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:56:17.368 | WARN  | sale_service | 240 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:56:17.369 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:56:17.370 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:56:17.370 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:56:17.370 | WARN  | sale_service | 242 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:56:21.053 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:56:21.053 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:56:21.055 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:56:21.055 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:56:21.154 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:56:21.155 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:56:21.254 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:56:21.254 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:56:21.255 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:56:21.255 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:56:21.255 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:56:21.255 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:56:21.301 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:56:21.301 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:56:21.301 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:56:21.301 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[], metadata=Metadata(to (truncated)...]
24/12/23 17:56:21.302 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:56:21.302 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:56:21.302 | WARN  | sale_service | 247 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:56:21.302 | WARN  | sale_service | 247 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:56:24.054 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:56:24.054 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:56:24.055 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:56:24.055 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:56:24.155 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:56:24.155 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:56:24.255 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:56:24.255 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:56:24.255 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:56:24.260 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:56:24.261 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:56:24.261 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:56:24.304 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:56:24.304 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[], metadata=Metadata(to (truncated)...]
24/12/23 17:56:24.304 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:56:24.304 | WARN  | sale_service | 249 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:56:24.313 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:56:24.313 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:56:24.314 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:56:24.314 | WARN  | sale_service | 259 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:56:27.052 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:56:27.053 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:56:27.054 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:56:27.054 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:56:27.151 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:56:27.151 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:56:27.246 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:56:27.246 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:56:27.247 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:56:27.247 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:56:27.247 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:56:27.247 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:56:27.296 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:56:27.296 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[], metadata=Metadata(to (truncated)...]
24/12/23 17:56:27.296 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:56:27.297 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:56:27.297 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:56:27.297 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:56:27.297 | WARN  | sale_service | 244 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:56:27.297 | WARN  | sale_service | 242 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:56:30.050 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:56:30.050 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:56:30.051 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:56:30.051 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:56:30.166 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:56:30.166 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:56:30.262 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:56:30.263 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:56:30.263 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:56:30.267 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:56:30.267 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:56:30.268 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:56:30.320 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:56:30.320 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:56:30.321 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:56:30.321 | WARN  | sale_service | 270 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:56:30.330 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:56:30.330 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[], metadata=Metadata(to (truncated)...]
24/12/23 17:56:30.330 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:56:30.330 | WARN  | sale_service | 279 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:56:33.055 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:56:33.055 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:56:33.055 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:56:33.055 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:56:33.163 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:56:33.163 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:56:33.269 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:56:33.270 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:56:33.270 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:56:33.270 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:56:33.271 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:56:33.271 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:56:33.323 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:56:33.323 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:56:33.324 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[], metadata=Metadata(to (truncated)...]
24/12/23 17:56:33.324 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:56:33.325 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:56:33.325 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:56:33.325 | WARN  | sale_service | 269 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:56:33.326 | WARN  | sale_service | 270 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:56:35.130 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:56:35.130 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:56:35.131 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:56:35.131 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:56:35.223 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:56:35.227 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:56:35.331 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:56:35.331 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:56:35.332 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:56:35.332 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:56:35.332 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:56:35.332 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:56:35.379 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:56:35.379 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[], metadata=Metadata(to (truncated)...]
24/12/23 17:56:35.379 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:56:35.379 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:56:35.379 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:56:35.379 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:56:35.379 | WARN  | sale_service | 249 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:56:35.380 | WARN  | sale_service | 250 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:56:35.723 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:56:35.723 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:56:35.723 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:56:35.723 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:56:35.832 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:56:35.832 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:56:35.939 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:56:35.939 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:56:35.940 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:56:35.940 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:56:35.940 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:56:35.940 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:56:35.988 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:56:35.988 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[], metadata=Metadata(to (truncated)...]
24/12/23 17:56:35.989 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:56:35.989 | WARN  | sale_service | 266 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:56:36.069 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.publicControllers.PublicProductController#getAllProduct(String, String, Double, Double, String, String, String, String, Boolean, Long, Long, Authentication, Pageable)
24/12/23 17:56:36.069 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.publicControllers.PublicProductController#getHotProduct(Authentication)
24/12/23 17:56:36.070 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:56:36.070 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:56:36.171 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:56:36.171 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:56:36.270 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/public/product/hot-product", parameters={}
24/12/23 17:56:36.270 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/public/product?page=0&size=12", parameters={masked}
24/12/23 17:56:36.270 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.publicControllers.PublicProductController#getHotProduct(Authentication)
24/12/23 17:56:36.270 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.publicControllers.PublicProductController#getAllProduct(String, String, Double, Double, String, String, String, String, Boolean, Long, Long, Authentication, Pageable)
24/12/23 17:56:36.270 | INFO  | sale_service | 0 | PublicProductController.java: getProductDetail with username: {lambro25102001}
24/12/23 17:56:36.271 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.SearchHistory in collection: search_history
24/12/23 17:56:36.271 | INFO  | sale_service | 0 | PublicProductController.java: getProductDetail with username: {lambro25102001}
24/12/23 17:56:36.271 | DEBUG | sale_service | 0 | MongoTemplate.java: Executing count: {} in collection: product
24/12/23 17:56:36.317 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: {} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Product in collection: product
24/12/23 17:56:36.339 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "product_id" : { "$in" : ["6578615f79d74a1ab1f5c70c", "65785f9a79d74a1ab1f5c709", "656626cb6c78c45470cf8583", "6565806a6c78c45470cf8554", "655ce3dd524e3f7af0d0b85e", "655ce1fb524e3f7af0d0b857", "655ce182524e3f7af0d0b850", "655ce106524e3f7af0d0b84d", "655cdfb9524e3f7af0d0b842", "6535339b8d69bd44723ba6fb", "6532bbe5fae6d41599929246", "653609f1e14dd822b9121ad3"]}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.ProductStatistic in collection: product_statistic
24/12/23 17:56:36.370 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:56:36.371 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:56:36.371 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:56:36.371 | WARN  | sale_service | 539 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:56:36.371 | WARN  | sale_service | 647 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:56:36.419 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "product_id" : { "$in" : ["6532bbe5fae6d41599929246", "6535339b8d69bd44723ba6fb", "653609f1e14dd822b9121ad3", "65360a97e14dd822b9121ad4", "65360b29e14dd822b9121ad5", "653a7660a4b25b73765c1cda", "655cdfb9524e3f7af0d0b842", "655ce106524e3f7af0d0b84d", "655ce182524e3f7af0d0b850", "655ce1fb524e3f7af0d0b857", "655ce3dd524e3f7af0d0b85e", "6565806a6c78c45470cf8554"]}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.ProductStatistic in collection: product_statistic
24/12/23 17:56:37.012 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:56:37.013 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[ProductDataResponse(pro (truncated)...]
24/12/23 17:56:37.013 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:56:37.013 | WARN  | sale_service | 843 | AuthTokenFilter.java: end request ==> GET  /api/v1/public/product?page=0&size=12
24/12/23 17:56:37.013 | WARN  | sale_service | 944 | AuthTokenFilter.java: end request ==> GET  /api/v1/public/product?page=0&size=12
24/12/23 17:56:38.686 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:56:38.686 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:56:38.686 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:56:38.686 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:56:38.768 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:56:38.768 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=[ProductDataResponse(productId=6578615f79d (truncated)...]
24/12/23 17:56:38.768 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:56:38.769 | WARN  | sale_service | 2599 | AuthTokenFilter.java: end request ==> GET  /api/v1/public/product/hot-product
24/12/23 17:56:38.769 | WARN  | sale_service | 2699 | AuthTokenFilter.java: end request ==> GET  /api/v1/public/product/hot-product
24/12/23 17:56:38.784 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:56:38.786 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:56:38.875 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:56:38.875 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:56:38.876 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:56:38.877 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:56:38.877 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:56:38.877 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:56:38.922 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:56:38.922 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:56:38.922 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[], metadata=Metadata(to (truncated)...]
24/12/23 17:56:38.922 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:56:38.922 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:56:38.922 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:56:38.922 | WARN  | sale_service | 236 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:56:38.922 | WARN  | sale_service | 236 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:56:38.952 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.publicControllers.PublicSellerStoreController#getAllStore(String, String, Pageable)
24/12/23 17:56:38.953 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:56:39.050 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:56:39.195 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/public/seller-store?page=0&size=6", parameters={masked}
24/12/23 17:56:39.196 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.publicControllers.PublicSellerStoreController#getAllStore(String, String, Pageable)
24/12/23 17:56:39.196 | DEBUG | sale_service | 0 | MongoTemplate.java: Executing count: {} in collection: store
24/12/23 17:56:39.241 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: {} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.SellerStore in collection: store
24/12/23 17:56:39.288 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:56:39.289 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[SellerStoreResponse(id= (truncated)...]
24/12/23 17:56:39.289 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:56:39.289 | WARN  | sale_service | 239 | AuthTokenFilter.java: end request ==> GET  /api/v1/public/seller-store?page=0&size=6
24/12/23 17:56:39.289 | WARN  | sale_service | 337 | AuthTokenFilter.java: end request ==> GET  /api/v1/public/seller-store?page=0&size=6
24/12/23 17:56:41.681 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.publicControllers.PublicProductController#getSuggestProduct(String)
24/12/23 17:56:41.681 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.publicControllers.PublicRatingController#getRatingProduct(String, Pageable)
24/12/23 17:56:41.681 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.publicControllers.PublicProductController#getProductDetail(Authentication, String)
24/12/23 17:56:41.681 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.publicControllers.PublicVoucherController#getPublicVoucher(Authentication, String)
24/12/23 17:56:41.682 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:56:41.682 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:56:41.682 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:56:41.682 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:56:41.720 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:56:41.720 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:56:41.721 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:56:41.721 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:56:41.785 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:56:41.785 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:56:41.786 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:56:41.786 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:56:41.884 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/public/product/suggest/6532bbe5fae6d41599929246", parameters={}
24/12/23 17:56:41.884 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/public/voucher/6532bbe5fae6d41599929246", parameters={}
24/12/23 17:56:41.884 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/public/product/6532bbe5fae6d41599929246", parameters={}
24/12/23 17:56:41.884 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/public/rating/product/6532bbe5fae6d41599929246?page=0&size=6", parameters={masked}
24/12/23 17:56:41.884 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.publicControllers.PublicVoucherController#getPublicVoucher(Authentication, String)
24/12/23 17:56:41.884 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.publicControllers.PublicProductController#getSuggestProduct(String)
24/12/23 17:56:41.884 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.publicControllers.PublicProductController#getProductDetail(Authentication, String)
24/12/23 17:56:41.884 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.publicControllers.PublicRatingController#getRatingProduct(String, Pageable)
24/12/23 17:56:41.884 | INFO  | sale_service | 0 | PublicProductController.java: getProductDetail with username: {lambro25102001}
24/12/23 17:56:41.885 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "ref_id" : "6532bbe5fae6d41599929246", "rating_type" : "PRODUCT"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Rating in collection: rating
24/12/23 17:56:41.885 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "product_id" : "6532bbe5fae6d41599929246", "daily" : { "$date" : "2023-12-23T17:00:00Z"}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.ProductStatistic in collection: product_statistic
24/12/23 17:56:41.897 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "voucher_store_type" : "PRODUCT", "ref_id" : "6532bbe5fae6d41599929246"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherStore in collection: voucher_store
24/12/23 17:56:41.905 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "category_id" : "6532bb2ffae6d41599929245"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Product in collection: product
24/12/23 17:56:41.912 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "_id" : { "$in" : [{ "$oid" : "651d84c5a4cd6f49416b6fda"}]}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.SellerStore in collection: store
24/12/23 17:56:41.929 | ERROR | sale_service | 0 | SimpleAsyncUncaughtExceptionHandler.java: Unexpected exception occurred invoking async method: public void com.salespage.salespageservice.domains.services.StatisticService.updateView(java.lang.String)
java.lang.NullPointerException: null
	at com.salespage.salespageservice.domains.services.StatisticService.updateView(StatisticService.java:29) ~[classes/:?]
	at com.salespage.salespageservice.domains.services.StatisticService$$FastClassBySpringCGLIB$$9ffee42.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.3.23.jar:5.3.23]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793) ~[spring-aop-5.3.23.jar:5.3.23]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.3.23.jar:5.3.23]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.23.jar:5.3.23]
	at org.springframework.aop.interceptor.AsyncExecutionInterceptor.lambda$invoke$0(AsyncExecutionInterceptor.java:115) ~[spring-aop-5.3.23.jar:5.3.23]
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:264) ~[?:?]
	at java.util.concurrent.FutureTask.run(FutureTask.java) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) ~[?:?]
	at java.lang.Thread.run(Thread.java:829) ~[?:?]
24/12/23 17:56:41.932 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:56:41.932 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Rating(id=657dcd18f11b7 (truncated)...]
24/12/23 17:56:41.933 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:56:41.933 | WARN  | sale_service | 251 | AuthTokenFilter.java: end request ==> GET  /api/v1/public/rating/product/6532bbe5fae6d41599929246?page=0&size=6
24/12/23 17:56:41.942 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "voucher_store_type" : "STORE", "ref_id" : "651d84c5a4cd6f49416b6fda"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherStore in collection: voucher_store
24/12/23 17:56:41.952 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: {} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.ProductStatistic in collection: product_statistic
24/12/23 17:56:41.986 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "voucher_store_id" : { "$in" : ["65846511d48c0b1c77d1ee61", "6587e666208da64222b26afc"]}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherCodeLimit in collection: voucher_code_limit
24/12/23 17:56:41.998 | DEBUG | sale_service | 0 | MongoTemplate.java: findOne using query: { "id" : { "$oid" : "6532bb2ffae6d41599929245"}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.ProductCategory in collection: product_category
24/12/23 17:56:41.999 | DEBUG | sale_service | 0 | MongoTemplate.java: findOne using query: { "_id" : { "$oid" : "6532bb2ffae6d41599929245"}} fields: {} in db.collection: db-salespage.product_category
24/12/23 17:56:42.003 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "_id" : { "$in" : [{ "$oid" : "6532bbe5fae6d41599929246"}]}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Product in collection: product
24/12/23 17:56:42.036 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:56:42.036 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=[UserVoucherResponse(voucherStoreName=Giảm (truncated)...]
24/12/23 17:56:42.037 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:56:42.037 | WARN  | sale_service | 252 | AuthTokenFilter.java: end request ==> GET  /api/v1/public/voucher/6532bbe5fae6d41599929246
24/12/23 17:56:42.037 | WARN  | sale_service | 354 | AuthTokenFilter.java: end request ==> GET  /api/v1/public/voucher/6532bbe5fae6d41599929246
24/12/23 17:56:42.050 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:56:42.050 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=[ProductDataResponse(productId=653a7660a4b (truncated)...]
24/12/23 17:56:42.051 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:56:42.051 | WARN  | sale_service | 268 | AuthTokenFilter.java: end request ==> GET  /api/v1/public/product/suggest/6532bbe5fae6d41599929246
24/12/23 17:56:42.051 | WARN  | sale_service | 369 | AuthTokenFilter.java: end request ==> GET  /api/v1/public/product/suggest/6532bbe5fae6d41599929246
24/12/23 17:56:42.056 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "product_id" : "6532bbe5fae6d41599929246", "daily" : { "$date" : "2023-12-23T17:00:00Z"}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.ProductStatistic in collection: product_statistic
24/12/23 17:56:42.125 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "product_id" : "6532bbe5fae6d41599929246"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.ProductDetail in collection: product_detail
24/12/23 17:56:42.142 | INFO  | sale_service | 0 | SLF4JLogger.java: Opened connection [connectionId{localValue:13, serverValue:83796}] to ac-jh96ukw-shard-00-02.h9186rq.mongodb.net:27017
24/12/23 17:56:42.154 | INFO  | sale_service | 0 | SLF4JLogger.java: Opened connection [connectionId{localValue:12, serverValue:83796}] to ac-jh96ukw-shard-00-02.h9186rq.mongodb.net:27017
24/12/23 17:56:42.204 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "ref_id" : "6532bbe5fae6d41599929246", "favorite_type" : "PRODUCT"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.UserFavorite in collection: user_favarite
24/12/23 17:56:42.238 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:56:42.251 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:56:42.262 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "ref_id" : "6532bbe5fae6d41599929246", "rating_type" : "PRODUCT"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Rating in collection: rating
24/12/23 17:56:42.313 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:56:42.313 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=ProductDetailResponse(totalSell=null, tota (truncated)...]
24/12/23 17:56:42.314 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:56:42.315 | WARN  | sale_service | 532 | AuthTokenFilter.java: end request ==> GET  /api/v1/public/product/6532bbe5fae6d41599929246
24/12/23 17:56:42.315 | WARN  | sale_service | 633 | AuthTokenFilter.java: end request ==> GET  /api/v1/public/product/6532bbe5fae6d41599929246
24/12/23 17:56:42.330 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:56:42.330 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:56:42.331 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:56:42.347 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:56:42.347 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:56:42.348 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:56:42.376 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:56:42.376 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[], metadata=Metadata(to (truncated)...]
24/12/23 17:56:42.376 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:56:42.376 | WARN  | sale_service | 654 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:56:42.396 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:56:42.397 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:56:42.397 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:56:42.397 | WARN  | sale_service | 675 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:56:44.687 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:56:44.687 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:56:44.688 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:56:44.688 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:56:44.798 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:56:44.798 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:56:44.905 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:56:44.905 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:56:44.906 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:56:44.906 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:56:44.906 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:56:44.906 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:56:44.983 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:56:44.983 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[], metadata=Metadata(to (truncated)...]
24/12/23 17:56:44.983 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:56:44.983 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:56:44.984 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:56:44.984 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:56:44.984 | WARN  | sale_service | 296 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:56:44.984 | WARN  | sale_service | 296 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:56:47.691 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:56:47.692 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:56:47.694 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:56:47.694 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:56:47.809 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:56:47.809 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:56:47.903 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:56:47.904 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:56:47.904 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:56:47.905 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:56:47.905 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:56:47.906 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:56:47.959 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:56:47.959 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[], metadata=Metadata(to (truncated)...]
24/12/23 17:56:47.959 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:56:47.959 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:56:47.959 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:56:47.959 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:56:47.959 | WARN  | sale_service | 266 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:56:47.959 | WARN  | sale_service | 265 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:56:50.712 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:56:50.714 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:56:50.717 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:56:50.718 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:56:50.816 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:56:50.924 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:56:50.924 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:56:50.924 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:56:50.980 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:56:50.980 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[], metadata=Metadata(to (truncated)...]
24/12/23 17:56:50.980 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:56:50.981 | WARN  | sale_service | 268 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:56:51.105 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:56:51.204 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:56:51.204 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:56:51.204 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:56:51.261 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:56:51.261 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:56:51.261 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:56:51.261 | WARN  | sale_service | 544 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:56:52.483 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#createCart(Authentication, CartDto)
24/12/23 17:56:52.484 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:56:52.582 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:56:52.681 | DEBUG | sale_service | 0 | LogFormatUtils.java: POST "/api/v1/cart", parameters={}
24/12/23 17:56:52.681 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#createCart(Authentication, CartDto)
24/12/23 17:56:52.681 | DEBUG | sale_service | 0 | LogFormatUtils.java: Read "application/json;charset=UTF-8" to [CartDto(productDetailId=6532bc2ffae6d41599929247, quantity=2, storeId=651d84c5a4cd6f49416b6fda, vouc (truncated)...]
24/12/23 17:56:52.695 | DEBUG | sale_service | 0 | MongoTemplate.java: findOne using query: { "id" : { "$oid" : "6532bc2ffae6d41599929247"}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.ProductDetail in collection: product_detail
24/12/23 17:56:52.695 | DEBUG | sale_service | 0 | MongoTemplate.java: findOne using query: { "_id" : { "$oid" : "6532bc2ffae6d41599929247"}} fields: {} in db.collection: db-salespage.product_detail
24/12/23 17:56:52.793 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "product_detail_id" : "6532bc2ffae6d41599929247"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:56:52.851 | DEBUG | sale_service | 0 | MongoTemplate.java: Inserting Document containing fields: [username, title, img_url, content, notification_status, notification_type, ref_id, created_at, updated_at, _class] in collection: notification
24/12/23 17:56:52.905 | DEBUG | sale_service | 0 | MongoTemplate.java: Saving Document containing fields: [_id, product_detail_id, product_name, username, store_id, quantity, created_at, updated_at, _class]
24/12/23 17:56:52.985 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:56:52.985 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=Thêm vào giỏ hàng thành công, data=null)]
24/12/23 17:56:52.986 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:56:52.986 | WARN  | sale_service | 404 | AuthTokenFilter.java: end request ==> POST  /api/v1/cart
24/12/23 17:56:52.986 | WARN  | sale_service | 501 | AuthTokenFilter.java: end request ==> POST  /api/v1/cart
24/12/23 17:56:53.688 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:56:53.689 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:56:53.690 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:56:53.690 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:56:53.784 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:56:53.797 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:56:53.877 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:56:53.878 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:56:53.878 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:56:53.889 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:56:53.890 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:56:53.890 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:56:53.925 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:56:53.925 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:56:53.925 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:56:53.926 | WARN  | sale_service | 237 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:56:53.939 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:56:53.939 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 17:56:53.939 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:56:53.939 | WARN  | sale_service | 250 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:56:55.338 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:56:55.338 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:56:55.338 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:56:55.338 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:56:55.356 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getProductCart(Authentication)
24/12/23 17:56:55.357 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:56:55.439 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:56:55.439 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:56:55.452 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:56:55.531 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:56:55.531 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:56:55.532 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:56:55.535 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:56:55.535 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:56:55.535 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:56:55.548 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart", parameters={}
24/12/23 17:56:55.548 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getProductCart(Authentication)
24/12/23 17:56:55.562 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:56:55.578 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:56:55.578 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:56:55.579 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:56:55.579 | WARN  | sale_service | 240 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:56:55.581 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:56:55.582 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 17:56:55.582 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:56:55.582 | WARN  | sale_service | 243 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:56:55.646 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "_id" : { "$in" : [{ "$oid" : "6532bc2ffae6d41599929247"}]}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.ProductDetail in collection: product_detail
24/12/23 17:56:55.722 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "_id" : { "$in" : [{ "$oid" : "6532bbe5fae6d41599929246"}]}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Product in collection: product
24/12/23 17:56:55.800 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "_id" : { "$in" : [{ "$oid" : "6532bb2ffae6d41599929245"}]}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.ProductCategory in collection: product_category
24/12/23 17:56:55.901 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "_id" : { "$in" : [{ "$oid" : "651d84c5a4cd6f49416b6fda"}]}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.SellerStore in collection: store
24/12/23 17:56:55.986 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "product_id" : { "$in" : ["6532bbe5fae6d41599929246"]}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.ProductComboDetail in collection: product_combo_detail
24/12/23 17:56:56.044 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "voucher_store_type" : "PRODUCT", "ref_id" : { "$in" : ["6532bbe5fae6d41599929246"]}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherStore in collection: voucher_store
24/12/23 17:56:56.109 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "voucher_store_id" : { "$in" : ["65846511d48c0b1c77d1ee61", "6587e666208da64222b26afc"]}, "owner_id" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherCode in collection: voucher_code
24/12/23 17:56:56.243 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "_id" : { "$oid" : "6581bc657f9bde440a01886f"}, "state" : "ACTIVE"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.ProductCombo in collection: product_combo
24/12/23 17:56:56.343 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "_id" : { "$in" : [{ "$oid" : "6532bbe5fae6d41599929246"}, { "$oid" : "6535339b8d69bd44723ba6fb"}, { "$oid" : "655cdfb9524e3f7af0d0b842"}, { "$oid" : "653a7660a4b25b73765c1cda"}, { "$oid" : "658447aff3cf2559f4affd5e"}]}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Product in collection: product
24/12/23 17:56:56.404 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:56:56.404 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=[CartByStoreResponse(storeId=651d84c5a4cd6 (truncated)...]
24/12/23 17:56:56.405 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:56:56.405 | WARN  | sale_service | 953 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart
24/12/23 17:56:56.405 | WARN  | sale_service | 1047 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart
24/12/23 17:56:56.467 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.VoucherController#getUserVoucher(Authentication, String)
24/12/23 17:56:56.468 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:56:56.566 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:56:56.658 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/voucher/user/voucher?productId=6532bbe5fae6d41599929246", parameters={masked}
24/12/23 17:56:56.658 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.VoucherController#getUserVoucher(Authentication, String)
24/12/23 17:56:56.670 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "voucher_store_type" : "PRODUCT", "ref_id" : "6532bbe5fae6d41599929246"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherStore in collection: voucher_store
24/12/23 17:56:56.721 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "voucher_store_type" : "STORE", "ref_id" : "651d84c5a4cd6f49416b6fda"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherStore in collection: voucher_store
24/12/23 17:56:56.766 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "owner_id" : "lambro25102001", "voucher_store_id" : "65846511d48c0b1c77d1ee61", "voucher_code_status" : "OWNER", "expire_time" : { "$gt" : 1703415416766}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherCode in collection: voucher_code
24/12/23 17:56:56.813 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "owner_id" : "lambro25102001", "voucher_store_id" : "6587e666208da64222b26afc", "voucher_code_status" : "OWNER", "expire_time" : { "$gt" : 1703415416813}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherCode in collection: voucher_code
24/12/23 17:56:56.860 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:56:56.860 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=[UserVoucherResponse(voucherStoreName=Giảm (truncated)...]
24/12/23 17:56:56.861 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:56:56.861 | WARN  | sale_service | 295 | AuthTokenFilter.java: end request ==> GET  /api/v1/voucher/user/voucher?productId=6532bbe5fae6d41599929246
24/12/23 17:56:56.861 | WARN  | sale_service | 393 | AuthTokenFilter.java: end request ==> GET  /api/v1/voucher/user/voucher?productId=6532bbe5fae6d41599929246
24/12/23 17:56:58.283 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:56:58.285 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:56:58.287 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:56:58.288 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:56:58.383 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:56:58.385 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:56:58.480 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:56:58.480 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:56:58.480 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:56:58.480 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:56:58.480 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:56:58.480 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:56:58.526 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:56:58.526 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 17:56:58.527 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:56:58.527 | WARN  | sale_service | 242 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:56:58.528 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:56:58.528 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:56:58.528 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:56:58.528 | WARN  | sale_service | 242 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:57:00.187 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#updateCart(Authentication, String, Long, String)
24/12/23 17:57:00.189 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#updateCart(Authentication, String, Long, String)
24/12/23 17:57:00.189 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:57:00.283 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:57:00.377 | DEBUG | sale_service | 0 | LogFormatUtils.java: PUT "/api/v1/cart/65880e74a10d1b5728a693ba?quantity=2&voucherCodeId=6587e67d208da64222b26afd", parameters={masked}
24/12/23 17:57:00.377 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#updateCart(Authentication, String, Long, String)
24/12/23 17:57:00.378 | DEBUG | sale_service | 0 | MongoTemplate.java: findOne using query: { "id" : { "$oid" : "65880e74a10d1b5728a693ba"}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:57:00.378 | DEBUG | sale_service | 0 | MongoTemplate.java: findOne using query: { "_id" : { "$oid" : "65880e74a10d1b5728a693ba"}} fields: {} in db.collection: db-salespage.cart
24/12/23 17:57:00.464 | DEBUG | sale_service | 0 | MongoTemplate.java: findOne using query: { "id" : { "$oid" : "6587e67d208da64222b26afd"}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherCode in collection: voucher_code
24/12/23 17:57:00.464 | DEBUG | sale_service | 0 | MongoTemplate.java: findOne using query: { "_id" : { "$oid" : "6587e67d208da64222b26afd"}} fields: {} in db.collection: db-salespage.voucher_code
24/12/23 17:57:00.534 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "_id" : { "$oid" : "6587e666208da64222b26afc"}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherStore in collection: voucher_store
24/12/23 17:57:00.601 | DEBUG | sale_service | 0 | MongoTemplate.java: Saving Document containing fields: [_id, product_detail_id, product_name, username, voucher_code_id, store_id, voucher_info, quantity, created_at, updated_at, _class]
24/12/23 17:57:00.688 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:57:00.688 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=Cập nhật thành công, data=null)]
24/12/23 17:57:00.689 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:57:00.689 | WARN  | sale_service | 406 | AuthTokenFilter.java: end request ==> PUT  /api/v1/cart/65880e74a10d1b5728a693ba?quantity=2&voucherCodeId=6587e67d208da64222b26afd
24/12/23 17:57:00.689 | WARN  | sale_service | 500 | AuthTokenFilter.java: end request ==> PUT  /api/v1/cart/65880e74a10d1b5728a693ba?quantity=2&voucherCodeId=6587e67d208da64222b26afd
24/12/23 17:57:00.696 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getProductCart(Authentication)
24/12/23 17:57:00.697 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:57:00.793 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:57:00.888 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart", parameters={}
24/12/23 17:57:00.888 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getProductCart(Authentication)
24/12/23 17:57:00.907 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:57:01.020 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "_id" : { "$in" : [{ "$oid" : "651d84c5a4cd6f49416b6fda"}]}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.SellerStore in collection: store
24/12/23 17:57:01.096 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "voucher_store_type" : "PRODUCT", "ref_id" : { "$in" : ["6532bbe5fae6d41599929246"]}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherStore in collection: voucher_store
24/12/23 17:57:01.258 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:57:01.258 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=[CartByStoreResponse(storeId=651d84c5a4cd6 (truncated)...]
24/12/23 17:57:01.258 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:57:01.258 | WARN  | sale_service | 464 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart
24/12/23 17:57:01.258 | WARN  | sale_service | 561 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart
24/12/23 17:57:01.319 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.VoucherController#getUserVoucher(Authentication, String)
24/12/23 17:57:01.320 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:57:01.341 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:57:01.342 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:57:01.344 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:57:01.344 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:57:01.414 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:57:01.435 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:57:01.437 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:57:01.508 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/voucher/user/voucher?productId=6532bbe5fae6d41599929246", parameters={masked}
24/12/23 17:57:01.508 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.VoucherController#getUserVoucher(Authentication, String)
24/12/23 17:57:01.520 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "voucher_store_type" : "PRODUCT", "ref_id" : "6532bbe5fae6d41599929246"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherStore in collection: voucher_store
24/12/23 17:57:01.527 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:57:01.527 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:57:01.528 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:57:01.532 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:57:01.532 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:57:01.533 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:57:01.567 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "voucher_store_type" : "STORE", "ref_id" : "651d84c5a4cd6f49416b6fda"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherStore in collection: voucher_store
24/12/23 17:57:01.574 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:57:01.574 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 17:57:01.574 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:57:01.574 | WARN  | sale_service | 233 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:57:01.581 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:57:01.581 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:57:01.582 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:57:01.582 | WARN  | sale_service | 238 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:57:01.614 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "owner_id" : "lambro25102001", "voucher_store_id" : "65846511d48c0b1c77d1ee61", "voucher_code_status" : "OWNER", "expire_time" : { "$gt" : 1703415421613}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherCode in collection: voucher_code
24/12/23 17:57:01.662 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "owner_id" : "lambro25102001", "voucher_store_id" : "6587e666208da64222b26afc", "voucher_code_status" : "OWNER", "expire_time" : { "$gt" : 1703415421662}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherCode in collection: voucher_code
24/12/23 17:57:01.709 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:57:01.709 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=[UserVoucherResponse(voucherStoreName=Giảm (truncated)...]
24/12/23 17:57:01.710 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:57:01.710 | WARN  | sale_service | 295 | AuthTokenFilter.java: end request ==> GET  /api/v1/voucher/user/voucher?productId=6532bbe5fae6d41599929246
24/12/23 17:57:01.710 | WARN  | sale_service | 389 | AuthTokenFilter.java: end request ==> GET  /api/v1/voucher/user/voucher?productId=6532bbe5fae6d41599929246
24/12/23 17:57:04.276 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:57:04.276 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:57:04.277 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:57:04.277 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:57:04.373 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:57:04.376 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:57:04.464 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:57:04.464 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:57:04.465 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:57:04.484 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:57:04.484 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:57:04.485 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:57:04.519 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:57:04.519 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 17:57:04.519 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:57:04.519 | WARN  | sale_service | 243 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:57:04.533 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:57:04.534 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:57:04.534 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:57:04.534 | WARN  | sale_service | 258 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:57:07.283 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:57:07.283 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:57:07.284 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:57:07.284 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:57:07.391 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:57:07.425 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:57:07.487 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:57:07.487 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:57:07.489 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:57:07.531 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:57:07.531 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:57:07.532 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:57:07.539 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:57:07.540 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:57:07.541 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:57:07.541 | WARN  | sale_service | 258 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:57:07.600 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:57:07.600 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 17:57:07.600 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:57:07.600 | WARN  | sale_service | 315 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:57:10.274 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:57:10.274 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:57:10.275 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:57:10.275 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:57:10.395 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:57:10.395 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:57:10.568 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:57:10.568 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:57:10.569 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:57:10.569 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:57:10.571 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:57:10.572 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:57:10.624 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:57:10.624 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:57:10.624 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:57:10.625 | WARN  | sale_service | 229 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:57:10.625 | WARN  | sale_service | 351 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:57:10.654 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:57:10.654 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 17:57:10.654 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:57:10.655 | WARN  | sale_service | 260 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:57:10.655 | WARN  | sale_service | 381 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:57:13.273 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:57:13.273 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:57:13.274 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:57:13.274 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:57:13.368 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:57:13.370 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:57:13.490 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:57:13.490 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:57:13.491 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:57:13.492 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:57:13.492 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:57:13.492 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:57:13.538 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:57:13.538 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:57:13.538 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:57:13.538 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 17:57:13.538 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:57:13.539 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:57:13.539 | WARN  | sale_service | 264 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:57:13.539 | WARN  | sale_service | 264 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:57:16.352 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:57:16.354 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:57:16.354 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:57:16.356 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:57:16.450 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:57:16.453 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:57:16.545 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:57:16.545 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:57:16.545 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:57:16.550 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:57:16.550 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:57:16.550 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:57:16.598 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:57:16.599 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:57:16.600 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:57:16.600 | WARN  | sale_service | 243 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:57:16.612 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:57:16.613 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 17:57:16.613 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:57:16.614 | WARN  | sale_service | 261 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:57:19.284 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:57:19.285 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:57:19.287 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:57:19.287 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:57:19.394 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:57:19.394 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:57:19.487 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:57:19.487 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:57:19.488 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:57:19.490 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:57:19.490 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:57:19.490 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:57:19.534 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:57:19.534 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:57:19.534 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:57:19.535 | WARN  | sale_service | 249 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:57:19.539 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:57:19.539 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 17:57:19.540 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:57:19.540 | WARN  | sale_service | 255 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:57:22.273 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:57:22.273 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:57:22.274 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:57:22.274 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:57:22.375 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:57:22.375 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:57:22.485 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:57:22.485 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:57:22.486 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:57:22.486 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:57:22.486 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:57:22.486 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:57:22.533 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:57:22.533 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 17:57:22.533 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:57:22.533 | WARN  | sale_service | 260 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:57:22.541 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:57:22.541 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:57:22.541 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:57:22.542 | WARN  | sale_service | 269 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:57:22.875 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#updateCart(Authentication, String, Long, String)
24/12/23 17:57:22.877 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#updateCart(Authentication, String, Long, String)
24/12/23 17:57:22.878 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:57:22.974 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:57:23.067 | DEBUG | sale_service | 0 | LogFormatUtils.java: PUT "/api/v1/cart/65880e74a10d1b5728a693ba?quantity=3", parameters={masked}
24/12/23 17:57:23.067 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#updateCart(Authentication, String, Long, String)
24/12/23 17:57:23.068 | DEBUG | sale_service | 0 | MongoTemplate.java: findOne using query: { "id" : { "$oid" : "65880e74a10d1b5728a693ba"}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:57:23.068 | DEBUG | sale_service | 0 | MongoTemplate.java: findOne using query: { "_id" : { "$oid" : "65880e74a10d1b5728a693ba"}} fields: {} in db.collection: db-salespage.cart
24/12/23 17:57:23.164 | DEBUG | sale_service | 0 | MongoTemplate.java: Saving Document containing fields: [_id, product_detail_id, product_name, username, store_id, quantity, created_at, updated_at, _class]
24/12/23 17:57:23.270 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:57:23.271 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=Cập nhật thành công, data=null)]
24/12/23 17:57:23.271 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:57:23.272 | WARN  | sale_service | 298 | AuthTokenFilter.java: end request ==> PUT  /api/v1/cart/65880e74a10d1b5728a693ba?quantity=3
24/12/23 17:57:23.272 | WARN  | sale_service | 394 | AuthTokenFilter.java: end request ==> PUT  /api/v1/cart/65880e74a10d1b5728a693ba?quantity=3
24/12/23 17:57:23.829 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#updateCart(Authentication, String, Long, String)
24/12/23 17:57:23.831 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#updateCart(Authentication, String, Long, String)
24/12/23 17:57:23.832 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:57:23.928 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:57:24.025 | DEBUG | sale_service | 0 | LogFormatUtils.java: PUT "/api/v1/cart/65880e74a10d1b5728a693ba?quantity=2", parameters={masked}
24/12/23 17:57:24.025 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#updateCart(Authentication, String, Long, String)
24/12/23 17:57:24.026 | DEBUG | sale_service | 0 | MongoTemplate.java: findOne using query: { "id" : { "$oid" : "65880e74a10d1b5728a693ba"}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:57:24.027 | DEBUG | sale_service | 0 | MongoTemplate.java: findOne using query: { "_id" : { "$oid" : "65880e74a10d1b5728a693ba"}} fields: {} in db.collection: db-salespage.cart
24/12/23 17:57:24.108 | DEBUG | sale_service | 0 | MongoTemplate.java: Saving Document containing fields: [_id, product_detail_id, product_name, username, store_id, quantity, created_at, updated_at, _class]
24/12/23 17:57:24.184 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:57:24.185 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=Cập nhật thành công, data=null)]
24/12/23 17:57:24.185 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:57:24.185 | WARN  | sale_service | 258 | AuthTokenFilter.java: end request ==> PUT  /api/v1/cart/65880e74a10d1b5728a693ba?quantity=2
24/12/23 17:57:24.186 | WARN  | sale_service | 354 | AuthTokenFilter.java: end request ==> PUT  /api/v1/cart/65880e74a10d1b5728a693ba?quantity=2
24/12/23 17:57:25.277 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:57:25.278 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:57:25.279 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:57:25.279 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:57:25.371 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:57:25.374 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:57:25.468 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:57:25.468 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:57:25.469 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:57:25.469 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:57:25.469 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:57:25.469 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:57:25.516 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:57:25.516 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 17:57:25.516 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:57:25.517 | WARN  | sale_service | 238 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:57:25.519 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:57:25.520 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:57:25.520 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:57:25.520 | WARN  | sale_service | 241 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:57:28.273 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:57:28.273 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:57:28.274 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:57:28.274 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:57:28.397 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:57:28.397 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:57:28.489 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:57:28.489 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:57:28.489 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:57:28.495 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:57:28.495 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:57:28.495 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:57:28.535 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:57:28.535 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:57:28.535 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:57:28.535 | WARN  | sale_service | 261 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:57:28.544 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:57:28.544 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 17:57:28.545 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:57:28.545 | WARN  | sale_service | 271 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:57:31.281 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:57:31.281 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:57:31.283 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:57:31.284 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:57:31.378 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:57:31.391 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:57:31.474 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:57:31.475 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:57:31.476 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:57:31.485 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:57:31.485 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:57:31.487 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:57:31.522 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:57:31.522 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 17:57:31.523 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:57:31.523 | WARN  | sale_service | 241 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:57:31.535 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:57:31.536 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:57:31.536 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:57:31.536 | WARN  | sale_service | 253 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:57:33.437 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#paymentProductInCart(Authentication, List)
24/12/23 17:57:33.438 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:57:33.541 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:57:33.639 | DEBUG | sale_service | 0 | LogFormatUtils.java: POST "/api/v1/cart/payment", parameters={}
24/12/23 17:57:33.639 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#paymentProductInCart(Authentication, List)
24/12/23 17:57:33.641 | DEBUG | sale_service | 0 | LogFormatUtils.java: Read "application/json;charset=UTF-8" to [[CartPaymentDto(comboId=null, note=, transaction=[ProductTransactionDto(cartId=65880e74a10d1b5728a69 (truncated)...]
24/12/23 17:57:35.317 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:57:35.317 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:57:35.318 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:57:35.318 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:57:35.319 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.User in collection: user
24/12/23 17:57:35.834 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:57:35.834 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:57:36.194 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:57:36.194 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:57:36.195 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:57:36.195 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:57:36.378 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:57:36.379 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:57:36.563 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:57:36.563 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:57:36.563 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:57:36.563 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 17:57:36.730 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:57:36.730 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:57:36.730 | WARN  | sale_service | 895 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:57:36.730 | WARN  | sale_service | 895 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:57:36.731 | WARN  | sale_service | 1413 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:57:36.731 | WARN  | sale_service | 1413 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:57:36.906 | DEBUG | sale_service | 0 | MongoTemplate.java: findOne using query: { "id" : { "$oid" : "65880e74a10d1b5728a693ba"}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:57:36.910 | DEBUG | sale_service | 0 | MongoTemplate.java: findOne using query: { "_id" : { "$oid" : "65880e74a10d1b5728a693ba"}} fields: {} in db.collection: db-salespage.cart
24/12/23 17:57:37.314 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:57:37.314 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:57:37.316 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:57:37.316 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:57:37.747 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:57:37.747 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:57:37.766 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "_id" : { "$oid" : "6532bbe5fae6d41599929246"}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Product in collection: product
24/12/23 17:57:37.931 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:57:37.931 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:57:38.123 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:57:38.123 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:57:38.123 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:57:38.124 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:57:38.306 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:57:38.306 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:57:38.307 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 17:57:38.307 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:57:38.307 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:57:38.307 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:57:38.307 | WARN  | sale_service | 559 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:57:38.307 | WARN  | sale_service | 559 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:57:38.307 | WARN  | sale_service | 991 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:57:38.307 | WARN  | sale_service | 991 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:57:40.588 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:57:40.588 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:57:40.589 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:57:40.589 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:57:43.438 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:57:43.763 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:57:44.729 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:57:44.729 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:57:44.729 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:57:44.729 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:57:45.091 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:57:45.091 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:57:45.459 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:57:45.460 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:57:45.460 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 17:57:45.460 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:57:45.461 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:57:45.461 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:57:45.461 | WARN  | sale_service | 1699 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:57:45.462 | WARN  | sale_service | 2025 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:57:45.462 | WARN  | sale_service | 4873 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:57:45.462 | WARN  | sale_service | 4873 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:57:45.466 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:57:45.466 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:57:45.467 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:57:45.467 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:57:47.972 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:57:47.972 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:57:47.986 | ERROR | sale_service | 0 | CartController.java: =====>paymentProductInCart 
com.salespage.salespageservice.domains.exceptions.BadRequestException: Voucher chỉ có thể sử dụng cho các đơn hàng có giá trị từ 10000 đến 10000
	at com.salespage.salespageservice.domains.services.VoucherCodeService.getVoucherInfoAndUse(VoucherCodeService.java:262) ~[classes/:?]
	at com.salespage.salespageservice.domains.services.VoucherCodeService$$FastClassBySpringCGLIB$$9d37b437.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.3.23.jar:5.3.23]
	at org.springframework.aop.framework.CglibAopProxy.invokeMethod(CglibAopProxy.java:386) ~[spring-aop-5.3.23.jar:5.3.23]
	at org.springframework.aop.framework.CglibAopProxy.access$000(CglibAopProxy.java:85) ~[spring-aop-5.3.23.jar:5.3.23]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:704) ~[spring-aop-5.3.23.jar:5.3.23]
	at com.salespage.salespageservice.domains.services.VoucherCodeService$$EnhancerBySpringCGLIB$$543c9470.getVoucherInfoAndUse(<generated>) ~[classes/:?]
	at com.salespage.salespageservice.domains.services.CartService.paymentProductInCart(CartService.java:315) ~[classes/:?]
	at com.salespage.salespageservice.domains.services.CartService$$FastClassBySpringCGLIB$$b96c5258.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.3.23.jar:5.3.23]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793) ~[spring-aop-5.3.23.jar:5.3.23]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.3.23.jar:5.3.23]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.23.jar:5.3.23]
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123) ~[spring-tx-5.3.23.jar:5.3.23]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388) ~[spring-tx-5.3.23.jar:5.3.23]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-5.3.23.jar:5.3.23]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.23.jar:5.3.23]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.23.jar:5.3.23]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708) ~[spring-aop-5.3.23.jar:5.3.23]
	at com.salespage.salespageservice.domains.services.CartService$$EnhancerBySpringCGLIB$$6eb9cb73.paymentProductInCart(<generated>) ~[classes/:?]
	at com.salespage.salespageservice.app.controllers.CartController.paymentProductInCart(CartController.java:66) ~[classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205) ~[spring-web-5.3.23.jar:5.3.23]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150) ~[spring-web-5.3.23.jar:5.3.23]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117) ~[spring-webmvc-5.3.23.jar:5.3.23]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895) ~[spring-webmvc-5.3.23.jar:5.3.23]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808) ~[spring-webmvc-5.3.23.jar:5.3.23]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-5.3.23.jar:5.3.23]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1071) ~[spring-webmvc-5.3.23.jar:5.3.23]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964) ~[spring-webmvc-5.3.23.jar:5.3.23]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.3.23.jar:5.3.23]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909) ~[spring-webmvc-5.3.23.jar:5.3.23]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:517) ~[jakarta.servlet-api-4.0.4.jar:4.0.4]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.3.23.jar:5.3.23]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:584) ~[jakarta.servlet-api-4.0.4.jar:4.0.4]
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:799) ~[jetty-servlet-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.servlet.ServletHandler$ChainEnd.doFilter(ServletHandler.java:1656) ~[jetty-servlet-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.websocket.server.WebSocketUpgradeFilter.doFilter(WebSocketUpgradeFilter.java:292) ~[websocket-server-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.servlet.FilterHolder.doFilter(FilterHolder.java:193) ~[jetty-servlet-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.servlet.ServletHandler$Chain.doFilter(ServletHandler.java:1626) ~[jetty-servlet-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111) ~[spring-web-5.3.23.jar:5.3.23]
	at org.eclipse.jetty.servlet.FilterHolder.doFilter(FilterHolder.java:193) ~[jetty-servlet-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.servlet.ServletHandler$Chain.doFilter(ServletHandler.java:1626) ~[jetty-servlet-9.4.49.v20220914.jar:9.4.49.v20220914]
	at com.salespage.salespageservice.domains.security.jwt.AuthTokenFilter.doFilterInternal(AuthTokenFilter.java:77) ~[classes/:?]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.23.jar:5.3.23]
	at org.eclipse.jetty.servlet.FilterHolder.doFilter(FilterHolder.java:193) ~[jetty-servlet-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.servlet.ServletHandler$Chain.doFilter(ServletHandler.java:1626) ~[jetty-servlet-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337) ~[spring-security-web-5.7.4.jar:5.7.4]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115) ~[spring-security-web-5.7.4.jar:5.7.4]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81) ~[spring-security-web-5.7.4.jar:5.7.4]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.4.jar:5.7.4]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122) ~[spring-security-web-5.7.4.jar:5.7.4]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116) ~[spring-security-web-5.7.4.jar:5.7.4]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.4.jar:5.7.4]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126) ~[spring-security-web-5.7.4.jar:5.7.4]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81) ~[spring-security-web-5.7.4.jar:5.7.4]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.4.jar:5.7.4]
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109) ~[spring-security-web-5.7.4.jar:5.7.4]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.4.jar:5.7.4]
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149) ~[spring-security-web-5.7.4.jar:5.7.4]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.4.jar:5.7.4]
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63) ~[spring-security-web-5.7.4.jar:5.7.4]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.4.jar:5.7.4]
	at com.salespage.salespageservice.domains.security.jwt.AuthTokenFilter.doFilterInternal(AuthTokenFilter.java:77) ~[classes/:?]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.23.jar:5.3.23]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.4.jar:5.7.4]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103) ~[spring-security-web-5.7.4.jar:5.7.4]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89) ~[spring-security-web-5.7.4.jar:5.7.4]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.4.jar:5.7.4]
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91) ~[spring-web-5.3.23.jar:5.3.23]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.23.jar:5.3.23]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.4.jar:5.7.4]
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90) ~[spring-security-web-5.7.4.jar:5.7.4]
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75) ~[spring-security-web-5.7.4.jar:5.7.4]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.23.jar:5.3.23]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.4.jar:5.7.4]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112) ~[spring-security-web-5.7.4.jar:5.7.4]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82) ~[spring-security-web-5.7.4.jar:5.7.4]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.4.jar:5.7.4]
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55) ~[spring-security-web-5.7.4.jar:5.7.4]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.23.jar:5.3.23]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.4.jar:5.7.4]
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42) ~[spring-security-web-5.7.4.jar:5.7.4]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.23.jar:5.3.23]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.4.jar:5.7.4]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221) ~[spring-security-web-5.7.4.jar:5.7.4]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186) ~[spring-security-web-5.7.4.jar:5.7.4]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354) ~[spring-web-5.3.23.jar:5.3.23]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267) ~[spring-web-5.3.23.jar:5.3.23]
	at org.eclipse.jetty.servlet.FilterHolder.doFilter(FilterHolder.java:193) ~[jetty-servlet-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.servlet.ServletHandler$Chain.doFilter(ServletHandler.java:1626) ~[jetty-servlet-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.3.23.jar:5.3.23]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.23.jar:5.3.23]
	at org.eclipse.jetty.servlet.FilterHolder.doFilter(FilterHolder.java:193) ~[jetty-servlet-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.servlet.ServletHandler$Chain.doFilter(ServletHandler.java:1626) ~[jetty-servlet-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.3.23.jar:5.3.23]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.23.jar:5.3.23]
	at org.eclipse.jetty.servlet.FilterHolder.doFilter(FilterHolder.java:193) ~[jetty-servlet-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.servlet.ServletHandler$Chain.doFilter(ServletHandler.java:1626) ~[jetty-servlet-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.3.23.jar:5.3.23]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.23.jar:5.3.23]
	at org.eclipse.jetty.servlet.FilterHolder.doFilter(FilterHolder.java:193) ~[jetty-servlet-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.servlet.ServletHandler$Chain.doFilter(ServletHandler.java:1626) ~[jetty-servlet-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:552) ~[jetty-servlet-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143) ~[jetty-server-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:600) ~[jetty-security-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:127) ~[jetty-server-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:235) ~[jetty-server-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:1624) ~[jetty-server-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:233) ~[jetty-server-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1440) ~[jetty-server-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.server.handler.ScopedHandler.nextScope(ScopedHandler.java:188) ~[jetty-server-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:505) ~[jetty-servlet-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:1594) ~[jetty-server-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.server.handler.ScopedHandler.nextScope(ScopedHandler.java:186) ~[jetty-server-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1355) ~[jetty-server-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141) ~[jetty-server-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:127) ~[jetty-server-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.server.Server.handle(Server.java:516) ~[jetty-server-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.server.HttpChannel.lambda$handle$1(HttpChannel.java:487) ~[jetty-server-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.server.HttpChannel.dispatch(HttpChannel.java:732) ~[jetty-server-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:479) ~[jetty-server-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:277) ~[jetty-server-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:311) ~[jetty-io-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:105) ~[jetty-io-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.io.ChannelEndPoint$1.run(ChannelEndPoint.java:104) ~[jetty-io-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.runTask(EatWhatYouKill.java:338) ~[jetty-util-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.doProduce(EatWhatYouKill.java:315) ~[jetty-util-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.tryProduce(EatWhatYouKill.java:173) ~[jetty-util-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.run(EatWhatYouKill.java:131) ~[jetty-util-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.util.thread.ReservedThreadExecutor$ReservedThread.run(ReservedThreadExecutor.java:409) ~[jetty-util-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:883) ~[jetty-util-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:1034) ~[jetty-util-9.4.49.v20220914.jar:9.4.49.v20220914]
	at java.lang.Thread.run(Thread.java:829) ~[?:?]
24/12/23 17:57:47.987 | ERROR | sale_service | 0 | BaseController.java: BaseException(code=0)
24/12/23 17:57:47.987 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:57:47.987 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=true, message=Voucher chỉ có thể sử dụng cho các đơn hàng có giá trị (truncated)...]
24/12/23 17:57:47.987 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:57:47.988 | WARN  | sale_service | 14448 | AuthTokenFilter.java: end request ==> POST  /api/v1/cart/payment
24/12/23 17:57:47.988 | WARN  | sale_service | 14550 | AuthTokenFilter.java: end request ==> POST  /api/v1/cart/payment
24/12/23 17:57:48.063 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:57:48.064 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:57:48.064 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:57:48.069 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:57:48.070 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:57:48.070 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:57:48.108 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:57:48.108 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 17:57:48.108 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:57:48.109 | WARN  | sale_service | 2643 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:57:48.109 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:57:48.110 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:57:48.116 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:57:48.117 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:57:48.117 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:57:48.117 | WARN  | sale_service | 2651 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:57:48.118 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:57:48.119 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:57:48.211 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:57:48.212 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:57:48.305 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:57:48.306 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:57:48.307 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:57:48.309 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:57:48.311 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:57:48.312 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:57:48.358 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:57:48.358 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 17:57:48.358 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:57:48.359 | WARN  | sale_service | 248 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:57:48.363 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:57:48.363 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:57:48.364 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:57:48.364 | WARN  | sale_service | 245 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:57:49.278 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:57:49.278 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:57:49.279 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:57:49.279 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:57:49.372 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:57:49.382 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:57:49.462 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:57:49.463 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:57:49.464 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:57:49.478 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:57:49.478 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:57:49.478 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:57:49.509 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:57:49.509 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:57:49.509 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:57:49.509 | WARN  | sale_service | 231 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:57:49.526 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:57:49.527 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 17:57:49.527 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:57:49.527 | WARN  | sale_service | 249 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:57:52.283 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:57:52.283 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:57:52.284 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:57:52.284 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:57:52.379 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:57:52.379 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:57:52.474 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:57:52.474 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:57:52.474 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:57:52.484 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:57:52.485 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:57:52.485 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:57:52.523 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:57:52.524 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:57:52.524 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:57:52.524 | WARN  | sale_service | 239 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:57:52.541 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:57:52.541 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 17:57:52.542 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:57:52.543 | WARN  | sale_service | 259 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:57:55.281 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:57:55.281 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:57:55.281 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:57:55.281 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:57:55.378 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:57:55.382 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:57:55.475 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:57:55.475 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:57:55.475 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:57:55.475 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:57:55.475 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:57:55.476 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:57:55.532 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:57:55.532 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:57:55.532 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:57:55.532 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 17:57:55.532 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:57:55.532 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:57:55.532 | WARN  | sale_service | 250 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:57:55.532 | WARN  | sale_service | 250 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:57:57.370 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#paymentProductInCart(Authentication, List)
24/12/23 17:57:57.371 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:57:57.468 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:57:57.605 | DEBUG | sale_service | 0 | LogFormatUtils.java: POST "/api/v1/cart/payment", parameters={}
24/12/23 17:57:57.606 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#paymentProductInCart(Authentication, List)
24/12/23 17:57:57.606 | DEBUG | sale_service | 0 | LogFormatUtils.java: Read "application/json;charset=UTF-8" to [[CartPaymentDto(comboId=null, note=, transaction=[ProductTransactionDto(cartId=65880e74a10d1b5728a69 (truncated)...]
24/12/23 17:57:59.017 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:57:59.018 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:57:59.019 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:57:59.019 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:57:59.016 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.User in collection: user
24/12/23 17:57:59.532 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:57:59.532 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:57:59.891 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:57:59.891 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:57:59.891 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:57:59.891 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:58:00.059 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:58:00.059 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:58:00.234 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:58:00.234 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:58:00.235 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:58:00.235 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 17:58:00.393 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:58:00.393 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:58:00.393 | WARN  | sale_service | 862 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:58:00.393 | WARN  | sale_service | 862 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:58:00.394 | WARN  | sale_service | 1376 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:58:00.394 | WARN  | sale_service | 1376 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:58:00.566 | DEBUG | sale_service | 0 | MongoTemplate.java: findOne using query: { "id" : { "$oid" : "65880e74a10d1b5728a693ba"}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:58:00.570 | DEBUG | sale_service | 0 | MongoTemplate.java: findOne using query: { "_id" : { "$oid" : "65880e74a10d1b5728a693ba"}} fields: {} in db.collection: db-salespage.cart
24/12/23 17:58:01.307 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:58:01.307 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:58:01.308 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:58:01.308 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:58:01.323 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "_id" : { "$oid" : "6532bbe5fae6d41599929246"}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Product in collection: product
24/12/23 17:58:01.400 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:58:01.410 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:58:01.659 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:58:01.659 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:58:01.660 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:58:01.660 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:58:01.661 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:58:01.661 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:58:01.835 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:58:01.835 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:58:01.836 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 17:58:01.835 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:58:01.836 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:58:01.836 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:58:01.836 | WARN  | sale_service | 436 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:58:01.836 | WARN  | sale_service | 426 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:58:01.837 | WARN  | sale_service | 529 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:58:01.837 | WARN  | sale_service | 529 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:58:01.869 | DEBUG | sale_service | 0 | MongoTemplate.java: findOne using query: { "id" : { "$oid" : "651d84c5a4cd6f49416b6fda"}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.SellerStore in collection: store
24/12/23 17:58:01.872 | DEBUG | sale_service | 0 | MongoTemplate.java: findOne using query: { "_id" : { "$oid" : "651d84c5a4cd6f49416b6fda"}} fields: {} in db.collection: db-salespage.store
24/12/23 17:58:13.165 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:58:13.165 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:58:13.168 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:58:13.168 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:58:14.203 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:58:14.203 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:58:14.595 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:58:14.595 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:58:14.595 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:58:14.595 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:58:14.777 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:58:14.777 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:58:15.931 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:58:15.932 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 17:58:15.932 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:58:15.932 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:58:40.092 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:58:40.092 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:58:40.093 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:58:40.093 | WARN  | sale_service | 25889 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:58:40.093 | WARN  | sale_service | 25889 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:58:40.094 | WARN  | sale_service | 26927 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:58:40.095 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:58:40.095 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:58:40.095 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:58:40.097 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:58:40.098 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:58:40.098 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:58:40.098 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:58:40.094 | WARN  | sale_service | 26927 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:58:40.100 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:58:40.101 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:58:40.158 | ERROR | sale_service | 0 | CartController.java: =====>paymentProductInCart 
com.salespage.salespageservice.domains.exceptions.BadRequestException: Voucher chỉ có thể sử dụng cho các đơn hàng có giá trị từ 10000 đến 10000
	at com.salespage.salespageservice.domains.services.VoucherCodeService.getVoucherInfoAndUse(VoucherCodeService.java:262) ~[classes/:?]
	at com.salespage.salespageservice.domains.services.VoucherCodeService$$FastClassBySpringCGLIB$$9d37b437.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.3.23.jar:5.3.23]
	at org.springframework.aop.framework.CglibAopProxy.invokeMethod(CglibAopProxy.java:386) ~[spring-aop-5.3.23.jar:5.3.23]
	at org.springframework.aop.framework.CglibAopProxy.access$000(CglibAopProxy.java:85) ~[spring-aop-5.3.23.jar:5.3.23]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:704) ~[spring-aop-5.3.23.jar:5.3.23]
	at com.salespage.salespageservice.domains.services.VoucherCodeService$$EnhancerBySpringCGLIB$$543c9470.getVoucherInfoAndUse(<generated>) ~[classes/:?]
	at com.salespage.salespageservice.domains.services.CartService.paymentProductInCart(CartService.java:315) ~[classes/:?]
	at com.salespage.salespageservice.domains.services.CartService$$FastClassBySpringCGLIB$$b96c5258.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.3.23.jar:5.3.23]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793) ~[spring-aop-5.3.23.jar:5.3.23]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.3.23.jar:5.3.23]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.23.jar:5.3.23]
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123) ~[spring-tx-5.3.23.jar:5.3.23]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388) ~[spring-tx-5.3.23.jar:5.3.23]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-5.3.23.jar:5.3.23]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.23.jar:5.3.23]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.23.jar:5.3.23]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708) ~[spring-aop-5.3.23.jar:5.3.23]
	at com.salespage.salespageservice.domains.services.CartService$$EnhancerBySpringCGLIB$$6eb9cb73.paymentProductInCart(<generated>) ~[classes/:?]
	at com.salespage.salespageservice.app.controllers.CartController.paymentProductInCart(CartController.java:66) ~[classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205) ~[spring-web-5.3.23.jar:5.3.23]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150) ~[spring-web-5.3.23.jar:5.3.23]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117) ~[spring-webmvc-5.3.23.jar:5.3.23]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895) ~[spring-webmvc-5.3.23.jar:5.3.23]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808) ~[spring-webmvc-5.3.23.jar:5.3.23]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-5.3.23.jar:5.3.23]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1071) ~[spring-webmvc-5.3.23.jar:5.3.23]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964) ~[spring-webmvc-5.3.23.jar:5.3.23]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.3.23.jar:5.3.23]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909) ~[spring-webmvc-5.3.23.jar:5.3.23]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:517) ~[jakarta.servlet-api-4.0.4.jar:4.0.4]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.3.23.jar:5.3.23]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:584) ~[jakarta.servlet-api-4.0.4.jar:4.0.4]
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:799) ~[jetty-servlet-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.servlet.ServletHandler$ChainEnd.doFilter(ServletHandler.java:1656) ~[jetty-servlet-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.websocket.server.WebSocketUpgradeFilter.doFilter(WebSocketUpgradeFilter.java:292) ~[websocket-server-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.servlet.FilterHolder.doFilter(FilterHolder.java:193) ~[jetty-servlet-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.servlet.ServletHandler$Chain.doFilter(ServletHandler.java:1626) ~[jetty-servlet-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111) ~[spring-web-5.3.23.jar:5.3.23]
	at org.eclipse.jetty.servlet.FilterHolder.doFilter(FilterHolder.java:193) ~[jetty-servlet-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.servlet.ServletHandler$Chain.doFilter(ServletHandler.java:1626) ~[jetty-servlet-9.4.49.v20220914.jar:9.4.49.v20220914]
	at com.salespage.salespageservice.domains.security.jwt.AuthTokenFilter.doFilterInternal(AuthTokenFilter.java:77) ~[classes/:?]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.23.jar:5.3.23]
	at org.eclipse.jetty.servlet.FilterHolder.doFilter(FilterHolder.java:193) ~[jetty-servlet-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.servlet.ServletHandler$Chain.doFilter(ServletHandler.java:1626) ~[jetty-servlet-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337) ~[spring-security-web-5.7.4.jar:5.7.4]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115) ~[spring-security-web-5.7.4.jar:5.7.4]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81) ~[spring-security-web-5.7.4.jar:5.7.4]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.4.jar:5.7.4]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122) ~[spring-security-web-5.7.4.jar:5.7.4]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116) ~[spring-security-web-5.7.4.jar:5.7.4]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.4.jar:5.7.4]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126) ~[spring-security-web-5.7.4.jar:5.7.4]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81) ~[spring-security-web-5.7.4.jar:5.7.4]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.4.jar:5.7.4]
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109) ~[spring-security-web-5.7.4.jar:5.7.4]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.4.jar:5.7.4]
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149) ~[spring-security-web-5.7.4.jar:5.7.4]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.4.jar:5.7.4]
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63) ~[spring-security-web-5.7.4.jar:5.7.4]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.4.jar:5.7.4]
	at com.salespage.salespageservice.domains.security.jwt.AuthTokenFilter.doFilterInternal(AuthTokenFilter.java:77) ~[classes/:?]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.23.jar:5.3.23]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.4.jar:5.7.4]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103) ~[spring-security-web-5.7.4.jar:5.7.4]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89) ~[spring-security-web-5.7.4.jar:5.7.4]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.4.jar:5.7.4]
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91) ~[spring-web-5.3.23.jar:5.3.23]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.23.jar:5.3.23]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.4.jar:5.7.4]
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90) ~[spring-security-web-5.7.4.jar:5.7.4]
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75) ~[spring-security-web-5.7.4.jar:5.7.4]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.23.jar:5.3.23]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.4.jar:5.7.4]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112) ~[spring-security-web-5.7.4.jar:5.7.4]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82) ~[spring-security-web-5.7.4.jar:5.7.4]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.4.jar:5.7.4]
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55) ~[spring-security-web-5.7.4.jar:5.7.4]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.23.jar:5.3.23]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.4.jar:5.7.4]
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42) ~[spring-security-web-5.7.4.jar:5.7.4]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.23.jar:5.3.23]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.4.jar:5.7.4]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221) ~[spring-security-web-5.7.4.jar:5.7.4]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186) ~[spring-security-web-5.7.4.jar:5.7.4]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354) ~[spring-web-5.3.23.jar:5.3.23]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267) ~[spring-web-5.3.23.jar:5.3.23]
	at org.eclipse.jetty.servlet.FilterHolder.doFilter(FilterHolder.java:193) ~[jetty-servlet-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.servlet.ServletHandler$Chain.doFilter(ServletHandler.java:1626) ~[jetty-servlet-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.3.23.jar:5.3.23]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.23.jar:5.3.23]
	at org.eclipse.jetty.servlet.FilterHolder.doFilter(FilterHolder.java:193) ~[jetty-servlet-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.servlet.ServletHandler$Chain.doFilter(ServletHandler.java:1626) ~[jetty-servlet-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.3.23.jar:5.3.23]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.23.jar:5.3.23]
	at org.eclipse.jetty.servlet.FilterHolder.doFilter(FilterHolder.java:193) ~[jetty-servlet-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.servlet.ServletHandler$Chain.doFilter(ServletHandler.java:1626) ~[jetty-servlet-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.3.23.jar:5.3.23]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.23.jar:5.3.23]
	at org.eclipse.jetty.servlet.FilterHolder.doFilter(FilterHolder.java:193) ~[jetty-servlet-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.servlet.ServletHandler$Chain.doFilter(ServletHandler.java:1626) ~[jetty-servlet-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:552) ~[jetty-servlet-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143) ~[jetty-server-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:600) ~[jetty-security-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:127) ~[jetty-server-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:235) ~[jetty-server-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:1624) ~[jetty-server-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:233) ~[jetty-server-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1440) ~[jetty-server-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.server.handler.ScopedHandler.nextScope(ScopedHandler.java:188) ~[jetty-server-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:505) ~[jetty-servlet-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:1594) ~[jetty-server-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.server.handler.ScopedHandler.nextScope(ScopedHandler.java:186) ~[jetty-server-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1355) ~[jetty-server-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141) ~[jetty-server-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:127) ~[jetty-server-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.server.Server.handle(Server.java:516) ~[jetty-server-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.server.HttpChannel.lambda$handle$1(HttpChannel.java:487) ~[jetty-server-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.server.HttpChannel.dispatch(HttpChannel.java:732) ~[jetty-server-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:479) ~[jetty-server-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:277) ~[jetty-server-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:311) ~[jetty-io-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:105) ~[jetty-io-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.io.ChannelEndPoint$1.run(ChannelEndPoint.java:104) ~[jetty-io-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.runTask(EatWhatYouKill.java:338) ~[jetty-util-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.doProduce(EatWhatYouKill.java:315) ~[jetty-util-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.tryProduce(EatWhatYouKill.java:173) ~[jetty-util-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.run(EatWhatYouKill.java:131) ~[jetty-util-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.util.thread.ReservedThreadExecutor$ReservedThread.run(ReservedThreadExecutor.java:409) ~[jetty-util-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:883) ~[jetty-util-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:1034) ~[jetty-util-9.4.49.v20220914.jar:9.4.49.v20220914]
	at java.lang.Thread.run(Thread.java:829) ~[?:?]
24/12/23 17:58:40.159 | ERROR | sale_service | 0 | BaseController.java: BaseException(code=0)
24/12/23 17:58:40.160 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:58:40.160 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=true, message=Voucher chỉ có thể sử dụng cho các đơn hàng có giá trị (truncated)...]
24/12/23 17:58:40.160 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:58:40.160 | WARN  | sale_service | 42691 | AuthTokenFilter.java: end request ==> POST  /api/v1/cart/payment
24/12/23 17:58:40.160 | WARN  | sale_service | 42789 | AuthTokenFilter.java: end request ==> POST  /api/v1/cart/payment
24/12/23 17:58:40.162 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:58:40.163 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:58:40.187 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:58:40.193 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:58:40.193 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:58:40.193 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:58:40.194 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:58:40.260 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:58:40.287 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:58:40.287 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:58:40.289 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:58:40.289 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:58:40.289 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:58:40.289 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:58:40.290 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:58:40.290 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:58:40.290 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:58:40.290 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:58:40.291 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:58:40.291 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:58:40.293 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:58:40.294 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:58:40.295 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:58:40.339 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:58:40.339 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:58:40.339 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 17:58:40.339 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 17:58:40.339 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:58:40.339 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:58:40.340 | WARN  | sale_service | 246 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:58:40.340 | WARN  | sale_service | 243 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:58:40.342 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:58:40.342 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:58:40.342 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:58:40.342 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:58:40.342 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:58:40.342 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:58:40.343 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:58:40.343 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:58:40.343 | WARN  | sale_service | 245 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:58:40.344 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:58:40.343 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:58:40.345 | WARN  | sale_service | 247 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:58:40.345 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:58:40.346 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:58:40.346 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:58:40.347 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:58:40.347 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 17:58:40.347 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:58:40.348 | WARN  | sale_service | 248 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:58:40.348 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:58:40.349 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:58:40.350 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:58:40.355 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:58:40.355 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:58:40.356 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:58:40.419 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:58:40.420 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:58:40.420 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:58:40.420 | WARN  | sale_service | 258 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:58:40.422 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:58:40.423 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:58:40.442 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:58:40.442 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:58:40.448 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:58:40.448 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:58:40.453 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:58:40.515 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:58:40.540 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:58:40.540 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:58:40.540 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:58:40.540 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:58:40.540 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:58:40.540 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:58:40.551 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:58:40.552 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:58:40.551 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:58:40.552 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:58:40.552 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:58:40.552 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:58:40.552 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:58:40.552 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:58:40.552 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:58:40.587 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:58:40.587 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:58:40.587 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:58:40.587 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 17:58:40.588 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:58:40.588 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:58:40.588 | WARN  | sale_service | 245 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:58:40.588 | WARN  | sale_service | 245 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:58:40.614 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:58:40.614 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:58:40.614 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:58:40.614 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 17:58:40.614 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 17:58:40.614 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:58:40.614 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:58:40.614 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:58:40.615 | WARN  | sale_service | 270 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:58:40.615 | WARN  | sale_service | 266 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:58:40.615 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:58:40.616 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:58:40.617 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:58:40.663 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:58:40.663 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:58:40.663 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:58:40.663 | WARN  | sale_service | 215 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:58:40.663 | WARN  | sale_service | 315 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:58:40.667 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:58:40.667 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:58:40.667 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:58:40.667 | WARN  | sale_service | 245 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:58:40.669 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:58:40.669 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:58:40.720 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:58:40.766 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:58:40.816 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:58:40.817 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:58:40.817 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:58:40.862 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:58:40.862 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:58:40.863 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:58:40.870 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:58:40.870 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 17:58:40.871 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:58:40.871 | WARN  | sale_service | 253 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:58:40.873 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:58:40.875 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:58:40.925 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:58:40.925 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:58:40.926 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:58:40.926 | WARN  | sale_service | 257 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:58:40.927 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:58:40.928 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:58:40.989 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:58:41.035 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:58:41.105 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:58:41.105 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:58:41.106 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:58:41.150 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:58:41.151 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:58:41.152 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:58:41.168 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:58:41.169 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 17:58:41.169 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:58:41.170 | WARN  | sale_service | 295 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:58:41.175 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:58:41.178 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:58:41.204 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:58:41.204 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:58:41.204 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:58:41.205 | WARN  | sale_service | 276 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:58:41.206 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:58:41.207 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:58:41.392 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:58:41.392 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:58:41.492 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:58:41.492 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:58:41.493 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:58:41.493 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:58:41.493 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:58:41.493 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:58:41.540 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:58:41.541 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 17:58:41.541 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:58:41.541 | WARN  | sale_service | 364 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:58:41.542 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:58:41.543 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:58:41.547 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:58:41.547 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:58:41.547 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:58:41.547 | WARN  | sale_service | 340 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:58:41.549 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:58:41.549 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:58:41.640 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:58:41.652 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:58:41.735 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:58:41.735 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:58:41.736 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:58:41.750 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:58:41.750 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:58:41.751 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:58:41.782 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:58:41.782 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 17:58:41.783 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:58:41.783 | WARN  | sale_service | 241 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:58:41.784 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:58:41.784 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:58:41.800 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:58:41.800 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:58:41.800 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:58:41.800 | WARN  | sale_service | 251 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:58:41.807 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:58:41.808 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:58:41.888 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:58:41.911 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:58:41.981 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:58:41.982 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:58:41.982 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:58:42.007 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:58:42.008 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:58:42.009 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:58:42.028 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:58:42.029 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 17:58:42.029 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:58:42.029 | WARN  | sale_service | 244 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:58:42.030 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:58:42.031 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:58:42.061 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:58:42.062 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:58:42.062 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:58:42.062 | WARN  | sale_service | 254 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:58:42.063 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:58:42.064 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:58:42.124 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:58:42.162 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:58:42.226 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:58:42.226 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:58:42.226 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:58:42.272 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:58:42.272 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:58:42.273 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:58:42.277 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:58:42.277 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 17:58:42.278 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:58:42.278 | WARN  | sale_service | 247 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:58:42.324 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:58:42.325 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:58:42.325 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:58:42.325 | WARN  | sale_service | 262 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:58:44.059 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:58:44.060 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:58:44.060 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:58:44.061 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:58:44.155 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:58:44.155 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:58:44.255 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:58:44.255 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:58:44.256 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:58:44.256 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:58:44.256 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:58:44.256 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:58:44.305 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:58:44.305 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 17:58:44.305 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:58:44.305 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:58:44.305 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:58:44.305 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:58:44.305 | WARN  | sale_service | 246 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:58:44.305 | WARN  | sale_service | 245 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:58:47.062 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:58:47.062 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:58:47.063 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:58:47.063 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:58:47.165 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:58:47.166 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:58:47.263 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:58:47.264 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:58:47.264 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:58:47.264 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:58:47.264 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:58:47.264 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:58:47.311 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:58:47.312 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 17:58:47.312 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:58:47.312 | WARN  | sale_service | 249 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:58:47.315 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:58:47.315 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:58:47.315 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:58:47.316 | WARN  | sale_service | 253 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:58:50.058 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:58:50.058 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:58:50.059 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:58:50.059 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:58:50.167 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:58:50.170 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:58:50.266 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:58:50.266 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:58:50.266 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:58:50.266 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:58:50.266 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:58:50.267 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:58:50.345 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:58:50.346 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 17:58:50.346 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:58:50.346 | WARN  | sale_service | 287 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:58:50.360 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:58:50.361 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:58:50.361 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:58:50.361 | WARN  | sale_service | 302 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:58:53.071 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:58:53.073 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:58:53.075 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:58:53.076 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:58:53.176 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:58:53.176 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:58:53.273 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:58:53.274 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:58:53.274 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:58:53.281 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:58:53.281 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:58:53.282 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:58:53.326 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:58:53.326 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 17:58:53.327 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:58:53.327 | WARN  | sale_service | 253 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:58:53.332 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:58:53.332 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:58:53.333 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:58:53.333 | WARN  | sale_service | 258 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:58:56.060 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:58:56.060 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:58:56.061 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:58:56.061 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:58:56.153 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:58:56.157 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:58:56.249 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:58:56.249 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:58:56.249 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:58:56.251 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:58:56.251 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:58:56.251 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:58:56.306 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:58:56.307 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:58:56.307 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 17:58:56.307 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:58:56.307 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:58:56.307 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:58:56.307 | WARN  | sale_service | 246 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:58:56.307 | WARN  | sale_service | 246 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:58:59.056 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:58:59.056 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:58:59.058 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:58:59.059 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:58:59.162 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:58:59.162 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:58:59.258 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:58:59.258 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:58:59.259 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:58:59.259 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:58:59.260 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:58:59.260 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:58:59.308 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:58:59.308 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 17:58:59.309 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:58:59.310 | WARN  | sale_service | 252 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:58:59.312 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:58:59.313 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:58:59.314 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:58:59.315 | WARN  | sale_service | 257 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:59:02.070 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:59:02.071 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:59:02.073 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:59:02.073 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:59:02.177 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:59:02.177 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:59:02.271 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:59:02.271 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:59:02.272 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:59:02.272 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:59:02.272 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:59:02.272 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:59:02.318 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:59:02.319 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 17:59:02.319 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:59:02.319 | WARN  | sale_service | 248 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:59:02.320 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:59:02.320 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:59:02.321 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:59:02.321 | WARN  | sale_service | 249 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:59:05.071 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:59:05.073 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:59:05.075 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:59:05.077 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:59:05.168 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:59:05.181 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:59:05.226 | INFO  | sale_service | 0 | NetworkClient.java: [Consumer clientId=consumer-bizfly-7-453-PaymentTransaction-3, groupId=bizfly-7-453-PaymentTransaction] Node -1 disconnected.
24/12/23 17:59:05.226 | INFO  | sale_service | 0 | NetworkClient.java: [Consumer clientId=consumer-bizfly-7-453-PaymentTransaction-2, groupId=bizfly-7-453-PaymentTransaction] Node -1 disconnected.
24/12/23 17:59:05.238 | INFO  | sale_service | 0 | NetworkClient.java: [Consumer clientId=consumer-bizfly-7-453-PaymentTransaction-1, groupId=bizfly-7-453-PaymentTransaction] Node -1 disconnected.
24/12/23 17:59:05.266 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:59:05.266 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:59:05.267 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:59:05.284 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:59:05.285 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:59:05.285 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:59:05.315 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:59:05.315 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 17:59:05.316 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:59:05.316 | WARN  | sale_service | 243 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:59:05.337 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:59:05.337 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:59:05.337 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:59:05.337 | WARN  | sale_service | 260 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:59:08.060 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:59:08.060 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:59:08.061 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:59:08.061 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:59:08.158 | INFO  | sale_service | 0 | NetworkClient.java: [Producer clientId=producer-1] Node -1 disconnected.
24/12/23 17:59:08.158 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:59:08.158 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:59:08.255 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:59:08.255 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:59:08.255 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:59:08.256 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:59:08.257 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:59:08.256 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:59:08.305 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:59:08.305 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 17:59:08.306 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:59:08.306 | WARN  | sale_service | 244 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:59:08.307 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:59:08.307 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:59:08.307 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:59:08.307 | WARN  | sale_service | 245 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:59:10.547 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:59:10.547 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:59:10.549 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:59:10.549 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:59:10.645 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:59:10.645 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:59:10.741 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:59:10.741 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:59:10.741 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:59:10.742 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:59:10.742 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:59:10.742 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:59:10.791 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:59:10.791 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:59:10.791 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 17:59:10.791 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:59:10.791 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:59:10.791 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:59:10.791 | WARN  | sale_service | 242 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:59:10.791 | WARN  | sale_service | 243 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:59:11.652 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#paymentProductInCart(Authentication, List)
24/12/23 17:59:11.653 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:59:11.752 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:59:11.849 | DEBUG | sale_service | 0 | LogFormatUtils.java: POST "/api/v1/cart/payment", parameters={}
24/12/23 17:59:11.849 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#paymentProductInCart(Authentication, List)
24/12/23 17:59:11.850 | DEBUG | sale_service | 0 | LogFormatUtils.java: Read "application/json;charset=UTF-8" to [[CartPaymentDto(comboId=null, note=, transaction=[ProductTransactionDto(cartId=65880e74a10d1b5728a69 (truncated)...]
24/12/23 17:59:13.300 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:59:13.300 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.User in collection: user
24/12/23 17:59:13.302 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:59:13.303 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:59:13.305 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:59:13.359 | DEBUG | sale_service | 0 | MongoTemplate.java: findOne using query: { "id" : { "$oid" : "65880e74a10d1b5728a693ba"}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:59:13.359 | DEBUG | sale_service | 0 | MongoTemplate.java: findOne using query: { "_id" : { "$oid" : "65880e74a10d1b5728a693ba"}} fields: {} in db.collection: db-salespage.cart
24/12/23 17:59:13.405 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:59:13.410 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:59:13.448 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "_id" : { "$oid" : "6532bbe5fae6d41599929246"}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Product in collection: product
24/12/23 17:59:13.508 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:59:13.508 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:59:13.508 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:59:13.509 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:59:13.509 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:59:13.509 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:59:13.535 | DEBUG | sale_service | 0 | MongoTemplate.java: findOne using query: { "id" : { "$oid" : "651d84c5a4cd6f49416b6fda"}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.SellerStore in collection: store
24/12/23 17:59:13.536 | DEBUG | sale_service | 0 | MongoTemplate.java: findOne using query: { "_id" : { "$oid" : "651d84c5a4cd6f49416b6fda"}} fields: {} in db.collection: db-salespage.store
24/12/23 17:59:13.561 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:59:13.561 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:59:13.562 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:59:13.562 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 17:59:13.562 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:59:13.562 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:59:13.562 | WARN  | sale_service | 261 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:59:13.562 | WARN  | sale_service | 258 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:59:16.571 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:59:17.140 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:59:17.141 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:59:17.141 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:59:24.627 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:59:24.627 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:59:24.746 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:59:24.746 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:59:24.747 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:59:24.747 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:59:24.747 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:59:24.747 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:59:24.802 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:59:24.803 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:59:24.803 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:59:24.803 | WARN  | sale_service | 7663 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:59:24.805 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:59:24.805 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:59:24.806 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:59:24.807 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 17:59:24.807 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:59:24.807 | WARN  | sale_service | 7667 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:59:24.808 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:59:24.809 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:59:24.901 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:59:24.907 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:59:25.000 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:59:25.001 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:59:25.001 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:59:25.004 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:59:25.004 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:59:25.005 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:59:25.049 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:59:25.049 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:59:25.050 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:59:25.050 | WARN  | sale_service | 244 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:59:25.051 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:59:25.052 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:59:25.055 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:59:25.056 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 17:59:25.056 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:59:25.056 | WARN  | sale_service | 247 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:59:25.057 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:59:25.058 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:59:25.146 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:59:25.153 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:59:25.242 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:59:25.242 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:59:25.243 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:59:25.247 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:59:25.248 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:59:25.248 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:59:25.290 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:59:25.291 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:59:25.291 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:59:25.291 | WARN  | sale_service | 240 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:59:25.292 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:59:25.293 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:59:25.294 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:59:25.294 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 17:59:25.294 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:59:25.295 | WARN  | sale_service | 238 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:59:25.296 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:59:25.297 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:59:25.397 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:59:25.397 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:59:25.494 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:59:25.494 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:59:25.495 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:59:25.495 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:59:25.495 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:59:25.495 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:59:25.547 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:59:25.547 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 17:59:25.548 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:59:25.548 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:59:25.548 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:59:25.549 | WARN  | sale_service | 252 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:59:25.549 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:59:25.549 | WARN  | sale_service | 255 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:59:26.217 | ERROR | sale_service | 0 | CartController.java: =====>paymentProductInCart 
com.salespage.salespageservice.domains.exceptions.BadRequestException: Voucher chỉ có thể sử dụng cho các đơn hàng có giá trị từ 10000 đến 10000
	at com.salespage.salespageservice.domains.services.VoucherCodeService.getVoucherInfoAndUse(VoucherCodeService.java:262) ~[classes/:?]
	at com.salespage.salespageservice.domains.services.VoucherCodeService$$FastClassBySpringCGLIB$$9d37b437.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.3.23.jar:5.3.23]
	at org.springframework.aop.framework.CglibAopProxy.invokeMethod(CglibAopProxy.java:386) ~[spring-aop-5.3.23.jar:5.3.23]
	at org.springframework.aop.framework.CglibAopProxy.access$000(CglibAopProxy.java:85) ~[spring-aop-5.3.23.jar:5.3.23]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:704) ~[spring-aop-5.3.23.jar:5.3.23]
	at com.salespage.salespageservice.domains.services.VoucherCodeService$$EnhancerBySpringCGLIB$$543c9470.getVoucherInfoAndUse(<generated>) ~[classes/:?]
	at com.salespage.salespageservice.domains.services.CartService.paymentProductInCart(CartService.java:315) ~[classes/:?]
	at com.salespage.salespageservice.domains.services.CartService$$FastClassBySpringCGLIB$$b96c5258.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.3.23.jar:5.3.23]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793) ~[spring-aop-5.3.23.jar:5.3.23]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.3.23.jar:5.3.23]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.23.jar:5.3.23]
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123) ~[spring-tx-5.3.23.jar:5.3.23]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388) ~[spring-tx-5.3.23.jar:5.3.23]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-5.3.23.jar:5.3.23]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.23.jar:5.3.23]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.23.jar:5.3.23]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708) ~[spring-aop-5.3.23.jar:5.3.23]
	at com.salespage.salespageservice.domains.services.CartService$$EnhancerBySpringCGLIB$$6eb9cb73.paymentProductInCart(<generated>) ~[classes/:?]
	at com.salespage.salespageservice.app.controllers.CartController.paymentProductInCart(CartController.java:66) ~[classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205) ~[spring-web-5.3.23.jar:5.3.23]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150) ~[spring-web-5.3.23.jar:5.3.23]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117) ~[spring-webmvc-5.3.23.jar:5.3.23]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895) ~[spring-webmvc-5.3.23.jar:5.3.23]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808) ~[spring-webmvc-5.3.23.jar:5.3.23]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-5.3.23.jar:5.3.23]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1071) ~[spring-webmvc-5.3.23.jar:5.3.23]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964) ~[spring-webmvc-5.3.23.jar:5.3.23]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.3.23.jar:5.3.23]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909) ~[spring-webmvc-5.3.23.jar:5.3.23]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:517) ~[jakarta.servlet-api-4.0.4.jar:4.0.4]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.3.23.jar:5.3.23]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:584) ~[jakarta.servlet-api-4.0.4.jar:4.0.4]
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:799) ~[jetty-servlet-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.servlet.ServletHandler$ChainEnd.doFilter(ServletHandler.java:1656) ~[jetty-servlet-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.websocket.server.WebSocketUpgradeFilter.doFilter(WebSocketUpgradeFilter.java:292) ~[websocket-server-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.servlet.FilterHolder.doFilter(FilterHolder.java:193) ~[jetty-servlet-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.servlet.ServletHandler$Chain.doFilter(ServletHandler.java:1626) ~[jetty-servlet-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111) ~[spring-web-5.3.23.jar:5.3.23]
	at org.eclipse.jetty.servlet.FilterHolder.doFilter(FilterHolder.java:193) ~[jetty-servlet-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.servlet.ServletHandler$Chain.doFilter(ServletHandler.java:1626) ~[jetty-servlet-9.4.49.v20220914.jar:9.4.49.v20220914]
	at com.salespage.salespageservice.domains.security.jwt.AuthTokenFilter.doFilterInternal(AuthTokenFilter.java:77) ~[classes/:?]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.23.jar:5.3.23]
	at org.eclipse.jetty.servlet.FilterHolder.doFilter(FilterHolder.java:193) ~[jetty-servlet-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.servlet.ServletHandler$Chain.doFilter(ServletHandler.java:1626) ~[jetty-servlet-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337) ~[spring-security-web-5.7.4.jar:5.7.4]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115) ~[spring-security-web-5.7.4.jar:5.7.4]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81) ~[spring-security-web-5.7.4.jar:5.7.4]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.4.jar:5.7.4]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122) ~[spring-security-web-5.7.4.jar:5.7.4]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116) ~[spring-security-web-5.7.4.jar:5.7.4]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.4.jar:5.7.4]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126) ~[spring-security-web-5.7.4.jar:5.7.4]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81) ~[spring-security-web-5.7.4.jar:5.7.4]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.4.jar:5.7.4]
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109) ~[spring-security-web-5.7.4.jar:5.7.4]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.4.jar:5.7.4]
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149) ~[spring-security-web-5.7.4.jar:5.7.4]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.4.jar:5.7.4]
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63) ~[spring-security-web-5.7.4.jar:5.7.4]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.4.jar:5.7.4]
	at com.salespage.salespageservice.domains.security.jwt.AuthTokenFilter.doFilterInternal(AuthTokenFilter.java:77) ~[classes/:?]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.23.jar:5.3.23]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.4.jar:5.7.4]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103) ~[spring-security-web-5.7.4.jar:5.7.4]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89) ~[spring-security-web-5.7.4.jar:5.7.4]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.4.jar:5.7.4]
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91) ~[spring-web-5.3.23.jar:5.3.23]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.23.jar:5.3.23]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.4.jar:5.7.4]
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90) ~[spring-security-web-5.7.4.jar:5.7.4]
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75) ~[spring-security-web-5.7.4.jar:5.7.4]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.23.jar:5.3.23]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.4.jar:5.7.4]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112) ~[spring-security-web-5.7.4.jar:5.7.4]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82) ~[spring-security-web-5.7.4.jar:5.7.4]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.4.jar:5.7.4]
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55) ~[spring-security-web-5.7.4.jar:5.7.4]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.23.jar:5.3.23]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.4.jar:5.7.4]
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42) ~[spring-security-web-5.7.4.jar:5.7.4]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.23.jar:5.3.23]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.4.jar:5.7.4]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221) ~[spring-security-web-5.7.4.jar:5.7.4]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186) ~[spring-security-web-5.7.4.jar:5.7.4]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354) ~[spring-web-5.3.23.jar:5.3.23]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267) ~[spring-web-5.3.23.jar:5.3.23]
	at org.eclipse.jetty.servlet.FilterHolder.doFilter(FilterHolder.java:193) ~[jetty-servlet-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.servlet.ServletHandler$Chain.doFilter(ServletHandler.java:1626) ~[jetty-servlet-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.3.23.jar:5.3.23]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.23.jar:5.3.23]
	at org.eclipse.jetty.servlet.FilterHolder.doFilter(FilterHolder.java:193) ~[jetty-servlet-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.servlet.ServletHandler$Chain.doFilter(ServletHandler.java:1626) ~[jetty-servlet-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.3.23.jar:5.3.23]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.23.jar:5.3.23]
	at org.eclipse.jetty.servlet.FilterHolder.doFilter(FilterHolder.java:193) ~[jetty-servlet-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.servlet.ServletHandler$Chain.doFilter(ServletHandler.java:1626) ~[jetty-servlet-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.3.23.jar:5.3.23]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.23.jar:5.3.23]
	at org.eclipse.jetty.servlet.FilterHolder.doFilter(FilterHolder.java:193) ~[jetty-servlet-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.servlet.ServletHandler$Chain.doFilter(ServletHandler.java:1626) ~[jetty-servlet-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:552) ~[jetty-servlet-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143) ~[jetty-server-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:600) ~[jetty-security-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:127) ~[jetty-server-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:235) ~[jetty-server-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:1624) ~[jetty-server-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:233) ~[jetty-server-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1440) ~[jetty-server-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.server.handler.ScopedHandler.nextScope(ScopedHandler.java:188) ~[jetty-server-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:505) ~[jetty-servlet-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:1594) ~[jetty-server-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.server.handler.ScopedHandler.nextScope(ScopedHandler.java:186) ~[jetty-server-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1355) ~[jetty-server-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141) ~[jetty-server-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:127) ~[jetty-server-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.server.Server.handle(Server.java:516) ~[jetty-server-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.server.HttpChannel.lambda$handle$1(HttpChannel.java:487) ~[jetty-server-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.server.HttpChannel.dispatch(HttpChannel.java:732) ~[jetty-server-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:479) ~[jetty-server-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:277) ~[jetty-server-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:311) ~[jetty-io-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:105) ~[jetty-io-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.io.ChannelEndPoint$1.run(ChannelEndPoint.java:104) ~[jetty-io-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.runTask(EatWhatYouKill.java:338) ~[jetty-util-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.doProduce(EatWhatYouKill.java:315) ~[jetty-util-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.tryProduce(EatWhatYouKill.java:173) ~[jetty-util-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.run(EatWhatYouKill.java:131) ~[jetty-util-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.util.thread.ReservedThreadExecutor$ReservedThread.run(ReservedThreadExecutor.java:409) ~[jetty-util-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:883) ~[jetty-util-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:1034) ~[jetty-util-9.4.49.v20220914.jar:9.4.49.v20220914]
	at java.lang.Thread.run(Thread.java:829) ~[?:?]
24/12/23 17:59:26.218 | ERROR | sale_service | 0 | BaseController.java: BaseException(code=0)
24/12/23 17:59:26.219 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:59:26.219 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=true, message=Voucher chỉ có thể sử dụng cho các đơn hàng có giá trị (truncated)...]
24/12/23 17:59:26.219 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:59:26.219 | WARN  | sale_service | 14467 | AuthTokenFilter.java: end request ==> POST  /api/v1/cart/payment
24/12/23 17:59:26.220 | WARN  | sale_service | 14566 | AuthTokenFilter.java: end request ==> POST  /api/v1/cart/payment
24/12/23 17:59:28.271 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:59:28.271 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:59:28.272 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:59:28.272 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:59:28.371 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:59:28.371 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:59:28.464 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:59:28.464 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:59:28.464 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:59:28.464 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:59:28.464 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:59:28.464 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:59:28.515 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:59:28.515 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 17:59:28.515 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:59:28.516 | WARN  | sale_service | 244 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:59:28.516 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:59:28.516 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:59:28.517 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:59:28.517 | WARN  | sale_service | 245 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:59:31.272 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:59:31.272 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:59:31.273 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:59:31.273 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:59:31.377 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:59:31.377 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:59:31.482 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:59:31.483 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:59:31.483 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:59:31.485 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:59:31.485 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:59:31.485 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:59:31.532 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:59:31.532 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:59:31.532 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:59:31.532 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 17:59:31.532 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:59:31.532 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:59:31.532 | WARN  | sale_service | 259 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:59:31.532 | WARN  | sale_service | 259 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:59:34.278 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:59:34.281 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:59:34.281 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:59:34.284 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:59:34.399 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:59:34.399 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:59:34.498 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:59:34.498 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:59:34.498 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:59:34.498 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:59:34.498 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:59:34.498 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:59:34.546 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:59:34.547 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 17:59:34.547 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:59:34.548 | WARN  | sale_service | 269 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:59:34.552 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:59:34.552 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:59:34.553 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:59:34.554 | WARN  | sale_service | 272 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:59:37.279 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:59:37.279 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:59:37.280 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:59:37.280 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:59:37.380 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:59:37.380 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:59:37.481 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:59:37.481 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:59:37.481 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:59:37.482 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:59:37.482 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:59:37.483 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:59:37.529 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:59:37.529 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 17:59:37.530 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:59:37.530 | WARN  | sale_service | 250 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:59:37.534 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:59:37.534 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:59:37.535 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:59:37.535 | WARN  | sale_service | 255 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:59:39.557 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:59:39.558 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:59:39.558 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:59:39.558 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:59:39.591 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.publicControllers.PublicProductController#getAllProduct(String, String, Double, Double, String, String, String, String, Boolean, Long, Long, Authentication, Pageable)
24/12/23 17:59:39.591 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.publicControllers.PublicProductController#getHotProduct(Authentication)
24/12/23 17:59:39.592 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:59:39.592 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:59:39.679 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:59:39.679 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:59:39.694 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:59:39.694 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:59:39.775 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:59:39.775 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:59:39.775 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:59:39.776 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:59:39.776 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:59:39.776 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:59:39.786 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/public/product?page=0&size=12", parameters={masked}
24/12/23 17:59:39.786 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.publicControllers.PublicProductController#getAllProduct(String, String, Double, Double, String, String, String, String, Boolean, Long, Long, Authentication, Pageable)
24/12/23 17:59:39.787 | INFO  | sale_service | 0 | PublicProductController.java: getProductDetail with username: {lambro25102001}
24/12/23 17:59:39.787 | DEBUG | sale_service | 0 | MongoTemplate.java: Executing count: {} in collection: product
24/12/23 17:59:39.791 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/public/product/hot-product", parameters={}
24/12/23 17:59:39.791 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.publicControllers.PublicProductController#getHotProduct(Authentication)
24/12/23 17:59:39.791 | INFO  | sale_service | 0 | PublicProductController.java: getProductDetail with username: {lambro25102001}
24/12/23 17:59:39.792 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.SearchHistory in collection: search_history
24/12/23 17:59:39.835 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: {} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Product in collection: product
24/12/23 17:59:39.836 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:59:39.836 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:59:39.836 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:59:39.836 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 17:59:39.836 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:59:39.836 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:59:39.836 | WARN  | sale_service | 278 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:59:39.836 | WARN  | sale_service | 278 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:59:39.851 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "is_hot" : true} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Product in collection: product
24/12/23 17:59:39.983 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "product_id" : { "$in" : ["6578615f79d74a1ab1f5c70c", "65785f9a79d74a1ab1f5c709", "656626cb6c78c45470cf8583", "6565806a6c78c45470cf8554", "655ce3dd524e3f7af0d0b85e", "655ce1fb524e3f7af0d0b857", "655ce182524e3f7af0d0b850", "655ce106524e3f7af0d0b84d", "655cdfb9524e3f7af0d0b842", "6535339b8d69bd44723ba6fb", "6532bbe5fae6d41599929246", "653609f1e14dd822b9121ad3"]}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.ProductStatistic in collection: product_statistic
24/12/23 17:59:40.033 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "product_id" : { "$in" : ["6532bbe5fae6d41599929246", "6535339b8d69bd44723ba6fb", "653609f1e14dd822b9121ad3", "65360a97e14dd822b9121ad4", "65360b29e14dd822b9121ad5", "653a7660a4b25b73765c1cda", "655cdfb9524e3f7af0d0b842", "655ce106524e3f7af0d0b84d", "655ce182524e3f7af0d0b850", "655ce1fb524e3f7af0d0b857", "655ce3dd524e3f7af0d0b85e", "6565806a6c78c45470cf8554"]}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.ProductStatistic in collection: product_statistic
24/12/23 17:59:42.164 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "product_id" : { "$in" : ["6578615f79d74a1ab1f5c70c", "65785f9a79d74a1ab1f5c709", "656626cb6c78c45470cf8583", "6565806a6c78c45470cf8554", "655ce3dd524e3f7af0d0b85e", "655ce1fb524e3f7af0d0b857", "655ce182524e3f7af0d0b850", "655ce106524e3f7af0d0b84d", "655cdfb9524e3f7af0d0b842", "6535339b8d69bd44723ba6fb", "6532bbe5fae6d41599929246", "653609f1e14dd822b9121ad3"]}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.ProductDetail in collection: product_detail
24/12/23 17:59:42.250 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:59:42.251 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=[ProductDataResponse(productId=6578615f79d (truncated)...]
24/12/23 17:59:42.253 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:59:42.253 | WARN  | sale_service | 2560 | AuthTokenFilter.java: end request ==> GET  /api/v1/public/product/hot-product
24/12/23 17:59:42.253 | WARN  | sale_service | 2662 | AuthTokenFilter.java: end request ==> GET  /api/v1/public/product/hot-product
24/12/23 17:59:42.393 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.publicControllers.PublicSellerStoreController#getAllStore(String, String, Pageable)
24/12/23 17:59:42.394 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:59:42.519 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:59:42.519 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:59:42.519 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:59:42.519 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:59:42.556 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:59:42.611 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:59:42.614 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:59:42.650 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/public/seller-store?page=0&size=6", parameters={masked}
24/12/23 17:59:42.650 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.publicControllers.PublicSellerStoreController#getAllStore(String, String, Pageable)
24/12/23 17:59:42.651 | DEBUG | sale_service | 0 | MongoTemplate.java: Executing count: {} in collection: store
24/12/23 17:59:42.661 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "product_id" : { "$in" : ["6532bbe5fae6d41599929246", "6535339b8d69bd44723ba6fb", "653609f1e14dd822b9121ad3", "65360a97e14dd822b9121ad4", "65360b29e14dd822b9121ad5", "653a7660a4b25b73765c1cda", "655cdfb9524e3f7af0d0b842", "655ce106524e3f7af0d0b84d", "655ce182524e3f7af0d0b850", "655ce1fb524e3f7af0d0b857", "655ce3dd524e3f7af0d0b85e", "6565806a6c78c45470cf8554"]}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.ProductDetail in collection: product_detail
24/12/23 17:59:42.699 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: {} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.SellerStore in collection: store
24/12/23 17:59:42.704 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:59:42.704 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:59:42.705 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:59:42.712 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:59:42.713 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:59:42.713 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:59:42.726 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:59:42.726 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[ProductDataResponse(pro (truncated)...]
24/12/23 17:59:42.726 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:59:42.726 | WARN  | sale_service | 3033 | AuthTokenFilter.java: end request ==> GET  /api/v1/public/product?page=0&size=12
24/12/23 17:59:42.727 | WARN  | sale_service | 3136 | AuthTokenFilter.java: end request ==> GET  /api/v1/public/product?page=0&size=12
24/12/23 17:59:42.753 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:59:42.753 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 17:59:42.753 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:59:42.754 | WARN  | sale_service | 235 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:59:42.754 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:59:42.754 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[SellerStoreResponse(id= (truncated)...]
24/12/23 17:59:42.756 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:59:42.756 | WARN  | sale_service | 201 | AuthTokenFilter.java: end request ==> GET  /api/v1/public/seller-store?page=0&size=6
24/12/23 17:59:42.756 | WARN  | sale_service | 363 | AuthTokenFilter.java: end request ==> GET  /api/v1/public/seller-store?page=0&size=6
24/12/23 17:59:42.758 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:59:42.759 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:59:42.759 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:59:42.759 | WARN  | sale_service | 240 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:59:45.515 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:59:45.515 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:59:45.516 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:59:45.516 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:59:45.615 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:59:45.615 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:59:45.709 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:59:45.709 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:59:45.709 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:59:45.714 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:59:45.715 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:59:45.715 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:59:45.759 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:59:45.759 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 17:59:45.760 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:59:45.760 | WARN  | sale_service | 243 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:59:45.761 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:59:45.762 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:59:45.762 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:59:45.762 | WARN  | sale_service | 245 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:59:45.995 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.publicControllers.PublicRatingController#getRatingProduct(String, Pageable)
24/12/23 17:59:45.995 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.publicControllers.PublicProductController#getSuggestProduct(String)
24/12/23 17:59:45.995 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.publicControllers.PublicProductController#getProductDetail(Authentication, String)
24/12/23 17:59:45.996 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.publicControllers.PublicVoucherController#getPublicVoucher(Authentication, String)
24/12/23 17:59:45.998 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.publicControllers.PublicRatingController#getRatingProduct(String, Pageable)
24/12/23 17:59:45.998 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.publicControllers.PublicProductController#getSuggestProduct(String)
24/12/23 17:59:45.998 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.publicControllers.PublicProductController#getProductDetail(Authentication, String)
24/12/23 17:59:45.998 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.publicControllers.PublicVoucherController#getPublicVoucher(Authentication, String)
24/12/23 17:59:45.998 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:59:45.998 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:59:45.998 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:59:45.998 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:59:46.094 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:59:46.095 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:59:46.095 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:59:46.095 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:59:46.187 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/public/product/6535339b8d69bd44723ba6fb", parameters={}
24/12/23 17:59:46.187 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.publicControllers.PublicProductController#getProductDetail(Authentication, String)
24/12/23 17:59:46.188 | INFO  | sale_service | 0 | PublicProductController.java: getProductDetail with username: {lambro25102001}
24/12/23 17:59:46.188 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "product_id" : "6535339b8d69bd44723ba6fb", "daily" : { "$date" : "2023-12-23T17:00:00Z"}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.ProductStatistic in collection: product_statistic
24/12/23 17:59:46.200 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/public/rating/product/6535339b8d69bd44723ba6fb?page=0&size=6", parameters={masked}
24/12/23 17:59:46.200 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/public/product/suggest/6535339b8d69bd44723ba6fb", parameters={}
24/12/23 17:59:46.200 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/public/voucher/6535339b8d69bd44723ba6fb", parameters={}
24/12/23 17:59:46.201 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.publicControllers.PublicProductController#getSuggestProduct(String)
24/12/23 17:59:46.201 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.publicControllers.PublicRatingController#getRatingProduct(String, Pageable)
24/12/23 17:59:46.201 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.publicControllers.PublicVoucherController#getPublicVoucher(Authentication, String)
24/12/23 17:59:46.201 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "ref_id" : "6535339b8d69bd44723ba6fb", "rating_type" : "PRODUCT"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Rating in collection: rating
24/12/23 17:59:46.203 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "_id" : { "$oid" : "6535339b8d69bd44723ba6fb"}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Product in collection: product
24/12/23 17:59:46.211 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "_id" : { "$oid" : "6535339b8d69bd44723ba6fb"}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Product in collection: product
24/12/23 17:59:46.212 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "_id" : { "$oid" : "6535339b8d69bd44723ba6fb"}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Product in collection: product
24/12/23 17:59:46.235 | ERROR | sale_service | 0 | SimpleAsyncUncaughtExceptionHandler.java: Unexpected exception occurred invoking async method: public void com.salespage.salespageservice.domains.services.StatisticService.updateView(java.lang.String)
java.lang.NullPointerException: null
	at com.salespage.salespageservice.domains.services.StatisticService.updateView(StatisticService.java:29) ~[classes/:?]
	at com.salespage.salespageservice.domains.services.StatisticService$$FastClassBySpringCGLIB$$9ffee42.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.3.23.jar:5.3.23]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793) ~[spring-aop-5.3.23.jar:5.3.23]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.3.23.jar:5.3.23]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.23.jar:5.3.23]
	at org.springframework.aop.interceptor.AsyncExecutionInterceptor.lambda$invoke$0(AsyncExecutionInterceptor.java:115) ~[spring-aop-5.3.23.jar:5.3.23]
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:264) ~[?:?]
	at java.util.concurrent.FutureTask.run(FutureTask.java) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) ~[?:?]
	at java.lang.Thread.run(Thread.java:829) ~[?:?]
24/12/23 17:59:46.247 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:59:46.247 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Rating(id=6581c069f3cf2 (truncated)...]
24/12/23 17:59:46.248 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:59:46.248 | WARN  | sale_service | 249 | AuthTokenFilter.java: end request ==> GET  /api/v1/public/rating/product/6535339b8d69bd44723ba6fb?page=0&size=6
24/12/23 17:59:46.270 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "voucher_store_type" : "PRODUCT", "ref_id" : "6535339b8d69bd44723ba6fb"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherStore in collection: voucher_store
24/12/23 17:59:46.270 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "category_id" : "6532bb2ffae6d41599929245"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Product in collection: product
24/12/23 17:59:46.320 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "product_id" : "6535339b8d69bd44723ba6fb", "daily" : { "$date" : "2023-12-23T17:00:00Z"}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.ProductStatistic in collection: product_statistic
24/12/23 17:59:46.320 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: {} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.ProductStatistic in collection: product_statistic
24/12/23 17:59:46.371 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "_id" : { "$in" : [{ "$oid" : "6532bbe5fae6d41599929246"}]}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Product in collection: product
24/12/23 17:59:46.377 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "product_id" : "6535339b8d69bd44723ba6fb"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.ProductDetail in collection: product_detail
24/12/23 17:59:46.421 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:59:46.422 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=[ProductDataResponse(productId=653a7660a4b (truncated)...]
24/12/23 17:59:46.423 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:59:46.423 | WARN  | sale_service | 327 | AuthTokenFilter.java: end request ==> GET  /api/v1/public/product/suggest/6535339b8d69bd44723ba6fb
24/12/23 17:59:46.423 | WARN  | sale_service | 424 | AuthTokenFilter.java: end request ==> GET  /api/v1/public/product/suggest/6535339b8d69bd44723ba6fb
24/12/23 17:59:46.457 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "ref_id" : "6535339b8d69bd44723ba6fb", "favorite_type" : "PRODUCT"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.UserFavorite in collection: user_favarite
24/12/23 17:59:46.521 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "ref_id" : "6535339b8d69bd44723ba6fb", "rating_type" : "PRODUCT"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Rating in collection: rating
24/12/23 17:59:46.569 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:59:46.569 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=ProductDetailResponse(totalSell=null, tota (truncated)...]
24/12/23 17:59:46.570 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:59:46.570 | WARN  | sale_service | 476 | AuthTokenFilter.java: end request ==> GET  /api/v1/public/product/6535339b8d69bd44723ba6fb
24/12/23 17:59:46.570 | WARN  | sale_service | 572 | AuthTokenFilter.java: end request ==> GET  /api/v1/public/product/6535339b8d69bd44723ba6fb
24/12/23 17:59:46.578 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "voucher_store_type" : "STORE", "ref_id" : "651d84c5a4cd6f49416b6fda"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherStore in collection: voucher_store
24/12/23 17:59:46.624 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "voucher_store_id" : { "$in" : []}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherCodeLimit in collection: voucher_code_limit
24/12/23 17:59:46.673 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:59:46.674 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=[])]
24/12/23 17:59:46.675 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:59:46.675 | WARN  | sale_service | 580 | AuthTokenFilter.java: end request ==> GET  /api/v1/public/voucher/6535339b8d69bd44723ba6fb
24/12/23 17:59:46.676 | WARN  | sale_service | 677 | AuthTokenFilter.java: end request ==> GET  /api/v1/public/voucher/6535339b8d69bd44723ba6fb
24/12/23 17:59:48.520 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:59:48.522 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:59:48.522 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:59:48.523 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:59:48.621 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:59:48.627 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:59:48.716 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:59:48.716 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:59:48.716 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:59:48.722 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:59:48.723 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:59:48.723 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:59:48.763 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:59:48.763 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 17:59:48.764 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:59:48.764 | WARN  | sale_service | 243 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:59:48.772 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:59:48.772 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:59:48.773 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:59:48.773 | WARN  | sale_service | 251 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:59:51.523 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:59:51.524 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:59:51.526 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:59:51.527 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:59:51.619 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:59:51.627 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:59:51.720 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:59:51.720 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:59:51.721 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:59:51.721 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:59:51.721 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:59:51.721 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:59:51.749 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#createCart(Authentication, CartDto)
24/12/23 17:59:51.750 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:59:51.768 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:59:51.768 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:59:51.769 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 17:59:51.769 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:59:51.769 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:59:51.769 | WARN  | sale_service | 244 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:59:51.769 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:59:51.769 | WARN  | sale_service | 245 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:59:51.866 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:59:51.968 | DEBUG | sale_service | 0 | LogFormatUtils.java: POST "/api/v1/cart", parameters={}
24/12/23 17:59:51.968 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#createCart(Authentication, CartDto)
24/12/23 17:59:51.969 | DEBUG | sale_service | 0 | LogFormatUtils.java: Read "application/json;charset=UTF-8" to [CartDto(productDetailId=653536948d69bd44723ba6fc, quantity=5, storeId=651d84c5a4cd6f49416b6fda, vouc (truncated)...]
24/12/23 17:59:51.983 | DEBUG | sale_service | 0 | MongoTemplate.java: findOne using query: { "id" : { "$oid" : "653536948d69bd44723ba6fc"}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.ProductDetail in collection: product_detail
24/12/23 17:59:51.984 | DEBUG | sale_service | 0 | MongoTemplate.java: findOne using query: { "_id" : { "$oid" : "653536948d69bd44723ba6fc"}} fields: {} in db.collection: db-salespage.product_detail
24/12/23 17:59:52.078 | DEBUG | sale_service | 0 | MongoTemplate.java: findOne using query: { "id" : { "$oid" : "651d84c5a4cd6f49416b6fda"}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.SellerStore in collection: store
24/12/23 17:59:52.079 | DEBUG | sale_service | 0 | MongoTemplate.java: findOne using query: { "_id" : { "$oid" : "651d84c5a4cd6f49416b6fda"}} fields: {} in db.collection: db-salespage.store
24/12/23 17:59:52.150 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "product_detail_id" : "653536948d69bd44723ba6fc"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:59:52.213 | DEBUG | sale_service | 0 | MongoTemplate.java: Inserting Document containing fields: [username, title, img_url, content, notification_status, notification_type, ref_id, created_at, updated_at, _class] in collection: notification
24/12/23 17:59:52.268 | DEBUG | sale_service | 0 | MongoTemplate.java: Saving Document containing fields: [_id, product_detail_id, product_name, username, store_id, quantity, created_at, updated_at, _class]
24/12/23 17:59:52.354 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:59:52.354 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=Thêm vào giỏ hàng thành công, data=null)]
24/12/23 17:59:52.354 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:59:52.355 | WARN  | sale_service | 489 | AuthTokenFilter.java: end request ==> POST  /api/v1/cart
24/12/23 17:59:52.355 | WARN  | sale_service | 605 | AuthTokenFilter.java: end request ==> POST  /api/v1/cart
24/12/23 17:59:54.528 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:59:54.528 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:59:54.530 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:59:54.530 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:59:54.639 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:59:54.639 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:59:54.740 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:59:54.740 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:59:54.741 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:59:54.741 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:59:54.741 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:59:54.741 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:59:54.790 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:59:54.791 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 17:59:54.791 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:59:54.791 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:59:54.791 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:59:54.792 | WARN  | sale_service | 262 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:59:54.792 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:59:54.792 | WARN  | sale_service | 262 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:59:57.526 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:59:57.527 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:59:57.528 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:59:57.529 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:59:57.632 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:59:57.636 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:59:57.735 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:59:57.735 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:59:57.735 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:59:57.735 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:59:57.735 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:59:57.736 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:59:57.783 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:59:57.783 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 17:59:57.784 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:59:57.784 | WARN  | sale_service | 256 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:59:57.788 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:59:57.788 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:59:57.788 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:59:57.788 | WARN  | sale_service | 259 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:59:57.847 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:59:57.847 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:59:57.848 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:59:57.848 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:59:57.863 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getProductCart(Authentication)
24/12/23 17:59:57.864 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:59:57.954 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:59:57.954 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:59:57.966 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:59:58.050 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 17:59:58.050 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 17:59:58.050 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:59:58.065 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 17:59:58.065 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart", parameters={}
24/12/23 17:59:58.066 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getProductCart(Authentication)
24/12/23 17:59:58.066 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 17:59:58.066 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 17:59:58.078 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 17:59:58.100 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:59:58.100 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 17:59:58.101 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:59:58.101 | WARN  | sale_service | 254 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 17:59:58.117 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:59:58.118 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 17:59:58.118 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:59:58.118 | WARN  | sale_service | 271 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 17:59:58.154 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "_id" : { "$in" : [{ "$oid" : "6532bc2ffae6d41599929247"}, { "$oid" : "653536948d69bd44723ba6fc"}]}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.ProductDetail in collection: product_detail
24/12/23 17:59:58.236 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "_id" : { "$in" : [{ "$oid" : "6532bbe5fae6d41599929246"}, { "$oid" : "6535339b8d69bd44723ba6fb"}]}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Product in collection: product
24/12/23 17:59:58.333 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "_id" : { "$in" : [{ "$oid" : "6532bb2ffae6d41599929245"}, { "$oid" : "6532bb2ffae6d41599929245"}]}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.ProductCategory in collection: product_category
24/12/23 17:59:58.396 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "_id" : { "$in" : [{ "$oid" : "651d84c5a4cd6f49416b6fda"}, { "$oid" : "651d84c5a4cd6f49416b6fda"}]}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.SellerStore in collection: store
24/12/23 17:59:58.477 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "product_id" : { "$in" : ["6532bbe5fae6d41599929246", "6535339b8d69bd44723ba6fb"]}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.ProductComboDetail in collection: product_combo_detail
24/12/23 17:59:58.534 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "voucher_store_type" : "PRODUCT", "ref_id" : { "$in" : ["6532bbe5fae6d41599929246", "6535339b8d69bd44723ba6fb"]}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherStore in collection: voucher_store
24/12/23 17:59:58.677 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:59:58.677 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=[CartByStoreResponse(storeId=651d84c5a4cd6 (truncated)...]
24/12/23 17:59:58.678 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:59:58.678 | WARN  | sale_service | 711 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart
24/12/23 17:59:58.678 | WARN  | sale_service | 813 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart
24/12/23 17:59:58.744 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.VoucherController#getUserVoucher(Authentication, String)
24/12/23 17:59:58.744 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.VoucherController#getUserVoucher(Authentication, String)
24/12/23 17:59:58.745 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:59:58.746 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.VoucherController#getUserVoucher(Authentication, String)
24/12/23 17:59:58.746 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:59:58.838 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:59:58.841 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 17:59:58.943 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/voucher/user/voucher?productId=6535339b8d69bd44723ba6fb", parameters={masked}
24/12/23 17:59:58.943 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/voucher/user/voucher?productId=6532bbe5fae6d41599929246", parameters={masked}
24/12/23 17:59:58.944 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.VoucherController#getUserVoucher(Authentication, String)
24/12/23 17:59:58.944 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.VoucherController#getUserVoucher(Authentication, String)
24/12/23 17:59:58.958 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "voucher_store_type" : "PRODUCT", "ref_id" : "6535339b8d69bd44723ba6fb"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherStore in collection: voucher_store
24/12/23 17:59:58.959 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "_id" : { "$oid" : "6532bbe5fae6d41599929246"}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Product in collection: product
24/12/23 17:59:59.004 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "voucher_store_type" : "STORE", "ref_id" : "651d84c5a4cd6f49416b6fda"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherStore in collection: voucher_store
24/12/23 17:59:59.021 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "voucher_store_type" : "PRODUCT", "ref_id" : "6532bbe5fae6d41599929246"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherStore in collection: voucher_store
24/12/23 17:59:59.049 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:59:59.049 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=[])]
24/12/23 17:59:59.050 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:59:59.050 | WARN  | sale_service | 209 | AuthTokenFilter.java: end request ==> GET  /api/v1/voucher/user/voucher?productId=6535339b8d69bd44723ba6fb
24/12/23 17:59:59.050 | WARN  | sale_service | 303 | AuthTokenFilter.java: end request ==> GET  /api/v1/voucher/user/voucher?productId=6535339b8d69bd44723ba6fb
24/12/23 17:59:59.075 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "voucher_store_type" : "STORE", "ref_id" : "651d84c5a4cd6f49416b6fda"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherStore in collection: voucher_store
24/12/23 17:59:59.121 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "owner_id" : "lambro25102001", "voucher_store_id" : "65846511d48c0b1c77d1ee61", "voucher_code_status" : "OWNER", "expire_time" : { "$gt" : 1703415599121}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherCode in collection: voucher_code
24/12/23 17:59:59.173 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "owner_id" : "lambro25102001", "voucher_store_id" : "6587e666208da64222b26afc", "voucher_code_status" : "OWNER", "expire_time" : { "$gt" : 1703415599172}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherCode in collection: voucher_code
24/12/23 17:59:59.222 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 17:59:59.223 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=[UserVoucherResponse(voucherStoreName=Giảm (truncated)...]
24/12/23 17:59:59.223 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 17:59:59.224 | WARN  | sale_service | 387 | AuthTokenFilter.java: end request ==> GET  /api/v1/voucher/user/voucher?productId=6532bbe5fae6d41599929246
24/12/23 17:59:59.224 | WARN  | sale_service | 479 | AuthTokenFilter.java: end request ==> GET  /api/v1/voucher/user/voucher?productId=6532bbe5fae6d41599929246
24/12/23 18:00:00.790 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:00:00.791 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:00:00.793 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:00:00.793 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:00:00.887 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:00:00.888 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:00:00.977 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:00:00.977 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:00:00.977 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:00:00.987 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:00:00.987 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:00:00.988 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:00:01.035 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:00:01.035 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:00:01.035 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:00:01.035 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:00:01.036 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:00:01.036 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:00:01.036 | WARN  | sale_service | 244 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:00:01.036 | WARN  | sale_service | 244 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:00:03.790 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:00:03.793 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:00:03.796 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:00:03.797 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:00:03.904 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:00:03.904 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:00:04.000 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:00:04.000 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:00:04.001 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:00:04.004 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:00:04.005 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:00:04.005 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:00:04.050 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:00:04.050 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:00:04.050 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:00:04.050 | WARN  | sale_service | 257 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:00:04.057 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:00:04.057 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:00:04.058 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:00:04.058 | WARN  | sale_service | 261 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:00:06.785 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:00:06.785 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:00:06.786 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:00:06.786 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:00:06.877 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:00:06.878 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:00:07.061 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:00:07.061 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:00:07.062 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:00:07.062 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:00:07.062 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:00:07.062 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:00:07.109 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:00:07.109 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:00:07.109 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:00:07.109 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:00:07.109 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:00:07.109 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:00:07.110 | WARN  | sale_service | 231 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:00:07.110 | WARN  | sale_service | 324 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:00:07.110 | WARN  | sale_service | 233 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:00:07.110 | WARN  | sale_service | 323 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:00:09.790 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:00:09.792 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:00:09.793 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:00:09.796 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:00:09.892 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:00:09.900 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:00:09.994 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:00:09.995 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:00:09.995 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:00:09.996 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:00:09.996 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:00:09.996 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:00:10.048 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:00:10.049 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:00:10.049 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:00:10.049 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:00:10.049 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:00:10.049 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:00:10.049 | WARN  | sale_service | 256 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:00:10.049 | WARN  | sale_service | 254 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:00:12.788 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:00:12.789 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:00:12.790 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:00:12.791 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:00:12.900 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:00:12.901 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:00:12.994 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:00:12.994 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:00:12.995 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:00:12.997 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:00:12.998 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:00:12.998 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:00:13.045 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:00:13.045 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:00:13.046 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:00:13.047 | WARN  | sale_service | 258 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:00:13.049 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:00:13.049 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:00:13.050 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:00:13.051 | WARN  | sale_service | 262 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:00:15.795 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:00:15.796 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:00:15.797 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:00:15.799 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:00:15.890 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:00:15.891 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:00:15.987 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:00:15.987 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:00:15.987 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:00:15.988 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:00:15.988 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:00:15.988 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:00:16.035 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:00:16.035 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:00:16.035 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:00:16.035 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:00:16.035 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:00:16.035 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:00:16.035 | WARN  | sale_service | 238 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:00:16.035 | WARN  | sale_service | 239 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:00:18.789 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:00:18.790 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:00:18.792 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:00:18.793 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:00:18.898 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:00:18.904 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:00:18.991 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:00:18.991 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:00:18.991 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:00:19.001 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:00:19.002 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:00:19.002 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:00:19.039 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:00:19.039 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:00:19.039 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:00:19.039 | WARN  | sale_service | 247 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:00:19.061 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:00:19.062 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:00:19.062 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:00:19.062 | WARN  | sale_service | 271 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:00:21.781 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:00:21.782 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:00:21.782 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:00:21.783 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:00:21.893 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:00:21.893 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:00:22.006 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:00:22.006 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:00:22.007 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:00:22.007 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:00:22.007 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:00:22.007 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:00:22.066 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:00:22.066 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:00:22.066 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:00:22.066 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:00:22.066 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:00:22.066 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:00:22.066 | WARN  | sale_service | 283 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:00:22.066 | WARN  | sale_service | 282 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:00:24.786 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:00:24.786 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:00:24.786 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:00:24.787 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:00:24.882 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:00:24.893 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:00:24.991 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:00:24.992 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:00:24.992 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:00:24.994 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:00:24.994 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:00:24.995 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:00:25.042 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:00:25.042 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:00:25.042 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:00:25.043 | WARN  | sale_service | 256 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:00:25.049 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:00:25.049 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:00:25.050 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:00:25.050 | WARN  | sale_service | 264 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:00:27.789 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:00:27.791 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:00:27.792 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:00:27.794 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:00:27.906 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:00:27.911 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:00:27.999 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:00:28.000 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:00:28.001 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:00:28.015 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:00:28.015 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:00:28.016 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:00:28.060 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:00:28.060 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:00:28.060 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:00:28.060 | WARN  | sale_service | 270 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:00:28.071 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:00:28.072 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:00:28.072 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:00:28.072 | WARN  | sale_service | 280 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:00:30.786 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:00:30.786 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:00:30.786 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:00:30.786 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:00:30.879 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:00:30.884 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:00:30.973 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:00:30.973 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:00:30.974 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:00:30.980 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:00:30.980 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:00:30.980 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:00:31.026 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:00:31.026 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:00:31.026 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:00:31.026 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:00:31.026 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:00:31.026 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:00:31.027 | WARN  | sale_service | 241 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:00:31.027 | WARN  | sale_service | 241 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:00:33.793 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:00:33.793 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:00:33.794 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:00:33.794 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:00:33.898 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:00:33.898 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:00:34.001 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:00:34.001 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:00:34.001 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:00:34.002 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:00:34.002 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:00:34.003 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:00:34.048 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:00:34.048 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:00:34.049 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:00:34.049 | WARN  | sale_service | 255 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:00:34.070 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:00:34.070 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:00:34.070 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:00:34.071 | WARN  | sale_service | 276 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:00:36.789 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:00:36.790 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:00:36.792 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:00:36.792 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:00:36.884 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:00:36.898 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:00:36.984 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:00:36.985 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:00:36.986 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:00:37.002 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:00:37.002 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:00:37.003 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:00:37.049 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:00:37.049 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:00:37.049 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:00:37.049 | WARN  | sale_service | 258 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:00:37.054 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:00:37.054 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:00:37.054 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:00:37.054 | WARN  | sale_service | 264 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:00:39.789 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:00:39.790 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:00:39.790 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:00:39.790 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:00:39.920 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:00:39.924 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:00:40.029 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:00:40.028 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:00:40.029 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:00:40.029 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:00:40.029 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:00:40.029 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:00:40.075 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:00:40.076 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:00:40.076 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:00:40.076 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:00:40.076 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:00:40.076 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:00:40.076 | WARN  | sale_service | 286 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:00:40.076 | WARN  | sale_service | 286 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:00:42.792 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:00:42.792 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:00:42.793 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:00:42.793 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:00:42.888 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:00:42.889 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:00:42.988 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:00:42.988 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:00:42.989 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:00:42.989 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:00:42.989 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:00:42.990 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:00:43.038 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:00:43.038 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:00:43.039 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:00:43.039 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:00:43.039 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:00:43.039 | WARN  | sale_service | 247 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:00:43.039 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:00:43.039 | WARN  | sale_service | 247 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:00:45.787 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:00:45.787 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:00:45.788 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:00:45.788 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:00:45.888 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:00:45.892 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:00:45.982 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:00:45.982 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:00:45.983 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:00:45.986 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:00:45.987 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:00:45.988 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:00:46.034 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:00:46.034 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:00:46.035 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:00:46.036 | WARN  | sale_service | 248 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:00:46.039 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:00:46.040 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:00:46.041 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:00:46.041 | WARN  | sale_service | 253 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:00:48.789 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:00:48.790 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:00:48.790 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:00:48.790 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:00:48.902 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:00:48.902 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:00:48.931 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getProductCart(Authentication)
24/12/23 18:00:48.932 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:00:49.007 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:00:49.007 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:00:49.008 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:00:49.014 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:00:49.015 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:00:49.015 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:00:49.038 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:00:49.065 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:00:49.065 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:00:49.065 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:00:49.066 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:00:49.066 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:00:49.066 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:00:49.066 | WARN  | sale_service | 276 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:00:49.066 | WARN  | sale_service | 276 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:00:49.147 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart", parameters={}
24/12/23 18:00:49.148 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getProductCart(Authentication)
24/12/23 18:00:49.238 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "_id" : { "$in" : [{ "$oid" : "651d84c5a4cd6f49416b6fda"}, { "$oid" : "651d84c5a4cd6f49416b6fda"}]}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.SellerStore in collection: store
24/12/23 18:00:49.316 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "voucher_store_type" : "PRODUCT", "ref_id" : { "$in" : ["6532bbe5fae6d41599929246", "6535339b8d69bd44723ba6fb"]}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherStore in collection: voucher_store
24/12/23 18:00:49.505 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:00:49.505 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=[CartByStoreResponse(storeId=651d84c5a4cd6 (truncated)...]
24/12/23 18:00:49.508 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:00:49.508 | WARN  | sale_service | 470 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart
24/12/23 18:00:49.508 | WARN  | sale_service | 576 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart
24/12/23 18:00:49.588 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.VoucherController#getUserVoucher(Authentication, String)
24/12/23 18:00:49.588 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.VoucherController#getUserVoucher(Authentication, String)
24/12/23 18:00:49.589 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:00:49.589 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:00:49.685 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:00:49.685 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:00:49.795 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/voucher/user/voucher?productId=6535339b8d69bd44723ba6fb", parameters={masked}
24/12/23 18:00:49.795 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/voucher/user/voucher?productId=6532bbe5fae6d41599929246", parameters={masked}
24/12/23 18:00:49.796 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.VoucherController#getUserVoucher(Authentication, String)
24/12/23 18:00:49.796 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.VoucherController#getUserVoucher(Authentication, String)
24/12/23 18:00:49.814 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "voucher_store_type" : "PRODUCT", "ref_id" : "6532bbe5fae6d41599929246"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherStore in collection: voucher_store
24/12/23 18:00:49.814 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "voucher_store_type" : "PRODUCT", "ref_id" : "6535339b8d69bd44723ba6fb"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherStore in collection: voucher_store
24/12/23 18:00:49.862 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "voucher_store_type" : "STORE", "ref_id" : "651d84c5a4cd6f49416b6fda"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherStore in collection: voucher_store
24/12/23 18:00:49.862 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "voucher_store_type" : "STORE", "ref_id" : "651d84c5a4cd6f49416b6fda"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherStore in collection: voucher_store
24/12/23 18:00:49.908 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:00:49.908 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "owner_id" : "lambro25102001", "voucher_store_id" : "65846511d48c0b1c77d1ee61", "voucher_code_status" : "OWNER", "expire_time" : { "$gt" : 1703415649907}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherCode in collection: voucher_code
24/12/23 18:00:49.908 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=[])]
24/12/23 18:00:49.908 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:00:49.908 | WARN  | sale_service | 223 | AuthTokenFilter.java: end request ==> GET  /api/v1/voucher/user/voucher?productId=6535339b8d69bd44723ba6fb
24/12/23 18:00:49.908 | WARN  | sale_service | 320 | AuthTokenFilter.java: end request ==> GET  /api/v1/voucher/user/voucher?productId=6535339b8d69bd44723ba6fb
24/12/23 18:00:49.959 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "owner_id" : "lambro25102001", "voucher_store_id" : "6587e666208da64222b26afc", "voucher_code_status" : "OWNER", "expire_time" : { "$gt" : 1703415649958}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherCode in collection: voucher_code
24/12/23 18:00:50.005 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:00:50.005 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=[UserVoucherResponse(voucherStoreName=Giảm (truncated)...]
24/12/23 18:00:50.006 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:00:50.006 | WARN  | sale_service | 321 | AuthTokenFilter.java: end request ==> GET  /api/v1/voucher/user/voucher?productId=6532bbe5fae6d41599929246
24/12/23 18:00:50.006 | WARN  | sale_service | 417 | AuthTokenFilter.java: end request ==> GET  /api/v1/voucher/user/voucher?productId=6532bbe5fae6d41599929246
24/12/23 18:00:51.788 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:00:51.789 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:00:51.790 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:00:51.791 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:00:51.952 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:00:51.952 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:00:52.056 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:00:52.056 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:00:52.056 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:00:52.056 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:00:52.056 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:00:52.057 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:00:52.103 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:00:52.104 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:00:52.104 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:00:52.104 | WARN  | sale_service | 315 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:00:52.106 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:00:52.106 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:00:52.106 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:00:52.106 | WARN  | sale_service | 316 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:00:54.786 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:00:54.786 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:00:54.788 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:00:54.788 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:00:54.893 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:00:54.946 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getProductCart(Authentication)
24/12/23 18:00:54.947 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:00:55.002 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:00:55.002 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:00:55.003 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:00:55.054 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:00:55.175 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:00:55.215 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart", parameters={}
24/12/23 18:00:55.215 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getProductCart(Authentication)
24/12/23 18:00:55.250 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:00:55.250 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:00:55.250 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:00:55.250 | WARN  | sale_service | 357 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:00:55.250 | WARN  | sale_service | 464 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:00:55.267 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:00:55.267 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "_id" : { "$in" : [{ "$oid" : "651d84c5a4cd6f49416b6fda"}, { "$oid" : "651d84c5a4cd6f49416b6fda"}]}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.SellerStore in collection: store
24/12/23 18:00:55.267 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:00:55.268 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:00:55.315 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:00:55.315 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:00:55.315 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:00:55.315 | WARN  | sale_service | 528 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:00:55.336 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "voucher_store_type" : "PRODUCT", "ref_id" : { "$in" : ["6532bbe5fae6d41599929246", "6535339b8d69bd44723ba6fb"]}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherStore in collection: voucher_store
24/12/23 18:00:55.471 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:00:55.471 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=[CartByStoreResponse(storeId=651d84c5a4cd6 (truncated)...]
24/12/23 18:00:55.472 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:00:55.472 | WARN  | sale_service | 418 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart
24/12/23 18:00:55.472 | WARN  | sale_service | 526 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart
24/12/23 18:00:55.546 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.VoucherController#getUserVoucher(Authentication, String)
24/12/23 18:00:55.546 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.VoucherController#getUserVoucher(Authentication, String)
24/12/23 18:00:55.547 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:00:55.547 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:00:55.644 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:00:55.644 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:00:55.744 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/voucher/user/voucher?productId=6535339b8d69bd44723ba6fb", parameters={masked}
24/12/23 18:00:55.744 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/voucher/user/voucher?productId=6532bbe5fae6d41599929246", parameters={masked}
24/12/23 18:00:55.745 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.VoucherController#getUserVoucher(Authentication, String)
24/12/23 18:00:55.745 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.VoucherController#getUserVoucher(Authentication, String)
24/12/23 18:00:55.759 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "voucher_store_type" : "PRODUCT", "ref_id" : "6532bbe5fae6d41599929246"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherStore in collection: voucher_store
24/12/23 18:00:55.763 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "voucher_store_type" : "PRODUCT", "ref_id" : "6535339b8d69bd44723ba6fb"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherStore in collection: voucher_store
24/12/23 18:00:55.808 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "voucher_store_type" : "STORE", "ref_id" : "651d84c5a4cd6f49416b6fda"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherStore in collection: voucher_store
24/12/23 18:00:55.809 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "voucher_store_type" : "STORE", "ref_id" : "651d84c5a4cd6f49416b6fda"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherStore in collection: voucher_store
24/12/23 18:00:55.862 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "owner_id" : "lambro25102001", "voucher_store_id" : "65846511d48c0b1c77d1ee61", "voucher_code_status" : "OWNER", "expire_time" : { "$gt" : 1703415655862}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherCode in collection: voucher_code
24/12/23 18:00:55.866 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:00:55.866 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=[])]
24/12/23 18:00:55.866 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:00:55.867 | WARN  | sale_service | 222 | AuthTokenFilter.java: end request ==> GET  /api/v1/voucher/user/voucher?productId=6535339b8d69bd44723ba6fb
24/12/23 18:00:55.867 | WARN  | sale_service | 320 | AuthTokenFilter.java: end request ==> GET  /api/v1/voucher/user/voucher?productId=6535339b8d69bd44723ba6fb
24/12/23 18:00:55.912 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "owner_id" : "lambro25102001", "voucher_store_id" : "6587e666208da64222b26afc", "voucher_code_status" : "OWNER", "expire_time" : { "$gt" : 1703415655911}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherCode in collection: voucher_code
24/12/23 18:00:55.960 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:00:55.960 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=[UserVoucherResponse(voucherStoreName=Giảm (truncated)...]
24/12/23 18:00:55.961 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:00:55.961 | WARN  | sale_service | 316 | AuthTokenFilter.java: end request ==> GET  /api/v1/voucher/user/voucher?productId=6532bbe5fae6d41599929246
24/12/23 18:00:55.961 | WARN  | sale_service | 413 | AuthTokenFilter.java: end request ==> GET  /api/v1/voucher/user/voucher?productId=6532bbe5fae6d41599929246
24/12/23 18:00:57.780 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:00:57.781 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:00:57.783 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:00:57.783 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:00:57.875 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:00:57.883 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:00:57.967 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:00:57.967 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:00:57.967 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:00:57.978 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:00:57.978 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:00:57.979 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:00:58.016 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:00:58.017 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:00:58.017 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:00:58.017 | WARN  | sale_service | 236 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:00:58.027 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:00:58.027 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:00:58.027 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:00:58.027 | WARN  | sale_service | 244 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:01:00.793 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:01:00.794 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:01:00.796 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:01:00.796 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:01:00.893 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:01:00.893 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:01:01.005 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:01:01.006 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:01:01.008 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:01:01.008 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:01:01.009 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:01:01.010 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:01:01.055 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:01:01.055 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:01:01.056 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:01:01.056 | WARN  | sale_service | 262 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:01:01.062 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:01:01.062 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:01:01.062 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:01:01.062 | WARN  | sale_service | 267 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:01:03.793 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:01:03.795 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:01:03.796 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:01:03.797 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:01:03.899 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:01:03.899 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:01:03.996 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:01:03.996 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:01:03.997 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:01:03.997 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:01:03.998 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:01:03.998 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:01:04.049 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:01:04.049 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:01:04.049 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:01:04.050 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:01:04.050 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:01:04.051 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:01:04.051 | WARN  | sale_service | 254 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:01:04.051 | WARN  | sale_service | 255 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:01:06.801 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:01:06.803 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:01:06.804 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:01:06.806 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:01:06.914 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:01:06.928 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:01:07.085 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:01:07.085 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:01:07.085 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:01:07.086 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:01:07.086 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:01:07.087 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:01:07.136 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:01:07.136 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:01:07.136 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:01:07.136 | WARN  | sale_service | 207 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:01:07.136 | WARN  | sale_service | 332 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:01:07.139 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:01:07.139 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:01:07.139 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:01:07.139 | WARN  | sale_service | 225 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:01:07.139 | WARN  | sale_service | 337 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:01:09.795 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:01:09.795 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:01:09.795 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:01:09.795 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:01:09.910 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:01:09.913 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:01:10.009 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:01:10.010 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:01:10.011 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:01:10.011 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:01:10.011 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:01:10.012 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:01:10.063 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:01:10.063 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:01:10.063 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:01:10.064 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:01:10.064 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:01:10.064 | WARN  | sale_service | 268 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:01:10.065 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:01:10.065 | WARN  | sale_service | 269 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:01:12.782 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:01:12.782 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:01:12.783 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:01:12.783 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:01:12.879 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:01:12.879 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:01:12.976 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:01:12.976 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:01:12.977 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:01:12.977 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:01:12.977 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:01:12.977 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:01:13.030 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:01:13.030 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:01:13.031 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:01:13.031 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:01:13.031 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:01:13.031 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:01:13.031 | WARN  | sale_service | 248 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:01:13.031 | WARN  | sale_service | 248 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:01:13.428 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getProductCart(Authentication)
24/12/23 18:01:13.429 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:01:13.531 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:01:13.669 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart", parameters={}
24/12/23 18:01:13.669 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getProductCart(Authentication)
24/12/23 18:01:13.723 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "_id" : { "$in" : [{ "$oid" : "651d84c5a4cd6f49416b6fda"}, { "$oid" : "651d84c5a4cd6f49416b6fda"}]}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.SellerStore in collection: store
24/12/23 18:01:13.803 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "voucher_store_type" : "PRODUCT", "ref_id" : { "$in" : ["6532bbe5fae6d41599929246", "6535339b8d69bd44723ba6fb"]}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherStore in collection: voucher_store
24/12/23 18:01:14.002 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:01:14.003 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=[CartByStoreResponse(storeId=651d84c5a4cd6 (truncated)...]
24/12/23 18:01:14.004 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:01:14.004 | WARN  | sale_service | 472 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart
24/12/23 18:01:14.004 | WARN  | sale_service | 575 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart
24/12/23 18:01:14.134 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.VoucherController#getUserVoucher(Authentication, String)
24/12/23 18:01:14.134 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.VoucherController#getUserVoucher(Authentication, String)
24/12/23 18:01:14.134 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:01:14.134 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:01:14.226 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:01:14.228 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:01:14.319 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/voucher/user/voucher?productId=6535339b8d69bd44723ba6fb", parameters={masked}
24/12/23 18:01:14.319 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.VoucherController#getUserVoucher(Authentication, String)
24/12/23 18:01:14.322 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/voucher/user/voucher?productId=6532bbe5fae6d41599929246", parameters={masked}
24/12/23 18:01:14.322 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.VoucherController#getUserVoucher(Authentication, String)
24/12/23 18:01:14.340 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "voucher_store_type" : "PRODUCT", "ref_id" : "6535339b8d69bd44723ba6fb"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherStore in collection: voucher_store
24/12/23 18:01:14.340 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "voucher_store_type" : "PRODUCT", "ref_id" : "6532bbe5fae6d41599929246"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherStore in collection: voucher_store
24/12/23 18:01:14.389 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "voucher_store_type" : "STORE", "ref_id" : "651d84c5a4cd6f49416b6fda"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherStore in collection: voucher_store
24/12/23 18:01:14.390 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "voucher_store_type" : "STORE", "ref_id" : "651d84c5a4cd6f49416b6fda"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherStore in collection: voucher_store
24/12/23 18:01:14.437 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:01:14.437 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "owner_id" : "lambro25102001", "voucher_store_id" : "65846511d48c0b1c77d1ee61", "voucher_code_status" : "OWNER", "expire_time" : { "$gt" : 1703415674437}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherCode in collection: voucher_code
24/12/23 18:01:14.437 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=[])]
24/12/23 18:01:14.437 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:01:14.438 | WARN  | sale_service | 211 | AuthTokenFilter.java: end request ==> GET  /api/v1/voucher/user/voucher?productId=6535339b8d69bd44723ba6fb
24/12/23 18:01:14.438 | WARN  | sale_service | 304 | AuthTokenFilter.java: end request ==> GET  /api/v1/voucher/user/voucher?productId=6535339b8d69bd44723ba6fb
24/12/23 18:01:14.486 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "owner_id" : "lambro25102001", "voucher_store_id" : "6587e666208da64222b26afc", "voucher_code_status" : "OWNER", "expire_time" : { "$gt" : 1703415674485}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherCode in collection: voucher_code
24/12/23 18:01:14.533 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:01:14.533 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=[UserVoucherResponse(voucherStoreName=Giảm (truncated)...]
24/12/23 18:01:14.533 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:01:14.533 | WARN  | sale_service | 306 | AuthTokenFilter.java: end request ==> GET  /api/v1/voucher/user/voucher?productId=6532bbe5fae6d41599929246
24/12/23 18:01:14.533 | WARN  | sale_service | 399 | AuthTokenFilter.java: end request ==> GET  /api/v1/voucher/user/voucher?productId=6532bbe5fae6d41599929246
24/12/23 18:01:15.792 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:01:15.793 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:01:15.796 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:01:15.797 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:01:15.840 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getProductCart(Authentication)
24/12/23 18:01:15.841 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:01:15.917 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:01:15.917 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:01:15.941 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:01:16.011 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:01:16.011 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:01:16.011 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:01:16.011 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:01:16.011 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:01:16.011 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:01:16.056 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart", parameters={}
24/12/23 18:01:16.056 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getProductCart(Authentication)
24/12/23 18:01:16.066 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:01:16.066 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:01:16.066 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:01:16.066 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:01:16.066 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:01:16.066 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:01:16.066 | WARN  | sale_service | 273 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:01:16.066 | WARN  | sale_service | 269 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:01:16.117 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "_id" : { "$in" : [{ "$oid" : "651d84c5a4cd6f49416b6fda"}, { "$oid" : "651d84c5a4cd6f49416b6fda"}]}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.SellerStore in collection: store
24/12/23 18:01:16.228 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "voucher_store_type" : "PRODUCT", "ref_id" : { "$in" : ["6532bbe5fae6d41599929246", "6535339b8d69bd44723ba6fb"]}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherStore in collection: voucher_store
24/12/23 18:01:16.480 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:01:16.481 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=[CartByStoreResponse(storeId=651d84c5a4cd6 (truncated)...]
24/12/23 18:01:16.482 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:01:16.482 | WARN  | sale_service | 542 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart
24/12/23 18:01:16.483 | WARN  | sale_service | 642 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart
24/12/23 18:01:16.647 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.VoucherController#getUserVoucher(Authentication, String)
24/12/23 18:01:16.647 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.VoucherController#getUserVoucher(Authentication, String)
24/12/23 18:01:16.648 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:01:16.648 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:01:16.746 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:01:16.747 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:01:16.840 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/voucher/user/voucher?productId=6532bbe5fae6d41599929246", parameters={masked}
24/12/23 18:01:16.840 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/voucher/user/voucher?productId=6535339b8d69bd44723ba6fb", parameters={masked}
24/12/23 18:01:16.840 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.VoucherController#getUserVoucher(Authentication, String)
24/12/23 18:01:16.840 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.VoucherController#getUserVoucher(Authentication, String)
24/12/23 18:01:16.868 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "voucher_store_type" : "PRODUCT", "ref_id" : "6535339b8d69bd44723ba6fb"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherStore in collection: voucher_store
24/12/23 18:01:16.868 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "voucher_store_type" : "PRODUCT", "ref_id" : "6532bbe5fae6d41599929246"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherStore in collection: voucher_store
24/12/23 18:01:16.921 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "voucher_store_type" : "STORE", "ref_id" : "651d84c5a4cd6f49416b6fda"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherStore in collection: voucher_store
24/12/23 18:01:16.921 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "voucher_store_type" : "STORE", "ref_id" : "651d84c5a4cd6f49416b6fda"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherStore in collection: voucher_store
24/12/23 18:01:16.970 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:01:16.970 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "owner_id" : "lambro25102001", "voucher_store_id" : "65846511d48c0b1c77d1ee61", "voucher_code_status" : "OWNER", "expire_time" : { "$gt" : 1703415676970}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherCode in collection: voucher_code
24/12/23 18:01:16.971 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=[])]
24/12/23 18:01:16.971 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:01:16.971 | WARN  | sale_service | 224 | AuthTokenFilter.java: end request ==> GET  /api/v1/voucher/user/voucher?productId=6535339b8d69bd44723ba6fb
24/12/23 18:01:16.971 | WARN  | sale_service | 323 | AuthTokenFilter.java: end request ==> GET  /api/v1/voucher/user/voucher?productId=6535339b8d69bd44723ba6fb
24/12/23 18:01:17.017 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "owner_id" : "lambro25102001", "voucher_store_id" : "6587e666208da64222b26afc", "voucher_code_status" : "OWNER", "expire_time" : { "$gt" : 1703415677017}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherCode in collection: voucher_code
24/12/23 18:01:17.064 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:01:17.065 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=[UserVoucherResponse(voucherStoreName=Giảm (truncated)...]
24/12/23 18:01:17.065 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:01:17.065 | WARN  | sale_service | 317 | AuthTokenFilter.java: end request ==> GET  /api/v1/voucher/user/voucher?productId=6532bbe5fae6d41599929246
24/12/23 18:01:17.065 | WARN  | sale_service | 416 | AuthTokenFilter.java: end request ==> GET  /api/v1/voucher/user/voucher?productId=6532bbe5fae6d41599929246
24/12/23 18:01:18.396 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getProductCart(Authentication)
24/12/23 18:01:18.397 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:01:18.494 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:01:18.592 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart", parameters={}
24/12/23 18:01:18.592 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getProductCart(Authentication)
24/12/23 18:01:18.681 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "_id" : { "$in" : [{ "$oid" : "651d84c5a4cd6f49416b6fda"}, { "$oid" : "651d84c5a4cd6f49416b6fda"}]}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.SellerStore in collection: store
24/12/23 18:01:18.775 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "voucher_store_type" : "PRODUCT", "ref_id" : { "$in" : ["6532bbe5fae6d41599929246", "6535339b8d69bd44723ba6fb"]}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherStore in collection: voucher_store
24/12/23 18:01:18.785 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:01:18.785 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:01:18.785 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:01:18.785 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:01:18.898 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:01:18.900 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:01:18.958 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:01:18.959 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=[CartByStoreResponse(storeId=651d84c5a4cd6 (truncated)...]
24/12/23 18:01:18.959 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:01:18.960 | WARN  | sale_service | 465 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart
24/12/23 18:01:18.960 | WARN  | sale_service | 564 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart
24/12/23 18:01:18.996 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:01:18.997 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:01:18.998 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:01:18.998 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:01:18.998 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:01:18.999 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:01:19.029 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.VoucherController#getUserVoucher(Authentication, String)
24/12/23 18:01:19.029 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.VoucherController#getUserVoucher(Authentication, String)
24/12/23 18:01:19.030 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:01:19.030 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:01:19.051 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:01:19.052 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:01:19.052 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:01:19.052 | WARN  | sale_service | 267 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:01:19.054 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:01:19.054 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:01:19.055 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:01:19.055 | WARN  | sale_service | 269 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:01:19.136 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:01:19.136 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:01:19.235 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/voucher/user/voucher?productId=6535339b8d69bd44723ba6fb", parameters={masked}
24/12/23 18:01:19.235 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.VoucherController#getUserVoucher(Authentication, String)
24/12/23 18:01:19.238 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/voucher/user/voucher?productId=6532bbe5fae6d41599929246", parameters={masked}
24/12/23 18:01:19.239 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.VoucherController#getUserVoucher(Authentication, String)
24/12/23 18:01:19.252 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "voucher_store_type" : "PRODUCT", "ref_id" : "6532bbe5fae6d41599929246"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherStore in collection: voucher_store
24/12/23 18:01:19.265 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "voucher_store_type" : "PRODUCT", "ref_id" : "6535339b8d69bd44723ba6fb"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherStore in collection: voucher_store
24/12/23 18:01:19.323 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "voucher_store_type" : "STORE", "ref_id" : "651d84c5a4cd6f49416b6fda"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherStore in collection: voucher_store
24/12/23 18:01:19.323 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "voucher_store_type" : "STORE", "ref_id" : "651d84c5a4cd6f49416b6fda"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherStore in collection: voucher_store
24/12/23 18:01:19.377 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:01:19.377 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "owner_id" : "lambro25102001", "voucher_store_id" : "65846511d48c0b1c77d1ee61", "voucher_code_status" : "OWNER", "expire_time" : { "$gt" : 1703415679377}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherCode in collection: voucher_code
24/12/23 18:01:19.377 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=[])]
24/12/23 18:01:19.377 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:01:19.377 | WARN  | sale_service | 240 | AuthTokenFilter.java: end request ==> GET  /api/v1/voucher/user/voucher?productId=6535339b8d69bd44723ba6fb
24/12/23 18:01:19.378 | WARN  | sale_service | 349 | AuthTokenFilter.java: end request ==> GET  /api/v1/voucher/user/voucher?productId=6535339b8d69bd44723ba6fb
24/12/23 18:01:19.448 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "owner_id" : "lambro25102001", "voucher_store_id" : "6587e666208da64222b26afc", "voucher_code_status" : "OWNER", "expire_time" : { "$gt" : 1703415679448}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherCode in collection: voucher_code
24/12/23 18:01:19.516 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:01:19.517 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=[UserVoucherResponse(voucherStoreName=Giảm (truncated)...]
24/12/23 18:01:19.517 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:01:19.517 | WARN  | sale_service | 381 | AuthTokenFilter.java: end request ==> GET  /api/v1/voucher/user/voucher?productId=6532bbe5fae6d41599929246
24/12/23 18:01:19.517 | WARN  | sale_service | 488 | AuthTokenFilter.java: end request ==> GET  /api/v1/voucher/user/voucher?productId=6532bbe5fae6d41599929246
24/12/23 18:01:21.790 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:01:21.790 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:01:21.791 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:01:21.791 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:01:21.885 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:01:21.885 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:01:21.983 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:01:21.983 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:01:21.984 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:01:21.984 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:01:21.984 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:01:21.984 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:01:22.036 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:01:22.036 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:01:22.036 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:01:22.036 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:01:22.036 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:01:22.036 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:01:22.036 | WARN  | sale_service | 246 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:01:22.036 | WARN  | sale_service | 246 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:01:22.274 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getProductCart(Authentication)
24/12/23 18:01:22.274 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:01:22.370 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:01:22.469 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart", parameters={}
24/12/23 18:01:22.469 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getProductCart(Authentication)
24/12/23 18:01:22.539 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "_id" : { "$in" : [{ "$oid" : "651d84c5a4cd6f49416b6fda"}, { "$oid" : "651d84c5a4cd6f49416b6fda"}]}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.SellerStore in collection: store
24/12/23 18:01:22.616 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "voucher_store_type" : "PRODUCT", "ref_id" : { "$in" : ["6532bbe5fae6d41599929246", "6535339b8d69bd44723ba6fb"]}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherStore in collection: voucher_store
24/12/23 18:01:22.801 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:01:22.801 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=[CartByStoreResponse(storeId=651d84c5a4cd6 (truncated)...]
24/12/23 18:01:22.802 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:01:22.802 | WARN  | sale_service | 432 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart
24/12/23 18:01:22.802 | WARN  | sale_service | 528 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart
24/12/23 18:01:22.898 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.VoucherController#getUserVoucher(Authentication, String)
24/12/23 18:01:22.898 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.VoucherController#getUserVoucher(Authentication, String)
24/12/23 18:01:22.899 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:01:22.899 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:01:23.046 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:01:23.046 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:01:23.141 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/voucher/user/voucher?productId=6535339b8d69bd44723ba6fb", parameters={masked}
24/12/23 18:01:23.142 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.VoucherController#getUserVoucher(Authentication, String)
24/12/23 18:01:23.143 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/voucher/user/voucher?productId=6532bbe5fae6d41599929246", parameters={masked}
24/12/23 18:01:23.143 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.VoucherController#getUserVoucher(Authentication, String)
24/12/23 18:01:23.155 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "voucher_store_type" : "PRODUCT", "ref_id" : "6532bbe5fae6d41599929246"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherStore in collection: voucher_store
24/12/23 18:01:23.158 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "voucher_store_type" : "PRODUCT", "ref_id" : "6535339b8d69bd44723ba6fb"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherStore in collection: voucher_store
24/12/23 18:01:23.203 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "voucher_store_type" : "STORE", "ref_id" : "651d84c5a4cd6f49416b6fda"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherStore in collection: voucher_store
24/12/23 18:01:23.210 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "voucher_store_type" : "STORE", "ref_id" : "651d84c5a4cd6f49416b6fda"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherStore in collection: voucher_store
24/12/23 18:01:23.307 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:01:23.307 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "owner_id" : "lambro25102001", "voucher_store_id" : "65846511d48c0b1c77d1ee61", "voucher_code_status" : "OWNER", "expire_time" : { "$gt" : 1703415683307}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherCode in collection: voucher_code
24/12/23 18:01:23.307 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=[])]
24/12/23 18:01:23.307 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:01:23.307 | WARN  | sale_service | 260 | AuthTokenFilter.java: end request ==> GET  /api/v1/voucher/user/voucher?productId=6535339b8d69bd44723ba6fb
24/12/23 18:01:23.308 | WARN  | sale_service | 408 | AuthTokenFilter.java: end request ==> GET  /api/v1/voucher/user/voucher?productId=6535339b8d69bd44723ba6fb
24/12/23 18:01:23.373 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "owner_id" : "lambro25102001", "voucher_store_id" : "6587e666208da64222b26afc", "voucher_code_status" : "OWNER", "expire_time" : { "$gt" : 1703415683373}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherCode in collection: voucher_code
24/12/23 18:01:23.441 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:01:23.441 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=[UserVoucherResponse(voucherStoreName=Giảm (truncated)...]
24/12/23 18:01:23.441 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:01:23.442 | WARN  | sale_service | 396 | AuthTokenFilter.java: end request ==> GET  /api/v1/voucher/user/voucher?productId=6532bbe5fae6d41599929246
24/12/23 18:01:23.442 | WARN  | sale_service | 543 | AuthTokenFilter.java: end request ==> GET  /api/v1/voucher/user/voucher?productId=6532bbe5fae6d41599929246
24/12/23 18:01:24.790 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:01:24.790 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:01:24.791 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:01:24.791 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:01:24.888 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:01:24.888 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:01:24.991 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:01:24.991 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:01:24.992 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:01:24.992 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:01:24.992 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:01:24.992 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:01:25.026 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getProductCart(Authentication)
24/12/23 18:01:25.028 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:01:25.044 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:01:25.044 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:01:25.045 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:01:25.045 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:01:25.045 | WARN  | sale_service | 254 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:01:25.045 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:01:25.046 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:01:25.046 | WARN  | sale_service | 255 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:01:25.155 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:01:25.257 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart", parameters={}
24/12/23 18:01:25.257 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getProductCart(Authentication)
24/12/23 18:01:25.310 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "_id" : { "$in" : [{ "$oid" : "651d84c5a4cd6f49416b6fda"}, { "$oid" : "651d84c5a4cd6f49416b6fda"}]}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.SellerStore in collection: store
24/12/23 18:01:25.402 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "voucher_store_type" : "PRODUCT", "ref_id" : { "$in" : ["6532bbe5fae6d41599929246", "6535339b8d69bd44723ba6fb"]}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherStore in collection: voucher_store
24/12/23 18:01:25.549 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:01:25.550 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=[CartByStoreResponse(storeId=651d84c5a4cd6 (truncated)...]
24/12/23 18:01:25.550 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:01:25.551 | WARN  | sale_service | 396 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart
24/12/23 18:01:25.551 | WARN  | sale_service | 524 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart
24/12/23 18:01:25.663 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.VoucherController#getUserVoucher(Authentication, String)
24/12/23 18:01:25.663 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.VoucherController#getUserVoucher(Authentication, String)
24/12/23 18:01:25.664 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:01:25.664 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:01:25.778 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:01:25.778 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:01:25.878 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/voucher/user/voucher?productId=6535339b8d69bd44723ba6fb", parameters={masked}
24/12/23 18:01:25.878 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/voucher/user/voucher?productId=6532bbe5fae6d41599929246", parameters={masked}
24/12/23 18:01:25.878 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.VoucherController#getUserVoucher(Authentication, String)
24/12/23 18:01:25.878 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.VoucherController#getUserVoucher(Authentication, String)
24/12/23 18:01:25.888 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "voucher_store_type" : "PRODUCT", "ref_id" : "6535339b8d69bd44723ba6fb"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherStore in collection: voucher_store
24/12/23 18:01:25.888 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "voucher_store_type" : "PRODUCT", "ref_id" : "6532bbe5fae6d41599929246"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherStore in collection: voucher_store
24/12/23 18:01:25.933 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "voucher_store_type" : "STORE", "ref_id" : "651d84c5a4cd6f49416b6fda"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherStore in collection: voucher_store
24/12/23 18:01:25.933 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "voucher_store_type" : "STORE", "ref_id" : "651d84c5a4cd6f49416b6fda"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherStore in collection: voucher_store
24/12/23 18:01:25.989 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:01:25.989 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "owner_id" : "lambro25102001", "voucher_store_id" : "65846511d48c0b1c77d1ee61", "voucher_code_status" : "OWNER", "expire_time" : { "$gt" : 1703415685989}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherCode in collection: voucher_code
24/12/23 18:01:25.989 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=[])]
24/12/23 18:01:25.989 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:01:25.989 | WARN  | sale_service | 210 | AuthTokenFilter.java: end request ==> GET  /api/v1/voucher/user/voucher?productId=6535339b8d69bd44723ba6fb
24/12/23 18:01:25.989 | WARN  | sale_service | 325 | AuthTokenFilter.java: end request ==> GET  /api/v1/voucher/user/voucher?productId=6535339b8d69bd44723ba6fb
24/12/23 18:01:26.036 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "owner_id" : "lambro25102001", "voucher_store_id" : "6587e666208da64222b26afc", "voucher_code_status" : "OWNER", "expire_time" : { "$gt" : 1703415686036}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherCode in collection: voucher_code
24/12/23 18:01:26.110 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:01:26.111 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=[UserVoucherResponse(voucherStoreName=Giảm (truncated)...]
24/12/23 18:01:26.111 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:01:26.111 | WARN  | sale_service | 333 | AuthTokenFilter.java: end request ==> GET  /api/v1/voucher/user/voucher?productId=6532bbe5fae6d41599929246
24/12/23 18:01:26.111 | WARN  | sale_service | 447 | AuthTokenFilter.java: end request ==> GET  /api/v1/voucher/user/voucher?productId=6532bbe5fae6d41599929246
24/12/23 18:01:27.663 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getProductCart(Authentication)
24/12/23 18:01:27.664 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:01:27.783 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:01:27.784 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:01:27.784 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:01:27.784 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:01:27.835 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:01:27.881 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:01:27.881 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:01:27.933 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart", parameters={}
24/12/23 18:01:27.933 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getProductCart(Authentication)
24/12/23 18:01:27.976 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:01:27.977 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:01:27.977 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:01:27.982 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:01:27.982 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:01:27.983 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:01:28.023 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:01:28.023 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:01:28.023 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:01:28.023 | WARN  | sale_service | 238 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:01:28.027 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "_id" : { "$in" : [{ "$oid" : "651d84c5a4cd6f49416b6fda"}, { "$oid" : "651d84c5a4cd6f49416b6fda"}]}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.SellerStore in collection: store
24/12/23 18:01:28.033 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:01:28.033 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:01:28.033 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:01:28.033 | WARN  | sale_service | 249 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:01:28.143 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "voucher_store_type" : "PRODUCT", "ref_id" : { "$in" : ["6532bbe5fae6d41599929246", "6535339b8d69bd44723ba6fb"]}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherStore in collection: voucher_store
24/12/23 18:01:28.391 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:01:28.392 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=[CartByStoreResponse(storeId=651d84c5a4cd6 (truncated)...]
24/12/23 18:01:28.392 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:01:28.392 | WARN  | sale_service | 556 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart
24/12/23 18:01:28.392 | WARN  | sale_service | 728 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart
24/12/23 18:01:28.393 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getProductCart(Authentication)
24/12/23 18:01:28.394 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:01:28.480 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.VoucherController#getUserVoucher(Authentication, String)
24/12/23 18:01:28.480 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.VoucherController#getUserVoucher(Authentication, String)
24/12/23 18:01:28.481 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:01:28.481 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:01:28.488 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:01:28.582 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart", parameters={}
24/12/23 18:01:28.582 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getProductCart(Authentication)
24/12/23 18:01:28.582 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:01:28.582 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:01:28.632 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "_id" : { "$in" : [{ "$oid" : "651d84c5a4cd6f49416b6fda"}, { "$oid" : "651d84c5a4cd6f49416b6fda"}]}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.SellerStore in collection: store
24/12/23 18:01:28.682 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/voucher/user/voucher?productId=6532bbe5fae6d41599929246", parameters={masked}
24/12/23 18:01:28.682 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/voucher/user/voucher?productId=6535339b8d69bd44723ba6fb", parameters={masked}
24/12/23 18:01:28.683 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.VoucherController#getUserVoucher(Authentication, String)
24/12/23 18:01:28.683 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.VoucherController#getUserVoucher(Authentication, String)
24/12/23 18:01:28.695 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "voucher_store_type" : "PRODUCT", "ref_id" : "6532bbe5fae6d41599929246"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherStore in collection: voucher_store
24/12/23 18:01:28.696 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "voucher_store_type" : "PRODUCT", "ref_id" : "6535339b8d69bd44723ba6fb"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherStore in collection: voucher_store
24/12/23 18:01:28.712 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "voucher_store_type" : "PRODUCT", "ref_id" : { "$in" : ["6532bbe5fae6d41599929246", "6535339b8d69bd44723ba6fb"]}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherStore in collection: voucher_store
24/12/23 18:01:28.742 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "voucher_store_type" : "STORE", "ref_id" : "651d84c5a4cd6f49416b6fda"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherStore in collection: voucher_store
24/12/23 18:01:28.744 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "voucher_store_type" : "STORE", "ref_id" : "651d84c5a4cd6f49416b6fda"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherStore in collection: voucher_store
24/12/23 18:01:28.789 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "owner_id" : "lambro25102001", "voucher_store_id" : "65846511d48c0b1c77d1ee61", "voucher_code_status" : "OWNER", "expire_time" : { "$gt" : 1703415688788}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherCode in collection: voucher_code
24/12/23 18:01:28.789 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:01:28.790 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=[])]
24/12/23 18:01:28.790 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:01:28.790 | WARN  | sale_service | 208 | AuthTokenFilter.java: end request ==> GET  /api/v1/voucher/user/voucher?productId=6535339b8d69bd44723ba6fb
24/12/23 18:01:28.790 | WARN  | sale_service | 309 | AuthTokenFilter.java: end request ==> GET  /api/v1/voucher/user/voucher?productId=6535339b8d69bd44723ba6fb
24/12/23 18:01:28.834 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "owner_id" : "lambro25102001", "voucher_store_id" : "6587e666208da64222b26afc", "voucher_code_status" : "OWNER", "expire_time" : { "$gt" : 1703415688834}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherCode in collection: voucher_code
24/12/23 18:01:28.877 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:01:28.877 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=[CartByStoreResponse(storeId=651d84c5a4cd6 (truncated)...]
24/12/23 18:01:28.878 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:01:28.878 | WARN  | sale_service | 390 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart
24/12/23 18:01:28.878 | WARN  | sale_service | 485 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart
24/12/23 18:01:28.887 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:01:28.888 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=[UserVoucherResponse(voucherStoreName=Giảm (truncated)...]
24/12/23 18:01:28.888 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:01:28.888 | WARN  | sale_service | 305 | AuthTokenFilter.java: end request ==> GET  /api/v1/voucher/user/voucher?productId=6532bbe5fae6d41599929246
24/12/23 18:01:28.888 | WARN  | sale_service | 408 | AuthTokenFilter.java: end request ==> GET  /api/v1/voucher/user/voucher?productId=6532bbe5fae6d41599929246
24/12/23 18:01:30.786 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:01:30.786 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:01:30.787 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:01:30.787 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:01:30.906 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:01:30.908 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:01:30.998 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:01:30.999 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:01:31.000 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:01:31.002 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:01:31.002 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:01:31.002 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:01:31.045 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:01:31.045 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:01:31.046 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:01:31.046 | WARN  | sale_service | 260 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:01:31.051 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:01:31.051 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:01:31.052 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:01:31.052 | WARN  | sale_service | 266 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:01:33.783 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:01:33.783 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:01:33.783 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:01:33.784 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:01:33.874 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:01:33.878 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:01:33.974 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:01:33.974 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:01:33.975 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:01:33.975 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:01:33.976 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:01:33.976 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:01:34.027 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:01:34.027 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:01:34.027 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:01:34.027 | WARN  | sale_service | 243 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:01:34.029 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:01:34.029 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:01:34.030 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:01:34.030 | WARN  | sale_service | 247 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:01:36.792 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:01:36.792 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:01:36.793 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:01:36.793 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:01:36.919 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:01:36.919 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:01:37.017 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:01:37.017 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:01:37.017 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:01:37.017 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:01:37.017 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:01:37.018 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:01:37.063 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:01:37.064 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:01:37.064 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:01:37.064 | WARN  | sale_service | 270 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:01:37.072 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:01:37.072 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:01:37.073 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:01:37.073 | WARN  | sale_service | 280 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:01:39.784 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:01:39.786 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:01:39.786 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:01:39.787 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:01:39.891 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:01:39.891 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:01:39.987 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:01:39.988 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:01:39.989 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:01:39.990 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:01:39.991 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:01:39.993 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:01:40.044 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:01:40.045 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:01:40.045 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:01:40.045 | WARN  | sale_service | 259 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:01:40.222 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:01:40.224 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:01:40.224 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:01:40.224 | WARN  | sale_service | 334 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:01:40.224 | WARN  | sale_service | 437 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:01:42.788 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:01:42.788 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:01:42.789 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:01:42.789 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:01:42.893 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:01:42.893 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:01:42.991 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:01:42.991 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:01:42.991 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:01:42.997 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:01:42.997 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:01:42.997 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:01:43.038 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:01:43.039 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:01:43.039 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:01:43.039 | WARN  | sale_service | 250 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:01:43.054 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:01:43.055 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:01:43.055 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:01:43.055 | WARN  | sale_service | 266 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:01:45.787 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:01:45.787 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:01:45.788 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:01:45.788 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:01:45.857 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getProductCart(Authentication)
24/12/23 18:01:45.857 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:01:45.926 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:01:45.942 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:01:45.992 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:01:46.021 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:01:46.022 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:01:46.024 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:01:46.036 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:01:46.036 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:01:46.036 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:01:46.071 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:01:46.071 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:01:46.071 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:01:46.072 | WARN  | sale_service | 283 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:01:46.089 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:01:46.089 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart", parameters={}
24/12/23 18:01:46.089 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getProductCart(Authentication)
24/12/23 18:01:46.089 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:01:46.089 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:01:46.090 | WARN  | sale_service | 301 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:01:46.191 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "_id" : { "$in" : [{ "$oid" : "651d84c5a4cd6f49416b6fda"}, { "$oid" : "651d84c5a4cd6f49416b6fda"}]}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.SellerStore in collection: store
24/12/23 18:01:46.282 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "voucher_store_type" : "PRODUCT", "ref_id" : { "$in" : ["6532bbe5fae6d41599929246", "6535339b8d69bd44723ba6fb"]}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherStore in collection: voucher_store
24/12/23 18:01:46.444 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:01:46.444 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=[CartByStoreResponse(storeId=651d84c5a4cd6 (truncated)...]
24/12/23 18:01:46.445 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:01:46.445 | WARN  | sale_service | 453 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart
24/12/23 18:01:46.445 | WARN  | sale_service | 587 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart
24/12/23 18:01:46.533 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.VoucherController#getUserVoucher(Authentication, String)
24/12/23 18:01:46.533 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.VoucherController#getUserVoucher(Authentication, String)
24/12/23 18:01:46.534 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:01:46.534 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:01:46.632 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:01:46.632 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:01:46.723 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/voucher/user/voucher?productId=6535339b8d69bd44723ba6fb", parameters={masked}
24/12/23 18:01:46.724 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.VoucherController#getUserVoucher(Authentication, String)
24/12/23 18:01:46.726 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/voucher/user/voucher?productId=6532bbe5fae6d41599929246", parameters={masked}
24/12/23 18:01:46.726 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.VoucherController#getUserVoucher(Authentication, String)
24/12/23 18:01:46.758 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "voucher_store_type" : "PRODUCT", "ref_id" : "6535339b8d69bd44723ba6fb"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherStore in collection: voucher_store
24/12/23 18:01:46.758 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "voucher_store_type" : "PRODUCT", "ref_id" : "6532bbe5fae6d41599929246"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherStore in collection: voucher_store
24/12/23 18:01:46.810 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "voucher_store_type" : "STORE", "ref_id" : "651d84c5a4cd6f49416b6fda"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherStore in collection: voucher_store
24/12/23 18:01:46.811 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "voucher_store_type" : "STORE", "ref_id" : "651d84c5a4cd6f49416b6fda"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherStore in collection: voucher_store
24/12/23 18:01:46.858 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:01:46.858 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "owner_id" : "lambro25102001", "voucher_store_id" : "65846511d48c0b1c77d1ee61", "voucher_code_status" : "OWNER", "expire_time" : { "$gt" : 1703415706857}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherCode in collection: voucher_code
24/12/23 18:01:46.858 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=[])]
24/12/23 18:01:46.859 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:01:46.860 | WARN  | sale_service | 229 | AuthTokenFilter.java: end request ==> GET  /api/v1/voucher/user/voucher?productId=6535339b8d69bd44723ba6fb
24/12/23 18:01:46.860 | WARN  | sale_service | 327 | AuthTokenFilter.java: end request ==> GET  /api/v1/voucher/user/voucher?productId=6535339b8d69bd44723ba6fb
24/12/23 18:01:46.912 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "owner_id" : "lambro25102001", "voucher_store_id" : "6587e666208da64222b26afc", "voucher_code_status" : "OWNER", "expire_time" : { "$gt" : 1703415706912}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherCode in collection: voucher_code
24/12/23 18:01:46.959 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:01:46.959 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=[UserVoucherResponse(voucherStoreName=Giảm (truncated)...]
24/12/23 18:01:46.959 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:01:46.959 | WARN  | sale_service | 328 | AuthTokenFilter.java: end request ==> GET  /api/v1/voucher/user/voucher?productId=6532bbe5fae6d41599929246
24/12/23 18:01:46.960 | WARN  | sale_service | 427 | AuthTokenFilter.java: end request ==> GET  /api/v1/voucher/user/voucher?productId=6532bbe5fae6d41599929246
24/12/23 18:01:48.801 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:01:48.801 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:01:48.802 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:01:48.802 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:01:48.903 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:01:48.918 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:01:49.000 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:01:49.000 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:01:49.000 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:01:49.025 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:01:49.026 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:01:49.027 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:01:49.045 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:01:49.046 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:01:49.047 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:01:49.048 | WARN  | sale_service | 247 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:01:49.081 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:01:49.081 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:01:49.082 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:01:49.082 | WARN  | sale_service | 281 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:01:50.118 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getProductCart(Authentication)
24/12/23 18:01:50.118 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:01:50.219 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:01:50.357 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart", parameters={}
24/12/23 18:01:50.357 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getProductCart(Authentication)
24/12/23 18:01:50.426 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "_id" : { "$in" : [{ "$oid" : "651d84c5a4cd6f49416b6fda"}, { "$oid" : "651d84c5a4cd6f49416b6fda"}]}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.SellerStore in collection: store
24/12/23 18:01:50.514 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "voucher_store_type" : "PRODUCT", "ref_id" : { "$in" : ["6532bbe5fae6d41599929246", "6535339b8d69bd44723ba6fb"]}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherStore in collection: voucher_store
24/12/23 18:01:50.747 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:01:50.748 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=[CartByStoreResponse(storeId=651d84c5a4cd6 (truncated)...]
24/12/23 18:01:50.748 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:01:50.748 | WARN  | sale_service | 529 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart
24/12/23 18:01:50.749 | WARN  | sale_service | 631 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart
24/12/23 18:01:50.830 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.VoucherController#getUserVoucher(Authentication, String)
24/12/23 18:01:50.830 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.VoucherController#getUserVoucher(Authentication, String)
24/12/23 18:01:50.831 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:01:50.831 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:01:50.922 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:01:50.943 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:01:51.020 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/voucher/user/voucher?productId=6535339b8d69bd44723ba6fb", parameters={masked}
24/12/23 18:01:51.021 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.VoucherController#getUserVoucher(Authentication, String)
24/12/23 18:01:51.034 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "voucher_store_type" : "PRODUCT", "ref_id" : "6535339b8d69bd44723ba6fb"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherStore in collection: voucher_store
24/12/23 18:01:51.055 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/voucher/user/voucher?productId=6532bbe5fae6d41599929246", parameters={masked}
24/12/23 18:01:51.056 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.VoucherController#getUserVoucher(Authentication, String)
24/12/23 18:01:51.069 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "voucher_store_type" : "PRODUCT", "ref_id" : "6532bbe5fae6d41599929246"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherStore in collection: voucher_store
24/12/23 18:01:51.078 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "voucher_store_type" : "STORE", "ref_id" : "651d84c5a4cd6f49416b6fda"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherStore in collection: voucher_store
24/12/23 18:01:51.130 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:01:51.130 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=[])]
24/12/23 18:01:51.130 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "voucher_store_type" : "STORE", "ref_id" : "651d84c5a4cd6f49416b6fda"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherStore in collection: voucher_store
24/12/23 18:01:51.131 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:01:51.131 | WARN  | sale_service | 208 | AuthTokenFilter.java: end request ==> GET  /api/v1/voucher/user/voucher?productId=6535339b8d69bd44723ba6fb
24/12/23 18:01:51.131 | WARN  | sale_service | 300 | AuthTokenFilter.java: end request ==> GET  /api/v1/voucher/user/voucher?productId=6535339b8d69bd44723ba6fb
24/12/23 18:01:51.178 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "owner_id" : "lambro25102001", "voucher_store_id" : "65846511d48c0b1c77d1ee61", "voucher_code_status" : "OWNER", "expire_time" : { "$gt" : 1703415711178}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherCode in collection: voucher_code
24/12/23 18:01:51.226 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "owner_id" : "lambro25102001", "voucher_store_id" : "6587e666208da64222b26afc", "voucher_code_status" : "OWNER", "expire_time" : { "$gt" : 1703415711226}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherCode in collection: voucher_code
24/12/23 18:01:51.278 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:01:51.278 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=[UserVoucherResponse(voucherStoreName=Giảm (truncated)...]
24/12/23 18:01:51.278 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:01:51.278 | WARN  | sale_service | 336 | AuthTokenFilter.java: end request ==> GET  /api/v1/voucher/user/voucher?productId=6532bbe5fae6d41599929246
24/12/23 18:01:51.278 | WARN  | sale_service | 447 | AuthTokenFilter.java: end request ==> GET  /api/v1/voucher/user/voucher?productId=6532bbe5fae6d41599929246
24/12/23 18:01:51.790 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:01:51.790 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:01:51.791 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:01:51.791 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:01:51.900 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:01:51.900 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:01:51.992 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:01:51.993 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:01:51.993 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:01:51.994 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:01:51.994 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:01:51.994 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:01:52.039 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:01:52.040 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:01:52.040 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:01:52.040 | WARN  | sale_service | 249 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:01:52.046 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:01:52.046 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:01:52.047 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:01:52.047 | WARN  | sale_service | 256 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:01:52.953 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getProductCart(Authentication)
24/12/23 18:01:52.954 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:01:53.048 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:01:53.141 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart", parameters={}
24/12/23 18:01:53.141 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getProductCart(Authentication)
24/12/23 18:01:53.191 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "_id" : { "$in" : [{ "$oid" : "651d84c5a4cd6f49416b6fda"}, { "$oid" : "651d84c5a4cd6f49416b6fda"}]}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.SellerStore in collection: store
24/12/23 18:01:53.266 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "voucher_store_type" : "PRODUCT", "ref_id" : { "$in" : ["6532bbe5fae6d41599929246", "6535339b8d69bd44723ba6fb"]}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherStore in collection: voucher_store
24/12/23 18:01:53.438 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:01:53.438 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=[CartByStoreResponse(storeId=651d84c5a4cd6 (truncated)...]
24/12/23 18:01:53.439 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:01:53.439 | WARN  | sale_service | 391 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart
24/12/23 18:01:53.439 | WARN  | sale_service | 485 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart
24/12/23 18:01:53.515 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.VoucherController#getUserVoucher(Authentication, String)
24/12/23 18:01:53.515 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.VoucherController#getUserVoucher(Authentication, String)
24/12/23 18:01:53.516 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:01:53.516 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:01:53.616 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:01:53.617 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:01:53.709 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/voucher/user/voucher?productId=6532bbe5fae6d41599929246", parameters={masked}
24/12/23 18:01:53.709 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.VoucherController#getUserVoucher(Authentication, String)
24/12/23 18:01:53.717 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/voucher/user/voucher?productId=6535339b8d69bd44723ba6fb", parameters={masked}
24/12/23 18:01:53.718 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.VoucherController#getUserVoucher(Authentication, String)
24/12/23 18:01:53.737 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "voucher_store_type" : "PRODUCT", "ref_id" : "6535339b8d69bd44723ba6fb"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherStore in collection: voucher_store
24/12/23 18:01:53.737 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "voucher_store_type" : "PRODUCT", "ref_id" : "6532bbe5fae6d41599929246"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherStore in collection: voucher_store
24/12/23 18:01:53.789 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "voucher_store_type" : "STORE", "ref_id" : "651d84c5a4cd6f49416b6fda"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherStore in collection: voucher_store
24/12/23 18:01:53.789 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "voucher_store_type" : "STORE", "ref_id" : "651d84c5a4cd6f49416b6fda"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherStore in collection: voucher_store
24/12/23 18:01:53.835 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:01:53.835 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "owner_id" : "lambro25102001", "voucher_store_id" : "65846511d48c0b1c77d1ee61", "voucher_code_status" : "OWNER", "expire_time" : { "$gt" : 1703415713835}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherCode in collection: voucher_code
24/12/23 18:01:53.836 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=[])]
24/12/23 18:01:53.836 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:01:53.836 | WARN  | sale_service | 218 | AuthTokenFilter.java: end request ==> GET  /api/v1/voucher/user/voucher?productId=6535339b8d69bd44723ba6fb
24/12/23 18:01:53.836 | WARN  | sale_service | 320 | AuthTokenFilter.java: end request ==> GET  /api/v1/voucher/user/voucher?productId=6535339b8d69bd44723ba6fb
24/12/23 18:01:53.882 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "owner_id" : "lambro25102001", "voucher_store_id" : "6587e666208da64222b26afc", "voucher_code_status" : "OWNER", "expire_time" : { "$gt" : 1703415713882}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherCode in collection: voucher_code
24/12/23 18:01:53.929 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:01:53.929 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=[UserVoucherResponse(voucherStoreName=Giảm (truncated)...]
24/12/23 18:01:53.929 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:01:53.929 | WARN  | sale_service | 314 | AuthTokenFilter.java: end request ==> GET  /api/v1/voucher/user/voucher?productId=6532bbe5fae6d41599929246
24/12/23 18:01:53.929 | WARN  | sale_service | 413 | AuthTokenFilter.java: end request ==> GET  /api/v1/voucher/user/voucher?productId=6532bbe5fae6d41599929246
24/12/23 18:01:54.779 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:01:54.779 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:01:54.780 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:01:54.780 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:01:54.871 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:01:54.881 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:01:54.964 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:01:54.965 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:01:54.965 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:01:54.983 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:01:54.983 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:01:54.984 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:01:55.015 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:01:55.015 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:01:55.016 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:01:55.016 | WARN  | sale_service | 236 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:01:55.030 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:01:55.030 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:01:55.031 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:01:55.031 | WARN  | sale_service | 251 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:01:57.024 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getProductCart(Authentication)
24/12/23 18:01:57.024 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:01:57.121 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:01:57.239 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart", parameters={}
24/12/23 18:01:57.240 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getProductCart(Authentication)
24/12/23 18:01:57.314 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "_id" : { "$in" : [{ "$oid" : "651d84c5a4cd6f49416b6fda"}, { "$oid" : "651d84c5a4cd6f49416b6fda"}]}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.SellerStore in collection: store
24/12/23 18:01:57.410 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "voucher_store_type" : "PRODUCT", "ref_id" : { "$in" : ["6532bbe5fae6d41599929246", "6535339b8d69bd44723ba6fb"]}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherStore in collection: voucher_store
24/12/23 18:01:57.478 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "voucher_store_id" : { "$in" : ["65846511d48c0b1c77d1ee61", "6587e666208da64222b26afc"]}, "owner_id" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherCode in collection: voucher_code
24/12/23 18:01:57.779 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:01:57.779 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:01:57.779 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:01:57.779 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:01:57.872 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:01:57.873 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:01:57.927 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "_id" : { "$oid" : "6581bc657f9bde440a01886f"}, "state" : "ACTIVE"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.ProductCombo in collection: product_combo
24/12/23 18:01:57.974 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:01:57.975 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:01:57.975 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:01:57.988 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:01:57.988 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:01:57.989 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:01:58.040 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:01:58.040 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:01:58.040 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:01:58.040 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:01:58.041 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:01:58.041 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:01:58.041 | WARN  | sale_service | 261 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:01:58.041 | WARN  | sale_service | 261 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:01:58.070 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "_id" : { "$in" : [{ "$oid" : "6532bbe5fae6d41599929246"}, { "$oid" : "6535339b8d69bd44723ba6fb"}, { "$oid" : "655cdfb9524e3f7af0d0b842"}, { "$oid" : "653a7660a4b25b73765c1cda"}, { "$oid" : "658447aff3cf2559f4affd5e"}]}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Product in collection: product
24/12/23 18:01:58.153 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:01:58.154 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=[CartByStoreResponse(storeId=651d84c5a4cd6 (truncated)...]
24/12/23 18:01:58.154 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:01:58.154 | WARN  | sale_service | 1033 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart
24/12/23 18:01:58.154 | WARN  | sale_service | 1129 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart
24/12/23 18:01:58.224 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.VoucherController#getUserVoucher(Authentication, String)
24/12/23 18:01:58.224 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.VoucherController#getUserVoucher(Authentication, String)
24/12/23 18:01:58.224 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:01:58.224 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:01:58.330 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:01:58.330 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:01:58.422 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/voucher/user/voucher?productId=6535339b8d69bd44723ba6fb", parameters={masked}
24/12/23 18:01:58.422 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.VoucherController#getUserVoucher(Authentication, String)
24/12/23 18:01:58.425 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/voucher/user/voucher?productId=6532bbe5fae6d41599929246", parameters={masked}
24/12/23 18:01:58.425 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.VoucherController#getUserVoucher(Authentication, String)
24/12/23 18:01:58.435 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "voucher_store_type" : "PRODUCT", "ref_id" : "6535339b8d69bd44723ba6fb"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherStore in collection: voucher_store
24/12/23 18:01:58.441 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "voucher_store_type" : "PRODUCT", "ref_id" : "6532bbe5fae6d41599929246"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherStore in collection: voucher_store
24/12/23 18:01:58.497 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "voucher_store_type" : "STORE", "ref_id" : "651d84c5a4cd6f49416b6fda"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherStore in collection: voucher_store
24/12/23 18:01:58.502 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "voucher_store_type" : "STORE", "ref_id" : "651d84c5a4cd6f49416b6fda"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherStore in collection: voucher_store
24/12/23 18:01:58.544 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:01:58.544 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=[])]
24/12/23 18:01:58.544 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:01:58.545 | WARN  | sale_service | 214 | AuthTokenFilter.java: end request ==> GET  /api/v1/voucher/user/voucher?productId=6535339b8d69bd44723ba6fb
24/12/23 18:01:58.545 | WARN  | sale_service | 321 | AuthTokenFilter.java: end request ==> GET  /api/v1/voucher/user/voucher?productId=6535339b8d69bd44723ba6fb
24/12/23 18:01:58.558 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "owner_id" : "lambro25102001", "voucher_store_id" : "65846511d48c0b1c77d1ee61", "voucher_code_status" : "OWNER", "expire_time" : { "$gt" : 1703415718557}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherCode in collection: voucher_code
24/12/23 18:01:58.604 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "owner_id" : "lambro25102001", "voucher_store_id" : "6587e666208da64222b26afc", "voucher_code_status" : "OWNER", "expire_time" : { "$gt" : 1703415718604}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherCode in collection: voucher_code
24/12/23 18:01:58.648 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:01:58.648 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=[UserVoucherResponse(voucherStoreName=Giảm (truncated)...]
24/12/23 18:01:58.649 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:01:58.649 | WARN  | sale_service | 318 | AuthTokenFilter.java: end request ==> GET  /api/v1/voucher/user/voucher?productId=6532bbe5fae6d41599929246
24/12/23 18:01:58.649 | WARN  | sale_service | 425 | AuthTokenFilter.java: end request ==> GET  /api/v1/voucher/user/voucher?productId=6532bbe5fae6d41599929246
24/12/23 18:02:00.787 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:02:00.787 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:02:00.787 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:02:00.787 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:02:00.884 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:02:00.884 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:02:00.979 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:02:00.979 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:02:00.979 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:02:00.980 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:02:00.980 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:02:00.980 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:02:01.025 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:02:01.026 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:02:01.026 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:02:01.026 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:02:01.026 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:02:01.026 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:02:01.026 | WARN  | sale_service | 239 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:02:01.026 | WARN  | sale_service | 239 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:02:03.817 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:02:03.817 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:02:03.818 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:02:03.818 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:02:03.917 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:02:03.923 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:02:04.016 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:02:04.016 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:02:04.016 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:02:04.018 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:02:04.019 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:02:04.019 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:02:04.062 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:02:04.062 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:02:04.063 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:02:04.063 | WARN  | sale_service | 246 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:02:04.073 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:02:04.074 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:02:04.074 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:02:04.074 | WARN  | sale_service | 257 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:02:06.821 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:02:06.822 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:02:06.823 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:02:06.824 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:02:06.926 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:02:06.926 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:02:07.030 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:02:07.030 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:02:07.031 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:02:07.032 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:02:07.032 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:02:07.033 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:02:07.087 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:02:07.087 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:02:07.088 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:02:07.088 | WARN  | sale_service | 266 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:02:07.256 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:02:07.256 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:02:07.257 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:02:07.257 | WARN  | sale_service | 330 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:02:07.257 | WARN  | sale_service | 433 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:02:09.273 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getProductCart(Authentication)
24/12/23 18:02:09.274 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:02:09.388 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:02:09.481 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart", parameters={}
24/12/23 18:02:09.481 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getProductCart(Authentication)
24/12/23 18:02:09.540 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "_id" : { "$in" : [{ "$oid" : "651d84c5a4cd6f49416b6fda"}, { "$oid" : "651d84c5a4cd6f49416b6fda"}]}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.SellerStore in collection: store
24/12/23 18:02:09.635 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "voucher_store_type" : "PRODUCT", "ref_id" : { "$in" : ["6532bbe5fae6d41599929246", "6535339b8d69bd44723ba6fb"]}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherStore in collection: voucher_store
24/12/23 18:02:09.781 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:02:09.782 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=[CartByStoreResponse(storeId=651d84c5a4cd6 (truncated)...]
24/12/23 18:02:09.783 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:02:09.783 | WARN  | sale_service | 395 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart
24/12/23 18:02:09.783 | WARN  | sale_service | 509 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart
24/12/23 18:02:09.787 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:02:09.787 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:02:09.788 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:02:09.788 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:02:09.877 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.VoucherController#getUserVoucher(Authentication, String)
24/12/23 18:02:09.878 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.VoucherController#getUserVoucher(Authentication, String)
24/12/23 18:02:09.878 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:02:09.878 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:02:09.884 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:02:09.884 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:02:09.971 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:02:09.976 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:02:09.977 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:02:09.977 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:02:09.978 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:02:09.978 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:02:09.979 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:02:09.979 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:02:10.027 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:02:10.028 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:02:10.028 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:02:10.028 | WARN  | sale_service | 240 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:02:10.028 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:02:10.028 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:02:10.029 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:02:10.029 | WARN  | sale_service | 241 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:02:10.064 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/voucher/user/voucher?productId=6535339b8d69bd44723ba6fb", parameters={masked}
24/12/23 18:02:10.064 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.VoucherController#getUserVoucher(Authentication, String)
24/12/23 18:02:10.073 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/voucher/user/voucher?productId=6532bbe5fae6d41599929246", parameters={masked}
24/12/23 18:02:10.073 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.VoucherController#getUserVoucher(Authentication, String)
24/12/23 18:02:10.082 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "voucher_store_type" : "PRODUCT", "ref_id" : "6535339b8d69bd44723ba6fb"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherStore in collection: voucher_store
24/12/23 18:02:10.093 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "voucher_store_type" : "PRODUCT", "ref_id" : "6532bbe5fae6d41599929246"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherStore in collection: voucher_store
24/12/23 18:02:10.126 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "voucher_store_type" : "STORE", "ref_id" : "651d84c5a4cd6f49416b6fda"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherStore in collection: voucher_store
24/12/23 18:02:10.143 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "voucher_store_type" : "STORE", "ref_id" : "651d84c5a4cd6f49416b6fda"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherStore in collection: voucher_store
24/12/23 18:02:10.178 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:02:10.178 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=[])]
24/12/23 18:02:10.178 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:02:10.179 | WARN  | sale_service | 208 | AuthTokenFilter.java: end request ==> GET  /api/v1/voucher/user/voucher?productId=6535339b8d69bd44723ba6fb
24/12/23 18:02:10.179 | WARN  | sale_service | 301 | AuthTokenFilter.java: end request ==> GET  /api/v1/voucher/user/voucher?productId=6535339b8d69bd44723ba6fb
24/12/23 18:02:10.190 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "owner_id" : "lambro25102001", "voucher_store_id" : "65846511d48c0b1c77d1ee61", "voucher_code_status" : "OWNER", "expire_time" : { "$gt" : 1703415730189}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherCode in collection: voucher_code
24/12/23 18:02:10.238 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "owner_id" : "lambro25102001", "voucher_store_id" : "6587e666208da64222b26afc", "voucher_code_status" : "OWNER", "expire_time" : { "$gt" : 1703415730238}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherCode in collection: voucher_code
24/12/23 18:02:10.286 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:02:10.287 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=[UserVoucherResponse(voucherStoreName=Giảm (truncated)...]
24/12/23 18:02:10.287 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:02:10.287 | WARN  | sale_service | 309 | AuthTokenFilter.java: end request ==> GET  /api/v1/voucher/user/voucher?productId=6532bbe5fae6d41599929246
24/12/23 18:02:10.287 | WARN  | sale_service | 408 | AuthTokenFilter.java: end request ==> GET  /api/v1/voucher/user/voucher?productId=6532bbe5fae6d41599929246
24/12/23 18:02:12.696 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getProductCart(Authentication)
24/12/23 18:02:12.697 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:02:12.787 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:02:12.787 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:02:12.788 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:02:12.788 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:02:12.788 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:02:12.883 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:02:12.883 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:02:12.886 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart", parameters={}
24/12/23 18:02:12.886 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getProductCart(Authentication)
24/12/23 18:02:12.971 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "_id" : { "$in" : [{ "$oid" : "651d84c5a4cd6f49416b6fda"}, { "$oid" : "651d84c5a4cd6f49416b6fda"}]}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.SellerStore in collection: store
24/12/23 18:02:12.973 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:02:12.973 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:02:12.973 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:02:12.973 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:02:12.974 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:02:12.974 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:02:13.019 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:02:13.020 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:02:13.020 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:02:13.020 | WARN  | sale_service | 232 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:02:13.028 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:02:13.028 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:02:13.029 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:02:13.029 | WARN  | sale_service | 241 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:02:13.054 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "voucher_store_type" : "PRODUCT", "ref_id" : { "$in" : ["6532bbe5fae6d41599929246", "6535339b8d69bd44723ba6fb"]}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherStore in collection: voucher_store
24/12/23 18:02:13.225 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:02:13.225 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=[CartByStoreResponse(storeId=651d84c5a4cd6 (truncated)...]
24/12/23 18:02:13.225 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:02:13.226 | WARN  | sale_service | 438 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart
24/12/23 18:02:13.226 | WARN  | sale_service | 530 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart
24/12/23 18:02:13.302 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.VoucherController#getUserVoucher(Authentication, String)
24/12/23 18:02:13.302 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.VoucherController#getUserVoucher(Authentication, String)
24/12/23 18:02:13.303 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:02:13.303 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:02:13.400 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:02:13.400 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:02:13.497 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/voucher/user/voucher?productId=6532bbe5fae6d41599929246", parameters={masked}
24/12/23 18:02:13.497 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/voucher/user/voucher?productId=6535339b8d69bd44723ba6fb", parameters={masked}
24/12/23 18:02:13.498 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.VoucherController#getUserVoucher(Authentication, String)
24/12/23 18:02:13.498 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.VoucherController#getUserVoucher(Authentication, String)
24/12/23 18:02:13.514 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "voucher_store_type" : "PRODUCT", "ref_id" : "6535339b8d69bd44723ba6fb"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherStore in collection: voucher_store
24/12/23 18:02:13.514 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "voucher_store_type" : "PRODUCT", "ref_id" : "6532bbe5fae6d41599929246"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherStore in collection: voucher_store
24/12/23 18:02:13.560 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "voucher_store_type" : "STORE", "ref_id" : "651d84c5a4cd6f49416b6fda"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherStore in collection: voucher_store
24/12/23 18:02:13.560 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "voucher_store_type" : "STORE", "ref_id" : "651d84c5a4cd6f49416b6fda"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherStore in collection: voucher_store
24/12/23 18:02:13.606 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:02:13.606 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "owner_id" : "lambro25102001", "voucher_store_id" : "65846511d48c0b1c77d1ee61", "voucher_code_status" : "OWNER", "expire_time" : { "$gt" : 1703415733605}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherCode in collection: voucher_code
24/12/23 18:02:13.606 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=[])]
24/12/23 18:02:13.606 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:02:13.606 | WARN  | sale_service | 205 | AuthTokenFilter.java: end request ==> GET  /api/v1/voucher/user/voucher?productId=6535339b8d69bd44723ba6fb
24/12/23 18:02:13.606 | WARN  | sale_service | 302 | AuthTokenFilter.java: end request ==> GET  /api/v1/voucher/user/voucher?productId=6535339b8d69bd44723ba6fb
24/12/23 18:02:13.654 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "owner_id" : "lambro25102001", "voucher_store_id" : "6587e666208da64222b26afc", "voucher_code_status" : "OWNER", "expire_time" : { "$gt" : 1703415733654}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherCode in collection: voucher_code
24/12/23 18:02:13.700 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:02:13.700 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=[UserVoucherResponse(voucherStoreName=Giảm (truncated)...]
24/12/23 18:02:13.701 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:02:13.701 | WARN  | sale_service | 301 | AuthTokenFilter.java: end request ==> GET  /api/v1/voucher/user/voucher?productId=6532bbe5fae6d41599929246
24/12/23 18:02:13.701 | WARN  | sale_service | 398 | AuthTokenFilter.java: end request ==> GET  /api/v1/voucher/user/voucher?productId=6532bbe5fae6d41599929246
24/12/23 18:02:15.802 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:02:15.802 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:02:15.803 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:02:15.803 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:02:15.903 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:02:15.903 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:02:16.047 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:02:16.047 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:02:16.047 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:02:16.048 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:02:16.048 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:02:16.048 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:02:16.100 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:02:16.100 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:02:16.100 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:02:16.101 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:02:16.101 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:02:16.101 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:02:16.101 | WARN  | sale_service | 298 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:02:16.101 | WARN  | sale_service | 298 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:02:17.939 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getProductCart(Authentication)
24/12/23 18:02:17.939 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:02:18.063 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:02:18.168 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart", parameters={}
24/12/23 18:02:18.168 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getProductCart(Authentication)
24/12/23 18:02:18.237 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "_id" : { "$in" : [{ "$oid" : "651d84c5a4cd6f49416b6fda"}, { "$oid" : "651d84c5a4cd6f49416b6fda"}]}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.SellerStore in collection: store
24/12/23 18:02:18.358 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "voucher_store_type" : "PRODUCT", "ref_id" : { "$in" : ["6532bbe5fae6d41599929246", "6535339b8d69bd44723ba6fb"]}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherStore in collection: voucher_store
24/12/23 18:02:18.610 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:02:18.611 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=[CartByStoreResponse(storeId=651d84c5a4cd6 (truncated)...]
24/12/23 18:02:18.611 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:02:18.611 | WARN  | sale_service | 548 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart
24/12/23 18:02:18.611 | WARN  | sale_service | 671 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart
24/12/23 18:02:18.704 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.VoucherController#getUserVoucher(Authentication, String)
24/12/23 18:02:18.704 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.VoucherController#getUserVoucher(Authentication, String)
24/12/23 18:02:18.705 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:02:18.705 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:02:18.786 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:02:18.786 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:02:18.787 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:02:18.787 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:02:18.802 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:02:18.806 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:02:18.893 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/voucher/user/voucher?productId=6535339b8d69bd44723ba6fb", parameters={masked}
24/12/23 18:02:18.893 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.VoucherController#getUserVoucher(Authentication, String)
24/12/23 18:02:18.893 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:02:18.895 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:02:18.901 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/voucher/user/voucher?productId=6532bbe5fae6d41599929246", parameters={masked}
24/12/23 18:02:18.902 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.VoucherController#getUserVoucher(Authentication, String)
24/12/23 18:02:18.909 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "voucher_store_type" : "PRODUCT", "ref_id" : "6535339b8d69bd44723ba6fb"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherStore in collection: voucher_store
24/12/23 18:02:18.924 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "voucher_store_type" : "PRODUCT", "ref_id" : "6532bbe5fae6d41599929246"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherStore in collection: voucher_store
24/12/23 18:02:18.958 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "voucher_store_type" : "STORE", "ref_id" : "651d84c5a4cd6f49416b6fda"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherStore in collection: voucher_store
24/12/23 18:02:18.973 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "voucher_store_type" : "STORE", "ref_id" : "651d84c5a4cd6f49416b6fda"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherStore in collection: voucher_store
24/12/23 18:02:18.988 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:02:18.989 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:02:18.989 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:02:18.989 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:02:18.989 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:02:18.990 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:02:19.004 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:02:19.004 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=[])]
24/12/23 18:02:19.004 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:02:19.004 | WARN  | sale_service | 202 | AuthTokenFilter.java: end request ==> GET  /api/v1/voucher/user/voucher?productId=6535339b8d69bd44723ba6fb
24/12/23 18:02:19.004 | WARN  | sale_service | 299 | AuthTokenFilter.java: end request ==> GET  /api/v1/voucher/user/voucher?productId=6535339b8d69bd44723ba6fb
24/12/23 18:02:19.020 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "owner_id" : "lambro25102001", "voucher_store_id" : "65846511d48c0b1c77d1ee61", "voucher_code_status" : "OWNER", "expire_time" : { "$gt" : 1703415739020}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherCode in collection: voucher_code
24/12/23 18:02:19.038 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:02:19.038 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:02:19.039 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:02:19.039 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:02:19.039 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:02:19.039 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:02:19.039 | WARN  | sale_service | 252 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:02:19.039 | WARN  | sale_service | 252 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:02:19.076 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "owner_id" : "lambro25102001", "voucher_store_id" : "6587e666208da64222b26afc", "voucher_code_status" : "OWNER", "expire_time" : { "$gt" : 1703415739076}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherCode in collection: voucher_code
24/12/23 18:02:19.128 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:02:19.128 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=[UserVoucherResponse(voucherStoreName=Giảm (truncated)...]
24/12/23 18:02:19.129 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:02:19.129 | WARN  | sale_service | 323 | AuthTokenFilter.java: end request ==> GET  /api/v1/voucher/user/voucher?productId=6532bbe5fae6d41599929246
24/12/23 18:02:19.129 | WARN  | sale_service | 423 | AuthTokenFilter.java: end request ==> GET  /api/v1/voucher/user/voucher?productId=6532bbe5fae6d41599929246
24/12/23 18:02:21.785 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:02:21.785 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:02:21.786 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:02:21.786 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:02:21.878 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:02:21.881 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:02:21.970 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:02:21.971 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:02:21.971 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:02:21.976 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:02:21.976 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:02:21.976 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:02:22.017 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:02:22.017 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:02:22.018 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:02:22.018 | WARN  | sale_service | 233 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:02:22.023 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:02:22.023 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:02:22.024 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:02:22.024 | WARN  | sale_service | 239 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:02:24.793 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:02:24.793 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:02:24.794 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:02:24.794 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:02:24.887 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:02:24.887 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:02:24.985 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:02:24.985 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:02:24.986 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:02:24.986 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:02:24.986 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:02:24.987 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:02:25.074 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:02:25.074 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:02:25.074 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:02:25.074 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:02:25.075 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:02:25.075 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:02:25.075 | WARN  | sale_service | 281 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:02:25.075 | WARN  | sale_service | 281 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:02:27.123 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getProductCart(Authentication)
24/12/23 18:02:27.124 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:02:27.278 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:02:27.410 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart", parameters={}
24/12/23 18:02:27.411 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getProductCart(Authentication)
24/12/23 18:02:27.485 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "_id" : { "$in" : [{ "$oid" : "651d84c5a4cd6f49416b6fda"}, { "$oid" : "651d84c5a4cd6f49416b6fda"}]}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.SellerStore in collection: store
24/12/23 18:02:27.607 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "voucher_store_type" : "PRODUCT", "ref_id" : { "$in" : ["6532bbe5fae6d41599929246", "6535339b8d69bd44723ba6fb"]}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherStore in collection: voucher_store
24/12/23 18:02:27.778 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:02:27.779 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=[CartByStoreResponse(storeId=651d84c5a4cd6 (truncated)...]
24/12/23 18:02:27.779 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:02:27.780 | WARN  | sale_service | 502 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart
24/12/23 18:02:27.780 | WARN  | sale_service | 657 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart
24/12/23 18:02:27.783 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:02:27.783 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:02:27.784 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:02:27.784 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:02:27.928 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:02:27.928 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:02:28.027 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:02:28.027 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:02:28.027 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:02:28.027 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:02:28.027 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:02:28.027 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:02:28.077 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:02:28.077 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:02:28.077 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:02:28.077 | WARN  | sale_service | 292 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:02:28.089 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:02:28.089 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:02:28.089 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:02:28.089 | WARN  | sale_service | 304 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:02:29.441 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getProductCart(Authentication)
24/12/23 18:02:29.442 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:02:29.538 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:02:29.633 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart", parameters={}
24/12/23 18:02:29.633 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getProductCart(Authentication)
24/12/23 18:02:29.695 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "_id" : { "$in" : [{ "$oid" : "651d84c5a4cd6f49416b6fda"}, { "$oid" : "651d84c5a4cd6f49416b6fda"}]}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.SellerStore in collection: store
24/12/23 18:02:29.765 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "voucher_store_type" : "PRODUCT", "ref_id" : { "$in" : ["6532bbe5fae6d41599929246", "6535339b8d69bd44723ba6fb"]}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherStore in collection: voucher_store
24/12/23 18:02:29.926 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:02:29.927 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=[CartByStoreResponse(storeId=651d84c5a4cd6 (truncated)...]
24/12/23 18:02:29.927 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:02:29.927 | WARN  | sale_service | 389 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart
24/12/23 18:02:29.928 | WARN  | sale_service | 486 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart
24/12/23 18:02:30.794 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:02:30.794 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:02:30.794 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:02:30.794 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:02:30.894 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:02:30.896 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:02:30.989 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:02:30.989 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:02:30.989 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:02:30.994 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:02:30.995 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:02:30.995 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:02:31.034 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:02:31.035 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:02:31.035 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:02:31.035 | WARN  | sale_service | 241 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:02:31.047 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:02:31.048 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:02:31.048 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:02:31.048 | WARN  | sale_service | 254 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:02:33.786 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:02:33.786 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:02:33.787 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:02:33.788 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:02:33.884 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:02:33.884 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:02:34.008 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:02:34.009 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:02:34.009 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:02:34.013 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:02:34.013 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:02:34.013 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:02:34.054 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:02:34.055 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:02:34.055 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:02:34.055 | WARN  | sale_service | 269 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:02:34.060 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:02:34.061 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:02:34.061 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:02:34.061 | WARN  | sale_service | 274 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:02:36.786 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:02:36.787 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:02:36.787 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:02:36.787 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:02:36.925 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:02:36.925 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:02:37.052 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:02:37.052 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:02:37.052 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:02:37.052 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:02:37.053 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:02:37.053 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:02:37.115 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:02:37.116 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:02:37.116 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:02:37.116 | WARN  | sale_service | 329 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:02:37.117 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:02:37.117 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:02:37.117 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:02:37.117 | WARN  | sale_service | 330 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:02:39.782 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:02:39.783 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:02:39.784 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:02:39.784 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:02:39.877 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:02:39.889 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:02:39.977 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:02:39.978 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:02:39.978 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:02:39.986 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:02:39.986 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:02:39.987 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:02:40.026 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:02:40.026 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:02:40.027 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:02:40.027 | WARN  | sale_service | 243 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:02:40.036 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:02:40.036 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:02:40.036 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:02:40.037 | WARN  | sale_service | 253 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:02:42.786 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:02:42.786 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:02:42.787 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:02:42.787 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:02:42.879 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:02:42.882 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:02:42.969 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:02:42.970 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:02:42.971 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:02:42.981 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:02:42.981 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:02:42.982 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:02:43.019 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:02:43.019 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:02:43.020 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:02:43.020 | WARN  | sale_service | 233 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:02:43.036 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:02:43.036 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:02:43.036 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:02:43.037 | WARN  | sale_service | 250 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:02:44.574 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getProductCart(Authentication)
24/12/23 18:02:44.576 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:02:44.690 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:02:44.806 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart", parameters={}
24/12/23 18:02:44.807 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getProductCart(Authentication)
24/12/23 18:02:44.871 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "_id" : { "$in" : [{ "$oid" : "651d84c5a4cd6f49416b6fda"}, { "$oid" : "651d84c5a4cd6f49416b6fda"}]}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.SellerStore in collection: store
24/12/23 18:02:44.950 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "voucher_store_type" : "PRODUCT", "ref_id" : { "$in" : ["6532bbe5fae6d41599929246", "6535339b8d69bd44723ba6fb"]}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherStore in collection: voucher_store
24/12/23 18:02:45.144 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:02:45.144 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=[CartByStoreResponse(storeId=651d84c5a4cd6 (truncated)...]
24/12/23 18:02:45.144 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:02:45.144 | WARN  | sale_service | 455 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart
24/12/23 18:02:45.145 | WARN  | sale_service | 571 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart
24/12/23 18:02:45.752 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getProductCart(Authentication)
24/12/23 18:02:45.752 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:02:45.780 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:02:45.780 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:02:45.780 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:02:45.780 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:02:45.859 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:02:45.879 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:02:45.879 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:02:45.953 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart", parameters={}
24/12/23 18:02:45.953 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getProductCart(Authentication)
24/12/23 18:02:45.970 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:02:45.970 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:02:45.971 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:02:45.976 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:02:45.976 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:02:45.977 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:02:46.021 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:02:46.021 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:02:46.022 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:02:46.022 | WARN  | sale_service | 242 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:02:46.022 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:02:46.022 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:02:46.022 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:02:46.023 | WARN  | sale_service | 243 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:02:46.031 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "_id" : { "$in" : [{ "$oid" : "651d84c5a4cd6f49416b6fda"}, { "$oid" : "651d84c5a4cd6f49416b6fda"}]}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.SellerStore in collection: store
24/12/23 18:02:46.107 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "voucher_store_type" : "PRODUCT", "ref_id" : { "$in" : ["6532bbe5fae6d41599929246", "6535339b8d69bd44723ba6fb"]}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherStore in collection: voucher_store
24/12/23 18:02:46.248 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:02:46.248 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=[CartByStoreResponse(storeId=651d84c5a4cd6 (truncated)...]
24/12/23 18:02:46.249 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:02:46.249 | WARN  | sale_service | 389 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart
24/12/23 18:02:46.249 | WARN  | sale_service | 497 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart
24/12/23 18:02:48.791 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:02:48.791 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:02:48.792 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:02:48.792 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:02:48.889 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getProductCart(Authentication)
24/12/23 18:02:48.891 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:02:48.891 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:02:48.891 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:02:48.983 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:02:48.987 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:02:48.988 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:02:48.988 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:02:48.988 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:02:48.988 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:02:48.989 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:02:49.044 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:02:49.045 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:02:49.045 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:02:49.045 | WARN  | sale_service | 253 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:02:49.045 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:02:49.045 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:02:49.046 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:02:49.046 | WARN  | sale_service | 254 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:02:49.091 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart", parameters={}
24/12/23 18:02:49.092 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getProductCart(Authentication)
24/12/23 18:02:49.151 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "_id" : { "$in" : [{ "$oid" : "651d84c5a4cd6f49416b6fda"}, { "$oid" : "651d84c5a4cd6f49416b6fda"}]}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.SellerStore in collection: store
24/12/23 18:02:49.222 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "voucher_store_type" : "PRODUCT", "ref_id" : { "$in" : ["6532bbe5fae6d41599929246", "6535339b8d69bd44723ba6fb"]}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherStore in collection: voucher_store
24/12/23 18:02:49.360 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:02:49.360 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=[CartByStoreResponse(storeId=651d84c5a4cd6 (truncated)...]
24/12/23 18:02:49.362 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:02:49.362 | WARN  | sale_service | 379 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart
24/12/23 18:02:49.362 | WARN  | sale_service | 471 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart
24/12/23 18:02:51.788 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:02:51.790 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:02:51.790 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:02:51.792 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:02:51.901 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:02:51.903 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:02:51.991 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:02:51.991 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:02:51.991 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:02:52.002 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:02:52.002 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:02:52.003 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:02:52.039 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:02:52.039 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:02:52.039 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:02:52.039 | WARN  | sale_service | 247 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:02:52.049 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:02:52.049 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:02:52.050 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:02:52.050 | WARN  | sale_service | 260 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:02:52.503 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getProductCart(Authentication)
24/12/23 18:02:52.504 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:02:52.607 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:02:52.706 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart", parameters={}
24/12/23 18:02:52.707 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getProductCart(Authentication)
24/12/23 18:02:52.755 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "_id" : { "$in" : [{ "$oid" : "651d84c5a4cd6f49416b6fda"}, { "$oid" : "651d84c5a4cd6f49416b6fda"}]}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.SellerStore in collection: store
24/12/23 18:02:52.849 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "voucher_store_type" : "PRODUCT", "ref_id" : { "$in" : ["6532bbe5fae6d41599929246", "6535339b8d69bd44723ba6fb"]}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherStore in collection: voucher_store
24/12/23 18:02:52.995 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:02:52.996 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=[CartByStoreResponse(storeId=651d84c5a4cd6 (truncated)...]
24/12/23 18:02:52.996 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:02:52.996 | WARN  | sale_service | 389 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart
24/12/23 18:02:52.996 | WARN  | sale_service | 492 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart
24/12/23 18:02:54.785 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:02:54.785 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:02:54.785 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:02:54.785 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:02:54.885 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:02:54.885 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:02:54.981 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:02:54.981 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:02:54.981 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:02:54.981 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:02:54.981 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:02:54.981 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:02:55.140 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:02:55.140 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:02:55.140 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:02:55.141 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:02:55.141 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:02:55.141 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:02:55.141 | WARN  | sale_service | 257 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:02:55.141 | WARN  | sale_service | 257 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:02:55.141 | WARN  | sale_service | 356 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:02:55.141 | WARN  | sale_service | 356 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:02:57.780 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:02:57.780 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:02:57.781 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:02:57.781 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:02:57.877 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:02:57.877 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:02:57.969 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:02:57.969 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:02:57.970 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:02:57.973 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:02:57.974 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:02:57.975 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:02:58.016 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:02:58.016 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:02:58.016 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:02:58.016 | WARN  | sale_service | 235 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:02:58.029 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:02:58.029 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:02:58.029 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:02:58.030 | WARN  | sale_service | 249 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:03:00.797 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:03:00.797 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:03:00.797 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:03:00.797 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:03:00.897 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:03:00.903 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:03:01.014 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:03:01.014 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:03:01.015 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:03:01.015 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:03:01.015 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:03:01.015 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:03:01.063 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:03:01.063 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:03:01.063 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:03:01.063 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:03:01.063 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:03:01.063 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:03:01.063 | WARN  | sale_service | 266 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:03:01.063 | WARN  | sale_service | 266 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:03:01.710 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getProductCart(Authentication)
24/12/23 18:03:01.711 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:03:01.800 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:03:01.896 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart", parameters={}
24/12/23 18:03:01.896 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getProductCart(Authentication)
24/12/23 18:03:01.962 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "_id" : { "$in" : [{ "$oid" : "651d84c5a4cd6f49416b6fda"}, { "$oid" : "651d84c5a4cd6f49416b6fda"}]}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.SellerStore in collection: store
24/12/23 18:03:02.039 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "voucher_store_type" : "PRODUCT", "ref_id" : { "$in" : ["6532bbe5fae6d41599929246", "6535339b8d69bd44723ba6fb"]}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherStore in collection: voucher_store
24/12/23 18:03:02.201 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:03:02.201 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=[CartByStoreResponse(storeId=651d84c5a4cd6 (truncated)...]
24/12/23 18:03:02.201 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:03:02.201 | WARN  | sale_service | 400 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart
24/12/23 18:03:02.201 | WARN  | sale_service | 490 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart
24/12/23 18:03:03.800 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:03:03.802 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:03:03.803 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:03:03.804 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:03:03.897 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:03:03.899 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:03:03.992 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:03:03.992 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:03:03.992 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:03:03.992 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:03:03.992 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:03:03.992 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:03:04.044 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:03:04.044 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:03:04.044 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:03:04.044 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:03:04.044 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:03:04.044 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:03:04.044 | WARN  | sale_service | 241 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:03:04.044 | WARN  | sale_service | 240 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:03:06.791 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:03:06.791 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:03:06.792 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:03:06.792 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:03:06.897 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:03:06.898 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:03:07.004 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:03:07.004 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:03:07.004 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:03:07.005 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:03:07.005 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:03:07.005 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:03:07.058 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:03:07.058 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:03:07.059 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:03:07.059 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:03:07.059 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:03:07.059 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:03:07.059 | WARN  | sale_service | 267 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:03:07.059 | WARN  | sale_service | 267 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:03:09.781 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:03:09.781 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:03:09.782 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:03:09.782 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:03:09.884 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:03:09.884 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:03:09.989 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:03:09.989 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:03:09.989 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:03:09.990 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:03:09.991 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:03:09.991 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:03:10.039 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:03:10.040 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:03:10.041 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:03:10.041 | WARN  | sale_service | 259 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:03:10.048 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:03:10.049 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:03:10.050 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:03:10.050 | WARN  | sale_service | 267 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:03:12.780 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:03:12.781 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:03:12.781 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:03:12.781 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:03:12.880 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:03:12.882 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:03:12.973 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:03:12.973 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:03:12.973 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:03:12.976 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:03:12.976 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:03:12.976 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:03:13.023 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:03:13.023 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:03:13.023 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:03:13.023 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:03:13.023 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:03:13.023 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:03:13.023 | WARN  | sale_service | 241 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:03:13.023 | WARN  | sale_service | 241 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:03:15.786 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:03:15.787 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:03:15.789 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:03:15.790 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:03:15.890 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:03:15.890 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:03:15.981 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:03:15.981 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:03:15.982 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:03:15.985 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:03:15.985 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:03:15.985 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:03:16.028 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:03:16.028 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:03:16.028 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:03:16.028 | WARN  | sale_service | 241 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:03:16.034 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:03:16.034 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:03:16.035 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:03:16.035 | WARN  | sale_service | 247 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:03:17.326 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getProductCart(Authentication)
24/12/23 18:03:17.327 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:03:17.427 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:03:17.529 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart", parameters={}
24/12/23 18:03:17.530 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getProductCart(Authentication)
24/12/23 18:03:17.619 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "_id" : { "$in" : [{ "$oid" : "651d84c5a4cd6f49416b6fda"}, { "$oid" : "651d84c5a4cd6f49416b6fda"}]}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.SellerStore in collection: store
24/12/23 18:03:17.788 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "voucher_store_type" : "PRODUCT", "ref_id" : { "$in" : ["6532bbe5fae6d41599929246", "6535339b8d69bd44723ba6fb"]}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherStore in collection: voucher_store
24/12/23 18:03:17.959 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:03:17.959 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=[CartByStoreResponse(storeId=651d84c5a4cd6 (truncated)...]
24/12/23 18:03:17.960 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:03:17.960 | WARN  | sale_service | 533 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart
24/12/23 18:03:17.960 | WARN  | sale_service | 634 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart
24/12/23 18:03:18.786 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:03:18.786 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:03:18.787 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:03:18.787 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:03:18.879 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:03:18.883 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:03:18.972 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:03:18.972 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:03:18.973 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:03:18.986 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:03:18.987 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:03:18.989 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:03:19.048 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:03:19.048 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:03:19.049 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:03:19.050 | WARN  | sale_service | 263 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:03:19.098 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:03:19.098 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:03:19.098 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:03:19.099 | WARN  | sale_service | 216 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:03:19.099 | WARN  | sale_service | 313 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:03:21.782 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:03:21.782 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:03:21.783 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:03:21.783 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:03:22.264 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:03:22.271 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:03:22.376 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:03:22.376 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:03:22.376 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:03:22.377 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:03:22.377 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:03:22.377 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:03:22.429 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:03:22.429 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:03:22.430 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:03:22.430 | WARN  | sale_service | 647 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:03:22.481 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:03:22.481 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:03:22.482 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:03:22.482 | WARN  | sale_service | 211 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:03:22.482 | WARN  | sale_service | 699 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:03:22.495 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getProductCart(Authentication)
24/12/23 18:03:22.496 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:03:22.596 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:03:22.696 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart", parameters={}
24/12/23 18:03:22.697 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getProductCart(Authentication)
24/12/23 18:03:22.915 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "_id" : { "$in" : [{ "$oid" : "651d84c5a4cd6f49416b6fda"}, { "$oid" : "651d84c5a4cd6f49416b6fda"}]}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.SellerStore in collection: store
24/12/23 18:03:23.002 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "voucher_store_type" : "PRODUCT", "ref_id" : { "$in" : ["6532bbe5fae6d41599929246", "6535339b8d69bd44723ba6fb"]}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherStore in collection: voucher_store
24/12/23 18:03:23.254 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:03:23.255 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=[CartByStoreResponse(storeId=651d84c5a4cd6 (truncated)...]
24/12/23 18:03:23.255 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:03:23.255 | WARN  | sale_service | 658 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart
24/12/23 18:03:23.255 | WARN  | sale_service | 760 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart
24/12/23 18:03:24.786 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:03:24.787 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:03:24.787 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:03:24.788 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:03:24.884 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:03:24.888 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:03:24.981 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:03:24.982 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:03:24.982 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:03:24.986 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:03:24.986 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:03:24.987 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:03:25.028 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:03:25.029 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:03:25.029 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:03:25.029 | WARN  | sale_service | 240 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:03:25.038 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:03:25.038 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:03:25.039 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:03:25.039 | WARN  | sale_service | 252 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:03:27.501 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getProductCart(Authentication)
24/12/23 18:03:27.502 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:03:27.600 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:03:27.702 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart", parameters={}
24/12/23 18:03:27.702 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getProductCart(Authentication)
24/12/23 18:03:27.756 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "_id" : { "$in" : [{ "$oid" : "651d84c5a4cd6f49416b6fda"}, { "$oid" : "651d84c5a4cd6f49416b6fda"}]}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.SellerStore in collection: store
24/12/23 18:03:27.782 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:03:27.783 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:03:27.783 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:03:27.783 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:03:27.892 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "voucher_store_type" : "PRODUCT", "ref_id" : { "$in" : ["6532bbe5fae6d41599929246", "6535339b8d69bd44723ba6fb"]}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherStore in collection: voucher_store
24/12/23 18:03:27.924 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:03:27.931 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:03:28.053 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:03:28.053 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:03:28.053 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:03:28.054 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:03:28.054 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:03:28.054 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:03:28.091 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:03:28.091 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=[CartByStoreResponse(storeId=651d84c5a4cd6 (truncated)...]
24/12/23 18:03:28.092 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:03:28.092 | WARN  | sale_service | 491 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart
24/12/23 18:03:28.092 | WARN  | sale_service | 589 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart
24/12/23 18:03:28.112 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:03:28.112 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:03:28.112 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:03:28.112 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:03:28.113 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:03:28.113 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:03:28.113 | WARN  | sale_service | 330 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:03:28.113 | WARN  | sale_service | 330 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:03:29.242 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getProductCart(Authentication)
24/12/23 18:03:29.243 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:03:29.392 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:03:29.492 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart", parameters={}
24/12/23 18:03:29.492 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getProductCart(Authentication)
24/12/23 18:03:29.558 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "_id" : { "$in" : [{ "$oid" : "651d84c5a4cd6f49416b6fda"}, { "$oid" : "651d84c5a4cd6f49416b6fda"}]}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.SellerStore in collection: store
24/12/23 18:03:29.627 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "voucher_store_type" : "PRODUCT", "ref_id" : { "$in" : ["6532bbe5fae6d41599929246", "6535339b8d69bd44723ba6fb"]}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherStore in collection: voucher_store
24/12/23 18:03:29.906 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:03:29.906 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=[CartByStoreResponse(storeId=651d84c5a4cd6 (truncated)...]
24/12/23 18:03:29.906 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:03:29.906 | WARN  | sale_service | 513 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart
24/12/23 18:03:29.907 | WARN  | sale_service | 664 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart
24/12/23 18:03:30.786 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:03:30.786 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:03:30.786 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:03:30.786 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:03:30.877 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:03:30.881 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:03:30.977 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:03:30.977 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:03:30.977 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:03:30.977 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:03:30.978 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:03:30.978 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:03:31.030 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:03:31.030 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:03:31.030 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:03:31.030 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:03:31.030 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:03:31.030 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:03:31.030 | WARN  | sale_service | 244 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:03:31.030 | WARN  | sale_service | 244 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:03:33.787 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:03:33.787 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:03:33.788 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:03:33.788 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:03:33.920 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:03:33.920 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:03:34.012 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:03:34.013 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:03:34.013 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:03:34.016 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:03:34.016 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:03:34.017 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:03:34.059 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:03:34.059 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:03:34.060 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:03:34.060 | WARN  | sale_service | 272 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:03:34.068 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:03:34.068 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:03:34.068 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:03:34.068 | WARN  | sale_service | 280 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:03:34.722 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getProductCart(Authentication)
24/12/23 18:03:34.723 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:03:34.816 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:03:34.916 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart", parameters={}
24/12/23 18:03:34.917 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getProductCart(Authentication)
24/12/23 18:03:34.976 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "_id" : { "$in" : [{ "$oid" : "651d84c5a4cd6f49416b6fda"}, { "$oid" : "651d84c5a4cd6f49416b6fda"}]}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.SellerStore in collection: store
24/12/23 18:03:35.052 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "voucher_store_type" : "PRODUCT", "ref_id" : { "$in" : ["6532bbe5fae6d41599929246", "6535339b8d69bd44723ba6fb"]}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherStore in collection: voucher_store
24/12/23 18:03:35.222 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:03:35.222 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=[CartByStoreResponse(storeId=651d84c5a4cd6 (truncated)...]
24/12/23 18:03:35.222 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:03:35.222 | WARN  | sale_service | 405 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart
24/12/23 18:03:35.222 | WARN  | sale_service | 499 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart
24/12/23 18:03:36.785 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:03:36.786 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:03:36.787 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:03:36.787 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:03:36.879 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:03:36.885 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:03:36.970 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:03:36.970 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:03:36.971 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:03:36.980 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:03:36.980 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:03:36.980 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:03:37.021 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:03:37.021 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:03:37.021 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:03:37.021 | WARN  | sale_service | 234 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:03:37.037 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:03:37.037 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:03:37.038 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:03:37.038 | WARN  | sale_service | 251 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:03:38.595 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getProductCart(Authentication)
24/12/23 18:03:38.596 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:03:38.694 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:03:38.789 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart", parameters={}
24/12/23 18:03:38.789 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getProductCart(Authentication)
24/12/23 18:03:38.845 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "_id" : { "$in" : [{ "$oid" : "651d84c5a4cd6f49416b6fda"}, { "$oid" : "651d84c5a4cd6f49416b6fda"}]}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.SellerStore in collection: store
24/12/23 18:03:39.010 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "voucher_store_type" : "PRODUCT", "ref_id" : { "$in" : ["6532bbe5fae6d41599929246", "6535339b8d69bd44723ba6fb"]}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherStore in collection: voucher_store
24/12/23 18:03:39.204 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:03:39.204 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=[CartByStoreResponse(storeId=651d84c5a4cd6 (truncated)...]
24/12/23 18:03:39.205 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:03:39.205 | WARN  | sale_service | 510 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart
24/12/23 18:03:39.205 | WARN  | sale_service | 609 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart
24/12/23 18:03:39.205 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getProductCart(Authentication)
24/12/23 18:03:39.206 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:03:39.301 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:03:39.395 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart", parameters={}
24/12/23 18:03:39.395 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getProductCart(Authentication)
24/12/23 18:03:39.447 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "_id" : { "$in" : [{ "$oid" : "651d84c5a4cd6f49416b6fda"}, { "$oid" : "651d84c5a4cd6f49416b6fda"}]}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.SellerStore in collection: store
24/12/23 18:03:39.514 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "voucher_store_type" : "PRODUCT", "ref_id" : { "$in" : ["6532bbe5fae6d41599929246", "6535339b8d69bd44723ba6fb"]}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherStore in collection: voucher_store
24/12/23 18:03:39.655 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:03:39.655 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=[CartByStoreResponse(storeId=651d84c5a4cd6 (truncated)...]
24/12/23 18:03:39.655 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:03:39.655 | WARN  | sale_service | 355 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart
24/12/23 18:03:39.656 | WARN  | sale_service | 450 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart
24/12/23 18:03:39.789 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:03:39.789 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:03:39.789 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:03:39.789 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:03:39.882 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:03:39.889 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:03:39.978 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:03:39.978 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:03:39.978 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:03:39.990 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:03:39.990 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:03:39.991 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:03:40.029 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:03:40.029 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:03:40.029 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:03:40.029 | WARN  | sale_service | 239 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:03:40.037 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:03:40.037 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:03:40.037 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:03:40.037 | WARN  | sale_service | 248 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:03:42.790 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:03:42.791 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:03:42.791 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:03:42.792 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:03:42.893 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:03:42.910 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:03:42.995 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:03:42.996 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:03:42.996 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:03:43.005 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:03:43.005 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:03:43.005 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:03:43.041 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:03:43.041 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:03:43.042 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:03:43.042 | WARN  | sale_service | 251 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:03:43.056 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:03:43.057 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:03:43.057 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:03:43.057 | WARN  | sale_service | 265 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:03:45.805 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:03:45.808 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:03:45.817 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:03:45.818 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:03:45.912 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:03:45.915 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:03:46.006 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:03:46.006 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:03:46.007 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:03:46.014 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:03:46.015 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:03:46.015 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:03:46.054 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:03:46.054 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:03:46.055 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:03:46.055 | WARN  | sale_service | 248 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:03:46.068 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:03:46.069 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:03:46.070 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:03:46.070 | WARN  | sale_service | 253 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:03:48.716 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getProductCart(Authentication)
24/12/23 18:03:48.716 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:03:48.783 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:03:48.783 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:03:48.784 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:03:48.784 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:03:48.820 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:03:48.905 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:03:48.905 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:03:48.915 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart", parameters={}
24/12/23 18:03:48.915 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getProductCart(Authentication)
24/12/23 18:03:48.969 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "_id" : { "$in" : [{ "$oid" : "651d84c5a4cd6f49416b6fda"}, { "$oid" : "651d84c5a4cd6f49416b6fda"}]}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.SellerStore in collection: store
24/12/23 18:03:49.005 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:03:49.005 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:03:49.006 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:03:49.006 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:03:49.006 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:03:49.006 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:03:49.047 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "voucher_store_type" : "PRODUCT", "ref_id" : { "$in" : ["6532bbe5fae6d41599929246", "6535339b8d69bd44723ba6fb"]}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherStore in collection: voucher_store
24/12/23 18:03:49.052 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:03:49.052 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:03:49.052 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:03:49.052 | WARN  | sale_service | 269 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:03:49.057 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:03:49.057 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:03:49.058 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:03:49.058 | WARN  | sale_service | 275 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:03:49.213 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:03:49.213 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=[CartByStoreResponse(storeId=651d84c5a4cd6 (truncated)...]
24/12/23 18:03:49.213 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:03:49.213 | WARN  | sale_service | 393 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart
24/12/23 18:03:49.214 | WARN  | sale_service | 498 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart
24/12/23 18:03:51.781 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:03:51.781 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:03:51.781 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:03:51.781 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:03:51.885 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:03:51.885 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:03:51.978 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:03:51.979 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:03:51.979 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:03:51.985 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:03:51.986 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:03:51.986 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:03:52.028 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:03:52.028 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:03:52.028 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:03:52.028 | WARN  | sale_service | 247 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:03:52.037 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:03:52.037 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:03:52.037 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:03:52.038 | WARN  | sale_service | 256 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:03:54.250 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getProductCart(Authentication)
24/12/23 18:03:54.250 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:03:54.350 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:03:54.465 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart", parameters={}
24/12/23 18:03:54.465 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getProductCart(Authentication)
24/12/23 18:03:54.520 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "_id" : { "$in" : [{ "$oid" : "651d84c5a4cd6f49416b6fda"}, { "$oid" : "651d84c5a4cd6f49416b6fda"}]}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.SellerStore in collection: store
24/12/23 18:03:54.612 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "voucher_store_type" : "PRODUCT", "ref_id" : { "$in" : ["6532bbe5fae6d41599929246", "6535339b8d69bd44723ba6fb"]}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherStore in collection: voucher_store
24/12/23 18:03:54.769 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:03:54.770 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=[CartByStoreResponse(storeId=651d84c5a4cd6 (truncated)...]
24/12/23 18:03:54.770 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:03:54.770 | WARN  | sale_service | 421 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart
24/12/23 18:03:54.770 | WARN  | sale_service | 519 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart
24/12/23 18:03:54.897 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:03:54.898 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:03:54.899 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:03:54.899 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:03:54.996 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:03:54.996 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:03:55.092 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:03:55.092 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:03:55.093 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:03:55.094 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:03:55.095 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:03:55.095 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:03:55.141 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:03:55.141 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:03:55.141 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:03:55.142 | WARN  | sale_service | 243 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:03:55.150 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:03:55.150 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:03:55.151 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:03:55.151 | WARN  | sale_service | 252 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:03:55.822 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getProductCart(Authentication)
24/12/23 18:03:55.823 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:03:55.919 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:03:56.016 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart", parameters={}
24/12/23 18:03:56.016 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getProductCart(Authentication)
24/12/23 18:03:56.082 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "_id" : { "$in" : [{ "$oid" : "651d84c5a4cd6f49416b6fda"}, { "$oid" : "651d84c5a4cd6f49416b6fda"}]}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.SellerStore in collection: store
24/12/23 18:03:56.156 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "voucher_store_type" : "PRODUCT", "ref_id" : { "$in" : ["6532bbe5fae6d41599929246", "6535339b8d69bd44723ba6fb"]}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherStore in collection: voucher_store
24/12/23 18:03:56.337 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:03:56.338 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=[CartByStoreResponse(storeId=651d84c5a4cd6 (truncated)...]
24/12/23 18:03:56.338 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:03:56.338 | WARN  | sale_service | 418 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart
24/12/23 18:03:56.338 | WARN  | sale_service | 515 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart
24/12/23 18:03:57.459 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getProductCart(Authentication)
24/12/23 18:03:57.459 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:03:57.558 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:03:57.654 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart", parameters={}
24/12/23 18:03:57.654 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getProductCart(Authentication)
24/12/23 18:03:57.707 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "_id" : { "$in" : [{ "$oid" : "651d84c5a4cd6f49416b6fda"}, { "$oid" : "651d84c5a4cd6f49416b6fda"}]}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.SellerStore in collection: store
24/12/23 18:03:57.784 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:03:57.784 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:03:57.785 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:03:57.785 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:03:57.785 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "voucher_store_type" : "PRODUCT", "ref_id" : { "$in" : ["6532bbe5fae6d41599929246", "6535339b8d69bd44723ba6fb"]}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherStore in collection: voucher_store
24/12/23 18:03:57.878 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:03:57.878 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:03:57.939 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:03:57.940 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=[CartByStoreResponse(storeId=651d84c5a4cd6 (truncated)...]
24/12/23 18:03:57.940 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:03:57.940 | WARN  | sale_service | 383 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart
24/12/23 18:03:57.940 | WARN  | sale_service | 480 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart
24/12/23 18:03:57.971 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:03:57.972 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:03:57.972 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:03:57.974 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:03:57.974 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:03:57.974 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:03:58.020 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:03:58.020 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:03:58.020 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:03:58.021 | WARN  | sale_service | 235 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:03:58.021 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:03:58.022 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:03:58.022 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:03:58.023 | WARN  | sale_service | 237 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:03:58.496 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getProductCart(Authentication)
24/12/23 18:03:58.497 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:03:58.594 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:03:58.689 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart", parameters={}
24/12/23 18:03:58.689 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getProductCart(Authentication)
24/12/23 18:03:59.033 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "_id" : { "$in" : [{ "$oid" : "651d84c5a4cd6f49416b6fda"}, { "$oid" : "651d84c5a4cd6f49416b6fda"}]}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.SellerStore in collection: store
24/12/23 18:03:59.129 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "voucher_store_type" : "PRODUCT", "ref_id" : { "$in" : ["6532bbe5fae6d41599929246", "6535339b8d69bd44723ba6fb"]}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherStore in collection: voucher_store
24/12/23 18:03:59.306 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:03:59.307 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=[CartByStoreResponse(storeId=651d84c5a4cd6 (truncated)...]
24/12/23 18:03:59.307 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:03:59.307 | WARN  | sale_service | 712 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart
24/12/23 18:03:59.307 | WARN  | sale_service | 809 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart
24/12/23 18:04:00.797 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:04:00.798 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:04:00.799 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:04:00.800 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:04:00.908 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:04:00.911 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:04:01.009 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:04:01.010 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:04:01.011 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:04:01.018 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:04:01.019 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:04:01.021 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:04:01.062 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:04:01.062 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:04:01.063 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:04:01.063 | WARN  | sale_service | 264 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:04:01.078 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:04:01.078 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:04:01.078 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:04:01.078 | WARN  | sale_service | 278 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:04:02.921 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getProductCart(Authentication)
24/12/23 18:04:02.921 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:04:03.021 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:04:03.112 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart", parameters={}
24/12/23 18:04:03.112 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getProductCart(Authentication)
24/12/23 18:04:03.173 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "_id" : { "$in" : [{ "$oid" : "651d84c5a4cd6f49416b6fda"}, { "$oid" : "651d84c5a4cd6f49416b6fda"}]}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.SellerStore in collection: store
24/12/23 18:04:03.253 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "voucher_store_type" : "PRODUCT", "ref_id" : { "$in" : ["6532bbe5fae6d41599929246", "6535339b8d69bd44723ba6fb"]}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherStore in collection: voucher_store
24/12/23 18:04:03.408 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:04:03.408 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=[CartByStoreResponse(storeId=651d84c5a4cd6 (truncated)...]
24/12/23 18:04:03.408 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:04:03.409 | WARN  | sale_service | 387 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart
24/12/23 18:04:03.409 | WARN  | sale_service | 488 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart
24/12/23 18:04:03.787 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:04:03.787 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:04:03.788 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:04:03.788 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:04:03.886 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:04:03.887 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:04:03.976 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:04:03.976 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:04:03.976 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:04:03.982 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:04:03.982 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:04:03.982 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:04:04.023 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:04:04.023 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:04:04.023 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:04:04.023 | WARN  | sale_service | 235 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:04:04.029 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:04:04.029 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:04:04.029 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:04:04.029 | WARN  | sale_service | 241 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:04:04.379 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getProductCart(Authentication)
24/12/23 18:04:04.380 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:04:04.476 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:04:04.579 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart", parameters={}
24/12/23 18:04:04.580 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getProductCart(Authentication)
24/12/23 18:04:04.637 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "_id" : { "$in" : [{ "$oid" : "651d84c5a4cd6f49416b6fda"}, { "$oid" : "651d84c5a4cd6f49416b6fda"}]}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.SellerStore in collection: store
24/12/23 18:04:04.741 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "voucher_store_type" : "PRODUCT", "ref_id" : { "$in" : ["6532bbe5fae6d41599929246", "6535339b8d69bd44723ba6fb"]}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherStore in collection: voucher_store
24/12/23 18:04:04.904 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:04:04.905 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=[CartByStoreResponse(storeId=651d84c5a4cd6 (truncated)...]
24/12/23 18:04:04.905 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:04:04.906 | WARN  | sale_service | 430 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart
24/12/23 18:04:04.906 | WARN  | sale_service | 526 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart
24/12/23 18:04:06.438 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getProductCart(Authentication)
24/12/23 18:04:06.440 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:04:06.537 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:04:06.631 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart", parameters={}
24/12/23 18:04:06.632 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getProductCart(Authentication)
24/12/23 18:04:06.689 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "_id" : { "$in" : [{ "$oid" : "651d84c5a4cd6f49416b6fda"}, { "$oid" : "651d84c5a4cd6f49416b6fda"}]}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.SellerStore in collection: store
24/12/23 18:04:06.768 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "voucher_store_type" : "PRODUCT", "ref_id" : { "$in" : ["6532bbe5fae6d41599929246", "6535339b8d69bd44723ba6fb"]}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherStore in collection: voucher_store
24/12/23 18:04:06.789 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:04:06.789 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:04:06.789 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:04:06.789 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:04:06.890 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:04:06.891 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:04:06.906 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:04:06.906 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=[CartByStoreResponse(storeId=651d84c5a4cd6 (truncated)...]
24/12/23 18:04:06.906 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:04:06.907 | WARN  | sale_service | 369 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart
24/12/23 18:04:06.907 | WARN  | sale_service | 468 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart
24/12/23 18:04:06.985 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:04:06.985 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:04:06.986 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:04:06.987 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:04:06.988 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:04:06.988 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:04:07.031 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:04:07.031 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:04:07.031 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:04:07.032 | WARN  | sale_service | 242 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:04:07.037 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:04:07.037 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:04:07.037 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:04:07.037 | WARN  | sale_service | 247 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:04:09.795 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:04:09.795 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:04:09.796 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:04:09.796 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:04:09.897 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:04:09.902 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:04:09.996 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getProductCart(Authentication)
24/12/23 18:04:09.997 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:04:09.997 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:04:09.997 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:04:09.998 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:04:10.003 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:04:10.003 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:04:10.004 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:04:10.052 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:04:10.052 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:04:10.053 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:04:10.053 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:04:10.053 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:04:10.053 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:04:10.053 | WARN  | sale_service | 257 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:04:10.053 | WARN  | sale_service | 256 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:04:10.094 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:04:10.191 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart", parameters={}
24/12/23 18:04:10.192 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getProductCart(Authentication)
24/12/23 18:04:10.243 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "_id" : { "$in" : [{ "$oid" : "651d84c5a4cd6f49416b6fda"}, { "$oid" : "651d84c5a4cd6f49416b6fda"}]}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.SellerStore in collection: store
24/12/23 18:04:10.317 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "voucher_store_type" : "PRODUCT", "ref_id" : { "$in" : ["6532bbe5fae6d41599929246", "6535339b8d69bd44723ba6fb"]}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherStore in collection: voucher_store
24/12/23 18:04:10.460 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:04:10.460 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=[CartByStoreResponse(storeId=651d84c5a4cd6 (truncated)...]
24/12/23 18:04:10.460 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:04:10.461 | WARN  | sale_service | 368 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart
24/12/23 18:04:10.461 | WARN  | sale_service | 465 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart
24/12/23 18:04:12.284 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getProductCart(Authentication)
24/12/23 18:04:12.285 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:04:12.376 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:04:12.485 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart", parameters={}
24/12/23 18:04:12.485 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getProductCart(Authentication)
24/12/23 18:04:12.547 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "_id" : { "$in" : [{ "$oid" : "651d84c5a4cd6f49416b6fda"}, { "$oid" : "651d84c5a4cd6f49416b6fda"}]}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.SellerStore in collection: store
24/12/23 18:04:12.626 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "voucher_store_type" : "PRODUCT", "ref_id" : { "$in" : ["6532bbe5fae6d41599929246", "6535339b8d69bd44723ba6fb"]}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherStore in collection: voucher_store
24/12/23 18:04:12.779 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:04:12.780 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=[CartByStoreResponse(storeId=651d84c5a4cd6 (truncated)...]
24/12/23 18:04:12.780 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:04:12.780 | WARN  | sale_service | 405 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart
24/12/23 18:04:12.780 | WARN  | sale_service | 496 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart
24/12/23 18:04:12.783 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:04:12.783 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:04:12.783 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:04:12.783 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:04:12.876 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:04:12.879 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:04:12.972 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:04:12.972 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:04:12.972 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:04:12.972 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:04:12.973 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:04:12.973 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:04:13.020 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:04:13.020 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:04:13.020 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:04:13.020 | WARN  | sale_service | 236 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:04:13.021 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:04:13.021 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:04:13.021 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:04:13.021 | WARN  | sale_service | 237 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:04:15.799 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:04:15.799 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:04:15.800 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:04:15.800 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:04:15.900 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:04:15.904 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:04:15.999 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:04:15.999 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:04:16.000 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:04:16.001 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:04:16.001 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:04:16.001 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:04:16.049 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:04:16.049 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:04:16.049 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:04:16.049 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:04:16.050 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:04:16.050 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:04:16.050 | WARN  | sale_service | 250 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:04:16.050 | WARN  | sale_service | 250 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:04:18.585 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getProductCart(Authentication)
24/12/23 18:04:18.587 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:04:18.685 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:04:18.780 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:04:18.780 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:04:18.780 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:04:18.780 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:04:18.832 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart", parameters={}
24/12/23 18:04:18.832 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getProductCart(Authentication)
24/12/23 18:04:18.906 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "_id" : { "$in" : [{ "$oid" : "651d84c5a4cd6f49416b6fda"}, { "$oid" : "651d84c5a4cd6f49416b6fda"}]}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.SellerStore in collection: store
24/12/23 18:04:18.910 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:04:18.914 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:04:18.988 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "voucher_store_type" : "PRODUCT", "ref_id" : { "$in" : ["6532bbe5fae6d41599929246", "6535339b8d69bd44723ba6fb"]}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherStore in collection: voucher_store
24/12/23 18:04:19.008 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:04:19.008 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:04:19.009 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:04:19.009 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:04:19.009 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:04:19.009 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:04:19.061 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:04:19.061 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:04:19.061 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:04:19.061 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:04:19.061 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:04:19.062 | WARN  | sale_service | 281 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:04:19.062 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:04:19.062 | WARN  | sale_service | 281 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:04:19.163 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:04:19.163 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=[CartByStoreResponse(storeId=651d84c5a4cd6 (truncated)...]
24/12/23 18:04:19.163 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:04:19.163 | WARN  | sale_service | 478 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart
24/12/23 18:04:19.163 | WARN  | sale_service | 576 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart
24/12/23 18:04:19.884 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getProductCart(Authentication)
24/12/23 18:04:19.885 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:04:19.982 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:04:20.080 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart", parameters={}
24/12/23 18:04:20.080 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getProductCart(Authentication)
24/12/23 18:04:20.138 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "_id" : { "$in" : [{ "$oid" : "651d84c5a4cd6f49416b6fda"}, { "$oid" : "651d84c5a4cd6f49416b6fda"}]}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.SellerStore in collection: store
24/12/23 18:04:20.226 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "voucher_store_type" : "PRODUCT", "ref_id" : { "$in" : ["6532bbe5fae6d41599929246", "6535339b8d69bd44723ba6fb"]}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherStore in collection: voucher_store
24/12/23 18:04:20.374 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:04:20.375 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=[CartByStoreResponse(storeId=651d84c5a4cd6 (truncated)...]
24/12/23 18:04:20.375 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:04:20.375 | WARN  | sale_service | 393 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart
24/12/23 18:04:20.375 | WARN  | sale_service | 491 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart
24/12/23 18:04:21.790 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:04:21.791 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:04:21.793 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:04:21.793 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:04:21.892 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:04:21.915 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:04:21.993 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:04:21.993 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:04:21.994 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:04:22.029 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:04:22.029 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:04:22.030 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:04:22.055 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:04:22.055 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:04:22.056 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:04:22.056 | WARN  | sale_service | 264 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:04:22.083 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:04:22.083 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:04:22.083 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:04:22.083 | WARN  | sale_service | 290 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:04:24.785 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:04:24.786 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:04:24.786 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:04:24.786 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:04:24.898 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:04:24.898 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:04:24.998 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:04:24.998 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:04:24.998 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:04:24.998 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:04:24.998 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:04:24.999 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:04:25.056 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:04:25.057 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:04:25.057 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:04:25.057 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:04:25.057 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:04:25.057 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:04:25.057 | WARN  | sale_service | 271 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:04:25.057 | WARN  | sale_service | 271 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:04:27.794 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:04:27.795 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:04:27.796 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:04:27.796 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:04:27.894 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:04:27.894 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:04:27.986 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:04:27.987 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:04:27.988 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:04:27.990 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:04:27.990 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:04:27.990 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:04:28.036 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:04:28.036 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:04:28.036 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:04:28.036 | WARN  | sale_service | 241 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:04:28.036 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:04:28.036 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:04:28.037 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:04:28.037 | WARN  | sale_service | 242 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:04:28.340 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getProductCart(Authentication)
24/12/23 18:04:28.341 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:04:28.435 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:04:28.557 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart", parameters={}
24/12/23 18:04:28.557 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getProductCart(Authentication)
24/12/23 18:04:28.611 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "_id" : { "$in" : [{ "$oid" : "651d84c5a4cd6f49416b6fda"}, { "$oid" : "651d84c5a4cd6f49416b6fda"}]}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.SellerStore in collection: store
24/12/23 18:04:28.692 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "voucher_store_type" : "PRODUCT", "ref_id" : { "$in" : ["6532bbe5fae6d41599929246", "6535339b8d69bd44723ba6fb"]}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherStore in collection: voucher_store
24/12/23 18:04:28.859 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:04:28.859 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=[CartByStoreResponse(storeId=651d84c5a4cd6 (truncated)...]
24/12/23 18:04:28.859 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:04:28.860 | WARN  | sale_service | 425 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart
24/12/23 18:04:28.860 | WARN  | sale_service | 520 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart
24/12/23 18:04:30.785 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:04:30.786 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:04:30.786 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:04:30.786 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:04:30.889 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:04:30.889 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:04:30.994 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:04:30.994 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:04:30.995 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:04:30.996 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:04:30.996 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:04:30.998 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:04:31.045 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:04:31.045 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:04:31.046 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:04:31.047 | WARN  | sale_service | 261 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:04:31.049 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:04:31.049 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:04:31.050 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:04:31.051 | WARN  | sale_service | 265 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:04:33.159 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.VoucherController#getUserVoucher(Authentication, String)
24/12/23 18:04:33.160 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:04:33.262 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:04:33.356 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/voucher/user/voucher?productId=6532bbe5fae6d41599929246", parameters={masked}
24/12/23 18:04:33.356 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.VoucherController#getUserVoucher(Authentication, String)
24/12/23 18:04:33.371 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "voucher_store_type" : "PRODUCT", "ref_id" : "6532bbe5fae6d41599929246"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherStore in collection: voucher_store
24/12/23 18:04:33.425 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "voucher_store_type" : "STORE", "ref_id" : "651d84c5a4cd6f49416b6fda"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherStore in collection: voucher_store
24/12/23 18:04:33.475 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "owner_id" : "lambro25102001", "voucher_store_id" : "65846511d48c0b1c77d1ee61", "voucher_code_status" : "OWNER", "expire_time" : { "$gt" : 1703415873475}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherCode in collection: voucher_code
24/12/23 18:04:33.542 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "owner_id" : "lambro25102001", "voucher_store_id" : "6587e666208da64222b26afc", "voucher_code_status" : "OWNER", "expire_time" : { "$gt" : 1703415873542}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherCode in collection: voucher_code
24/12/23 18:04:33.597 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:04:33.598 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=[UserVoucherResponse(voucherStoreName=Giảm (truncated)...]
24/12/23 18:04:33.598 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:04:33.598 | WARN  | sale_service | 336 | AuthTokenFilter.java: end request ==> GET  /api/v1/voucher/user/voucher?productId=6532bbe5fae6d41599929246
24/12/23 18:04:33.599 | WARN  | sale_service | 439 | AuthTokenFilter.java: end request ==> GET  /api/v1/voucher/user/voucher?productId=6532bbe5fae6d41599929246
24/12/23 18:04:33.779 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:04:33.779 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:04:33.780 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:04:33.780 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:04:33.880 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:04:33.880 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:04:33.984 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:04:33.984 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:04:33.984 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:04:33.984 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:04:33.984 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:04:33.984 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:04:34.036 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:04:34.036 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:04:34.036 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:04:34.036 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:04:34.036 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:04:34.036 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:04:34.036 | WARN  | sale_service | 257 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:04:34.036 | WARN  | sale_service | 257 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:04:36.784 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:04:36.784 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:04:36.785 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:04:36.785 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:04:36.880 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:04:36.880 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:04:36.980 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:04:36.980 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:04:36.980 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:04:36.980 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:04:36.981 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:04:36.981 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:04:37.034 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:04:37.034 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:04:37.034 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:04:37.034 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:04:37.034 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:04:37.034 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:04:37.034 | WARN  | sale_service | 249 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:04:37.034 | WARN  | sale_service | 249 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:04:38.845 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#updateCart(Authentication, String, Long, String)
24/12/23 18:04:38.847 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#updateCart(Authentication, String, Long, String)
24/12/23 18:04:38.847 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:04:38.947 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:04:39.042 | DEBUG | sale_service | 0 | LogFormatUtils.java: PUT "/api/v1/cart/65880e74a10d1b5728a693ba?quantity=2&voucherCodeId=65869a7f208da64222b26ab4", parameters={masked}
24/12/23 18:04:39.042 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#updateCart(Authentication, String, Long, String)
24/12/23 18:04:39.043 | DEBUG | sale_service | 0 | MongoTemplate.java: findOne using query: { "id" : { "$oid" : "65880e74a10d1b5728a693ba"}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:04:39.043 | DEBUG | sale_service | 0 | MongoTemplate.java: findOne using query: { "_id" : { "$oid" : "65880e74a10d1b5728a693ba"}} fields: {} in db.collection: db-salespage.cart
24/12/23 18:04:39.114 | DEBUG | sale_service | 0 | MongoTemplate.java: findOne using query: { "id" : { "$oid" : "6532bc2ffae6d41599929247"}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.ProductDetail in collection: product_detail
24/12/23 18:04:39.115 | DEBUG | sale_service | 0 | MongoTemplate.java: findOne using query: { "_id" : { "$oid" : "6532bc2ffae6d41599929247"}} fields: {} in db.collection: db-salespage.product_detail
24/12/23 18:04:39.210 | DEBUG | sale_service | 0 | MongoTemplate.java: findOne using query: { "id" : { "$oid" : "65869a7f208da64222b26ab4"}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherCode in collection: voucher_code
24/12/23 18:04:39.210 | DEBUG | sale_service | 0 | MongoTemplate.java: findOne using query: { "_id" : { "$oid" : "65869a7f208da64222b26ab4"}} fields: {} in db.collection: db-salespage.voucher_code
24/12/23 18:04:39.313 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "_id" : { "$oid" : "65846511d48c0b1c77d1ee61"}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherStore in collection: voucher_store
24/12/23 18:04:39.378 | DEBUG | sale_service | 0 | MongoTemplate.java: Saving Document containing fields: [_id, product_detail_id, product_name, username, voucher_code_id, store_id, voucher_info, quantity, created_at, updated_at, _class]
24/12/23 18:04:39.469 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:04:39.469 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=Cập nhật thành công, data=null)]
24/12/23 18:04:39.469 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:04:39.469 | WARN  | sale_service | 521 | AuthTokenFilter.java: end request ==> PUT  /api/v1/cart/65880e74a10d1b5728a693ba?quantity=2&voucherCodeId=65869a7f208da64222b26ab4
24/12/23 18:04:39.469 | WARN  | sale_service | 622 | AuthTokenFilter.java: end request ==> PUT  /api/v1/cart/65880e74a10d1b5728a693ba?quantity=2&voucherCodeId=65869a7f208da64222b26ab4
24/12/23 18:04:39.473 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getProductCart(Authentication)
24/12/23 18:04:39.474 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:04:39.579 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:04:39.682 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart", parameters={}
24/12/23 18:04:39.682 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getProductCart(Authentication)
24/12/23 18:04:39.699 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:04:39.779 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:04:39.779 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:04:39.780 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:04:39.780 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:04:39.853 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "_id" : { "$in" : [{ "$oid" : "651d84c5a4cd6f49416b6fda"}, { "$oid" : "651d84c5a4cd6f49416b6fda"}]}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.SellerStore in collection: store
24/12/23 18:04:39.890 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:04:39.890 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:04:39.951 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "voucher_store_type" : "PRODUCT", "ref_id" : { "$in" : ["6532bbe5fae6d41599929246", "6535339b8d69bd44723ba6fb"]}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherStore in collection: voucher_store
24/12/23 18:04:39.989 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:04:39.990 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:04:39.990 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:04:39.990 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:04:39.990 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:04:39.991 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:04:40.052 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:04:40.052 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:04:40.053 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:04:40.053 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:04:40.053 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:04:40.053 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:04:40.053 | WARN  | sale_service | 274 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:04:40.053 | WARN  | sale_service | 274 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:04:40.142 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:04:40.143 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=[CartByStoreResponse(storeId=651d84c5a4cd6 (truncated)...]
24/12/23 18:04:40.143 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:04:40.143 | WARN  | sale_service | 564 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart
24/12/23 18:04:40.143 | WARN  | sale_service | 669 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart
24/12/23 18:04:42.795 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:04:42.797 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:04:42.798 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:04:42.800 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:04:42.894 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:04:42.896 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:04:42.990 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:04:42.991 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:04:42.991 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:04:42.997 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:04:42.997 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:04:42.998 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:04:43.044 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:04:43.045 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:04:43.045 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:04:43.046 | WARN  | sale_service | 248 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:04:43.051 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:04:43.052 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:04:43.053 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:04:43.053 | WARN  | sale_service | 257 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:04:45.801 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:04:45.802 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:04:45.803 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:04:45.803 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:04:45.909 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:04:45.920 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:04:46.023 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:04:46.023 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:04:46.024 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:04:46.024 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:04:46.024 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:04:46.024 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:04:46.074 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:04:46.074 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:04:46.075 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:04:46.076 | WARN  | sale_service | 274 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:04:46.077 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:04:46.078 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:04:46.079 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:04:46.080 | WARN  | sale_service | 278 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:04:48.787 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:04:48.787 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:04:48.788 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:04:48.788 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:04:48.889 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:04:48.889 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:04:48.985 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:04:48.985 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:04:48.986 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:04:48.987 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:04:48.987 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:04:48.988 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:04:49.036 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:04:49.036 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:04:49.036 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:04:49.036 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:04:49.036 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:04:49.036 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:04:49.036 | WARN  | sale_service | 249 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:04:49.036 | WARN  | sale_service | 249 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:04:49.692 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#updateCart(Authentication, String, Long, String)
24/12/23 18:04:49.693 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:04:49.793 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:04:49.890 | DEBUG | sale_service | 0 | LogFormatUtils.java: PUT "/api/v1/cart/65880e74a10d1b5728a693ba?quantity=2&voucherCodeId=65869a7f208da64222b26ab4", parameters={masked}
24/12/23 18:04:49.890 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#updateCart(Authentication, String, Long, String)
24/12/23 18:04:49.891 | DEBUG | sale_service | 0 | MongoTemplate.java: findOne using query: { "id" : { "$oid" : "65880e74a10d1b5728a693ba"}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:04:49.891 | DEBUG | sale_service | 0 | MongoTemplate.java: findOne using query: { "_id" : { "$oid" : "65880e74a10d1b5728a693ba"}} fields: {} in db.collection: db-salespage.cart
24/12/23 18:04:50.002 | DEBUG | sale_service | 0 | MongoTemplate.java: Saving Document containing fields: [_id, product_detail_id, product_name, username, voucher_code_id, store_id, voucher_info, quantity, created_at, updated_at, _class]
24/12/23 18:04:50.081 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:04:50.082 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=Cập nhật thành công, data=null)]
24/12/23 18:04:50.082 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:04:50.082 | WARN  | sale_service | 289 | AuthTokenFilter.java: end request ==> PUT  /api/v1/cart/65880e74a10d1b5728a693ba?quantity=2&voucherCodeId=65869a7f208da64222b26ab4
24/12/23 18:04:50.082 | WARN  | sale_service | 389 | AuthTokenFilter.java: end request ==> PUT  /api/v1/cart/65880e74a10d1b5728a693ba?quantity=2&voucherCodeId=65869a7f208da64222b26ab4
24/12/23 18:04:50.085 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getProductCart(Authentication)
24/12/23 18:04:50.086 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:04:50.184 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:04:50.290 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart", parameters={}
24/12/23 18:04:50.290 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getProductCart(Authentication)
24/12/23 18:04:50.302 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:04:50.411 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "_id" : { "$in" : [{ "$oid" : "651d84c5a4cd6f49416b6fda"}, { "$oid" : "651d84c5a4cd6f49416b6fda"}]}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.SellerStore in collection: store
24/12/23 18:04:50.498 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "voucher_store_type" : "PRODUCT", "ref_id" : { "$in" : ["6532bbe5fae6d41599929246", "6535339b8d69bd44723ba6fb"]}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherStore in collection: voucher_store
24/12/23 18:04:50.659 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:04:50.660 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=[CartByStoreResponse(storeId=651d84c5a4cd6 (truncated)...]
24/12/23 18:04:50.660 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:04:50.661 | WARN  | sale_service | 476 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart
24/12/23 18:04:50.661 | WARN  | sale_service | 576 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart
24/12/23 18:04:51.786 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:04:51.787 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:04:51.788 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:04:51.789 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:04:51.897 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:04:51.897 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:04:51.993 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:04:51.993 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:04:51.993 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:04:51.998 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:04:51.998 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:04:51.998 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:04:52.042 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:04:52.042 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:04:52.042 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:04:52.042 | WARN  | sale_service | 254 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:04:52.054 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:04:52.054 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:04:52.055 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:04:52.055 | WARN  | sale_service | 268 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:04:54.796 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:04:54.797 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:04:54.798 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:04:54.798 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:04:54.904 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:04:54.904 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:04:55.003 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:04:55.003 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:04:55.003 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:04:55.006 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:04:55.007 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:04:55.007 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:04:55.052 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:04:55.053 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:04:55.053 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:04:55.053 | WARN  | sale_service | 255 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:04:55.067 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:04:55.067 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:04:55.068 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:04:55.068 | WARN  | sale_service | 270 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:04:57.806 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:04:57.809 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:04:57.813 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:04:57.814 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:04:57.905 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:04:57.915 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:04:58.001 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:04:58.001 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:04:58.001 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:04:58.007 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:04:58.007 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:04:58.008 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:04:58.049 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:04:58.050 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:04:58.050 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:04:58.051 | WARN  | sale_service | 242 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:04:58.062 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:04:58.063 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:04:58.064 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:04:58.064 | WARN  | sale_service | 249 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:05:00.793 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:05:00.793 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:05:00.793 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:05:00.793 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:05:00.918 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:05:00.924 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:05:01.056 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:05:01.056 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:05:01.056 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:05:01.057 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:05:01.058 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:05:01.059 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:05:01.122 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:05:01.123 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:05:01.123 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:05:01.123 | WARN  | sale_service | 205 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:05:01.123 | WARN  | sale_service | 330 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:05:01.127 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:05:01.127 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:05:01.128 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:05:01.128 | WARN  | sale_service | 205 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:05:01.128 | WARN  | sale_service | 335 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:05:03.801 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:05:03.802 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:05:03.803 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:05:03.803 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:05:03.917 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:05:03.917 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:05:04.019 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:05:04.019 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:05:04.019 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:05:04.019 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:05:04.019 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:05:04.019 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:05:04.070 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:05:04.070 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:05:04.070 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:05:04.070 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:05:04.070 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:05:04.070 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:05:04.070 | WARN  | sale_service | 267 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:05:04.070 | WARN  | sale_service | 267 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:05:06.807 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:05:06.809 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:05:06.809 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:05:06.810 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:05:06.912 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:05:06.912 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:05:07.009 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:05:07.010 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:05:07.011 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:05:07.022 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:05:07.022 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:05:07.023 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:05:07.064 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:05:07.065 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:05:07.065 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:05:07.065 | WARN  | sale_service | 255 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:05:07.086 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:05:07.086 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:05:07.087 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:05:07.087 | WARN  | sale_service | 278 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:05:09.792 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:05:09.792 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:05:09.794 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:05:09.794 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:05:09.898 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:05:09.898 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:05:09.997 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:05:09.997 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:05:09.997 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:05:09.997 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:05:09.998 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:05:09.998 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:05:10.055 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:05:10.055 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:05:10.055 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:05:10.055 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:05:10.055 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:05:10.055 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:05:10.055 | WARN  | sale_service | 261 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:05:10.055 | WARN  | sale_service | 261 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:05:12.794 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:05:12.795 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:05:12.797 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:05:12.797 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:05:12.924 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:05:12.929 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:05:13.025 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:05:13.025 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:05:13.026 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:05:13.031 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:05:13.032 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:05:13.033 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:05:13.076 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:05:13.077 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:05:13.078 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:05:13.078 | WARN  | sale_service | 282 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:05:13.090 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:05:13.091 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:05:13.092 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:05:13.092 | WARN  | sale_service | 295 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:05:15.801 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:05:15.803 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:05:15.803 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:05:15.805 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:05:15.900 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:05:15.900 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:05:15.996 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:05:15.996 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:05:15.997 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:05:15.997 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:05:15.997 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:05:15.998 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:05:16.047 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:05:16.048 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:05:16.049 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:05:16.049 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:05:16.049 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:05:16.049 | WARN  | sale_service | 247 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:05:16.050 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:05:16.051 | WARN  | sale_service | 246 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:05:18.811 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:05:18.811 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:05:18.814 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:05:18.814 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:05:18.915 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:05:18.915 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:05:19.013 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:05:19.014 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:05:19.014 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:05:19.017 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:05:19.018 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:05:19.018 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:05:19.067 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:05:19.067 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:05:19.067 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:05:19.068 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:05:19.068 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:05:19.069 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:05:19.069 | WARN  | sale_service | 257 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:05:19.069 | WARN  | sale_service | 257 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:05:21.792 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:05:21.793 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:05:21.795 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:05:21.796 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:05:21.897 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:05:21.897 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:05:21.997 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:05:21.997 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:05:21.998 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:05:22.002 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:05:22.002 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:05:22.003 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:05:22.052 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:05:22.052 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:05:22.053 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:05:22.053 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:05:22.054 | WARN  | sale_service | 261 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:05:22.054 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:05:22.054 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:05:22.055 | WARN  | sale_service | 261 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:05:24.797 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:05:24.800 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:05:24.800 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:05:24.802 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:05:24.920 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:05:24.920 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:05:25.032 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:05:25.032 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:05:25.032 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:05:25.032 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:05:25.032 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:05:25.033 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:05:25.088 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:05:25.089 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:05:25.089 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:05:25.089 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:05:25.089 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:05:25.090 | WARN  | sale_service | 291 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:05:25.090 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:05:25.090 | WARN  | sale_service | 288 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:05:27.790 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:05:27.791 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:05:27.793 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:05:27.793 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:05:27.894 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:05:27.898 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:05:27.989 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:05:27.989 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:05:27.990 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:05:27.995 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:05:27.995 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:05:27.996 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:05:28.038 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:05:28.038 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:05:28.039 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:05:28.039 | WARN  | sale_service | 247 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:05:28.060 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:05:28.060 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:05:28.061 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:05:28.061 | WARN  | sale_service | 269 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:05:30.794 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:05:30.795 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:05:30.797 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:05:30.797 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:05:30.906 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:05:30.906 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:05:31.006 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:05:31.006 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:05:31.007 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:05:31.015 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:05:31.016 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:05:31.016 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:05:31.058 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:05:31.059 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:05:31.059 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:05:31.060 | WARN  | sale_service | 264 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:05:31.077 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:05:31.078 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:05:31.079 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:05:31.079 | WARN  | sale_service | 282 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:05:33.800 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:05:33.801 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:05:33.803 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:05:33.803 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:05:33.907 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:05:33.907 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:05:34.003 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:05:34.003 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:05:34.003 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:05:34.003 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:05:34.003 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:05:34.004 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:05:34.053 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:05:34.054 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:05:34.054 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:05:34.054 | WARN  | sale_service | 252 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:05:34.055 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:05:34.055 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:05:34.055 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:05:34.055 | WARN  | sale_service | 252 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:05:36.795 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:05:36.796 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:05:36.797 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:05:36.798 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:05:37.167 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:05:37.179 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:05:37.285 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:05:37.285 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:05:37.285 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:05:37.285 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:05:37.286 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:05:37.286 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:05:37.350 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:05:37.351 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:05:37.352 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:05:37.353 | WARN  | sale_service | 555 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:05:37.564 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:05:37.564 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:05:37.565 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:05:37.565 | WARN  | sale_service | 386 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:05:37.565 | WARN  | sale_service | 767 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:05:39.783 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:05:39.784 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:05:39.784 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:05:39.784 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:05:39.882 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:05:39.889 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:05:39.976 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:05:39.977 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:05:39.978 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:05:39.990 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:05:39.992 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:05:39.993 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:05:40.030 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:05:40.030 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:05:40.031 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:05:40.032 | WARN  | sale_service | 248 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:05:40.284 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:05:40.285 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:05:40.285 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:05:40.285 | WARN  | sale_service | 395 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:05:40.285 | WARN  | sale_service | 501 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:05:42.787 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:05:42.790 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:05:42.794 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:05:42.796 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:05:42.888 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:05:42.936 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:05:42.986 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:05:42.987 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:05:42.987 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:05:43.038 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:05:43.038 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:05:43.038 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:05:43.038 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:05:43.038 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:05:43.038 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:05:43.038 | WARN  | sale_service | 249 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:05:43.148 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:05:43.148 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:05:43.148 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:05:43.149 | WARN  | sale_service | 213 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:05:43.149 | WARN  | sale_service | 354 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:05:45.795 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:05:45.796 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:05:45.798 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:05:45.798 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:05:45.894 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:05:45.894 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:05:46.047 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:05:46.047 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:05:46.048 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:05:46.064 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:05:46.065 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:05:46.066 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:05:46.097 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:05:46.098 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:05:46.098 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:05:46.098 | WARN  | sale_service | 204 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:05:46.098 | WARN  | sale_service | 301 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:05:46.162 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:05:46.163 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:05:46.163 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:05:46.163 | WARN  | sale_service | 269 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:05:46.163 | WARN  | sale_service | 365 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:05:48.791 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:05:48.793 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:05:48.794 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:05:48.795 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:05:48.902 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:05:48.902 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:05:49.006 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:05:49.006 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:05:49.007 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:05:49.007 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:05:49.008 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:05:49.009 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:05:49.056 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:05:49.056 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:05:49.056 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:05:49.056 | WARN  | sale_service | 263 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:05:49.061 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:05:49.062 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:05:49.062 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:05:49.062 | WARN  | sale_service | 267 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:05:51.799 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:05:51.801 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:05:51.802 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:05:51.804 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:05:51.917 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:05:51.922 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:05:52.013 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:05:52.013 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:05:52.014 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:05:52.015 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:05:52.015 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:05:52.016 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:05:52.064 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:05:52.064 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:05:52.065 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:05:52.065 | WARN  | sale_service | 265 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:05:52.117 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:05:52.118 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:05:52.118 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:05:52.118 | WARN  | sale_service | 316 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:05:54.784 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:05:54.784 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:05:54.785 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:05:54.785 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:05:54.881 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:05:54.881 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:05:54.974 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:05:54.974 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:05:54.975 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:05:54.979 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:05:54.979 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:05:54.979 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:05:55.023 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:05:55.023 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:05:55.023 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:05:55.023 | WARN  | sale_service | 237 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:05:55.030 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:05:55.031 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:05:55.031 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:05:55.031 | WARN  | sale_service | 245 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:05:56.030 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#updateCart(Authentication, String, Long, String)
24/12/23 18:05:56.031 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:05:56.128 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:05:56.228 | DEBUG | sale_service | 0 | LogFormatUtils.java: PUT "/api/v1/cart/65880e74a10d1b5728a693ba?quantity=3", parameters={masked}
24/12/23 18:05:56.228 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#updateCart(Authentication, String, Long, String)
24/12/23 18:05:56.229 | DEBUG | sale_service | 0 | MongoTemplate.java: findOne using query: { "id" : { "$oid" : "65880e74a10d1b5728a693ba"}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:05:56.229 | DEBUG | sale_service | 0 | MongoTemplate.java: findOne using query: { "_id" : { "$oid" : "65880e74a10d1b5728a693ba"}} fields: {} in db.collection: db-salespage.cart
24/12/23 18:05:56.300 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "_id" : { "$oid" : "6532bbe5fae6d41599929246"}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Product in collection: product
24/12/23 18:05:56.362 | DEBUG | sale_service | 0 | MongoTemplate.java: Saving Document containing fields: [_id, product_detail_id, product_name, username, store_id, quantity, created_at, updated_at, _class]
24/12/23 18:05:56.436 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:05:56.437 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=Cập nhật thành công, data=null)]
24/12/23 18:05:56.437 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:05:56.437 | WARN  | sale_service | 308 | AuthTokenFilter.java: end request ==> PUT  /api/v1/cart/65880e74a10d1b5728a693ba?quantity=3
24/12/23 18:05:56.437 | WARN  | sale_service | 405 | AuthTokenFilter.java: end request ==> PUT  /api/v1/cart/65880e74a10d1b5728a693ba?quantity=3
24/12/23 18:05:56.832 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#updateCart(Authentication, String, Long, String)
24/12/23 18:05:56.833 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:05:56.931 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:05:57.028 | DEBUG | sale_service | 0 | LogFormatUtils.java: PUT "/api/v1/cart/65880e74a10d1b5728a693ba?quantity=2", parameters={masked}
24/12/23 18:05:57.029 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#updateCart(Authentication, String, Long, String)
24/12/23 18:05:57.029 | DEBUG | sale_service | 0 | MongoTemplate.java: findOne using query: { "id" : { "$oid" : "65880e74a10d1b5728a693ba"}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:05:57.029 | DEBUG | sale_service | 0 | MongoTemplate.java: findOne using query: { "_id" : { "$oid" : "65880e74a10d1b5728a693ba"}} fields: {} in db.collection: db-salespage.cart
24/12/23 18:05:57.121 | DEBUG | sale_service | 0 | MongoTemplate.java: Saving Document containing fields: [_id, product_detail_id, product_name, username, store_id, quantity, created_at, updated_at, _class]
24/12/23 18:05:57.221 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:05:57.221 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=Cập nhật thành công, data=null)]
24/12/23 18:05:57.221 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:05:57.221 | WARN  | sale_service | 290 | AuthTokenFilter.java: end request ==> PUT  /api/v1/cart/65880e74a10d1b5728a693ba?quantity=2
24/12/23 18:05:57.222 | WARN  | sale_service | 389 | AuthTokenFilter.java: end request ==> PUT  /api/v1/cart/65880e74a10d1b5728a693ba?quantity=2
24/12/23 18:05:57.792 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:05:57.794 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:05:57.794 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:05:57.795 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:05:57.889 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:05:57.889 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:05:57.987 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:05:57.987 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:05:57.988 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:05:57.988 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:05:57.988 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:05:57.988 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:05:58.035 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:05:58.035 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:05:58.035 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:05:58.035 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:05:58.036 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:05:58.036 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:05:58.036 | WARN  | sale_service | 242 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:05:58.036 | WARN  | sale_service | 243 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:06:00.783 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:06:00.783 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:06:00.784 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:06:00.784 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:06:00.885 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:06:00.890 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:06:00.995 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:06:00.994 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:06:00.995 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:06:00.995 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:06:00.995 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:06:00.995 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:06:01.048 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:06:01.048 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:06:01.048 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:06:01.048 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:06:01.049 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:06:01.049 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:06:01.049 | WARN  | sale_service | 265 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:06:01.049 | WARN  | sale_service | 265 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:06:03.611 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#paymentProductInCart(Authentication, List)
24/12/23 18:06:03.612 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:06:03.713 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:06:03.780 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:06:03.781 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:06:03.781 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:06:03.782 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:06:03.828 | DEBUG | sale_service | 0 | LogFormatUtils.java: POST "/api/v1/cart/payment", parameters={}
24/12/23 18:06:03.828 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#paymentProductInCart(Authentication, List)
24/12/23 18:06:03.828 | DEBUG | sale_service | 0 | LogFormatUtils.java: Read "application/json;charset=UTF-8" to [[CartPaymentDto(comboId=6581bc657f9bde440a01886f, note=, transaction=[ProductTransactionDto(cartId=6 (truncated)...]
24/12/23 18:06:05.985 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.User in collection: user
24/12/23 18:06:06.030 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:06:06.030 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:06:06.771 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:06:06.771 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:06:06.772 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:06:06.772 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:06:06.772 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:06:06.773 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:06:07.062 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:06:07.062 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:06:07.062 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:06:07.062 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:06:07.226 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:06:07.226 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:06:07.226 | WARN  | sale_service | 1196 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:06:07.226 | WARN  | sale_service | 1196 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:06:07.226 | WARN  | sale_service | 3444 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:06:07.226 | WARN  | sale_service | 3444 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:06:09.147 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:06:09.150 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:06:09.150 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:06:09.151 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:06:09.539 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:06:09.539 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:06:09.740 | DEBUG | sale_service | 0 | MongoTemplate.java: findOne using query: { "id" : { "$oid" : "65880e74a10d1b5728a693ba"}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:06:09.744 | DEBUG | sale_service | 0 | MongoTemplate.java: findOne using query: { "_id" : { "$oid" : "65880e74a10d1b5728a693ba"}} fields: {} in db.collection: db-salespage.cart
24/12/23 18:06:09.796 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:06:09.796 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:06:09.796 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:06:09.796 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:06:09.797 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:06:09.797 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:06:10.089 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:06:10.089 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:06:10.090 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:06:10.090 | WARN  | sale_service | 552 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:06:10.090 | WARN  | sale_service | 939 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:06:10.091 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:06:10.092 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:06:10.441 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:06:10.442 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:06:10.442 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:06:10.443 | WARN  | sale_service | 904 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:06:10.443 | WARN  | sale_service | 1294 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:06:10.443 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:06:10.444 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:06:10.445 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:06:10.826 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:06:10.826 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:06:10.827 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:06:10.827 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:06:10.985 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:06:10.985 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:06:10.986 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:06:10.986 | WARN  | sale_service | 544 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:06:10.986 | WARN  | sale_service | 894 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:06:11.002 | DEBUG | sale_service | 0 | MongoTemplate.java: findOne using query: { "id" : { "$oid" : "651d84c5a4cd6f49416b6fda"}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.SellerStore in collection: store
24/12/23 18:06:11.006 | DEBUG | sale_service | 0 | MongoTemplate.java: findOne using query: { "_id" : { "$oid" : "651d84c5a4cd6f49416b6fda"}} fields: {} in db.collection: db-salespage.store
24/12/23 18:06:11.030 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:06:11.030 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:06:11.031 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:06:11.079 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:06:11.080 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:06:11.080 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:06:11.080 | WARN  | sale_service | 254 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:06:11.080 | WARN  | sale_service | 635 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:06:13.948 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:06:13.949 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:06:13.950 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:06:13.951 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:06:15.213 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:06:15.213 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:06:15.674 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:06:15.675 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:06:15.676 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:06:15.874 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:06:15.874 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:06:15.874 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:06:15.874 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:06:15.875 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:06:15.875 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:06:15.875 | WARN  | sale_service | 662 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:06:15.876 | WARN  | sale_service | 1926 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:06:15.879 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:06:15.880 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:06:15.929 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:06:15.930 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:06:15.930 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:06:15.930 | WARN  | sale_service | 717 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:06:15.931 | WARN  | sale_service | 1980 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:06:15.933 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:06:15.934 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:06:15.977 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:06:16.029 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:06:16.069 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:06:16.069 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:06:16.070 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:06:16.116 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:06:16.117 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:06:16.117 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:06:16.117 | WARN  | sale_service | 238 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:06:16.124 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:06:16.125 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:06:16.126 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:06:16.176 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:06:16.176 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:06:16.177 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:06:16.177 | WARN  | sale_service | 244 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:06:19.380 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:06:19.380 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:06:19.382 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:06:19.382 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:06:20.917 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:06:20.917 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:06:20.918 | DEBUG | sale_service | 0 | MongoTemplate.java: Saving Document containing fields: [_id, voucher_store_id, owner_id, code, expire_time, voucher_code_status, created_at, updated_at, _class]
24/12/23 18:06:21.467 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:06:21.467 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:06:21.467 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:06:21.467 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:06:21.468 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:06:21.468 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:06:32.666 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:06:32.666 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:06:32.666 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:06:32.667 | WARN  | sale_service | 11750 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:06:32.667 | WARN  | sale_service | 13286 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:06:32.667 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:06:32.667 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:06:32.667 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:06:32.668 | WARN  | sale_service | 11751 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:06:32.668 | WARN  | sale_service | 13287 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:06:32.669 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:06:32.670 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:06:32.670 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:06:32.670 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:06:32.670 | DEBUG | sale_service | 0 | MongoTemplate.java: Saving Document containing fields: [_id, product_id, type, quantity, origin_price, sell_price, discount_percent, username, created_at, updated_at, _class]
24/12/23 18:06:32.771 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:06:32.771 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:06:32.778 | DEBUG | sale_service | 0 | MongoTemplate.java: findOne using query: { "id" : { "$oid" : "65880f27a10d1b5728a693bf"}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:06:32.785 | DEBUG | sale_service | 0 | MongoTemplate.java: findOne using query: { "_id" : { "$oid" : "65880f27a10d1b5728a693bf"}} fields: {} in db.collection: db-salespage.cart
24/12/23 18:06:32.864 | DEBUG | sale_service | 0 | MongoTemplate.java: findOne using query: { "id" : { "$oid" : "653536948d69bd44723ba6fc"}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.ProductDetail in collection: product_detail
24/12/23 18:06:32.867 | DEBUG | sale_service | 0 | MongoTemplate.java: findOne using query: { "_id" : { "$oid" : "653536948d69bd44723ba6fc"}} fields: {} in db.collection: db-salespage.product_detail
24/12/23 18:06:32.868 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:06:32.869 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:06:32.869 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:06:32.876 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:06:32.876 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:06:32.876 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:06:32.920 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:06:32.921 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:06:32.922 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:06:32.922 | WARN  | sale_service | 251 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:06:32.924 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:06:32.925 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:06:32.926 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:06:32.926 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:06:32.926 | WARN  | sale_service | 256 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:06:32.928 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:06:32.929 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:06:32.932 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:06:32.993 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "_id" : { "$oid" : "6535339b8d69bd44723ba6fb"}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Product in collection: product
24/12/23 18:06:33.026 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:06:33.027 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:06:33.083 | DEBUG | sale_service | 0 | MongoTemplate.java: findOne using query: { "id" : { "$oid" : "651d84c5a4cd6f49416b6fda"}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.SellerStore in collection: store
24/12/23 18:06:33.087 | DEBUG | sale_service | 0 | MongoTemplate.java: findOne using query: { "_id" : { "$oid" : "651d84c5a4cd6f49416b6fda"}} fields: {} in db.collection: db-salespage.store
24/12/23 18:06:33.118 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:06:33.119 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:06:33.119 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:06:33.121 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:06:33.122 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:06:33.122 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:06:33.163 | DEBUG | sale_service | 0 | MongoTemplate.java: Saving Document containing fields: [_id, product_id, type, quantity, origin_price, sell_price, discount_percent, username, created_at, updated_at, _class]
24/12/23 18:06:33.171 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:06:33.171 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:06:33.171 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:06:33.172 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:06:33.172 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:06:33.173 | WARN  | sale_service | 243 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:06:33.173 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:06:33.173 | WARN  | sale_service | 246 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:06:33.186 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:06:33.187 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:06:33.188 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:06:33.188 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:06:33.278 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:06:37.203 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:41.980 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:10:41.980 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:10:41.980 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:10:41.981 | INFO  | sale_service | 0 | NetworkClient.java: [Consumer clientId=consumer-bizfly-7-453-PaymentTransaction-1, groupId=bizfly-7-453-PaymentTransaction] Disconnecting from node 1 due to request timeout.
24/12/23 18:10:41.981 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:10:41.982 | INFO  | sale_service | 0 | NetworkClient.java: [Consumer clientId=consumer-bizfly-7-453-PaymentTransaction-1, groupId=bizfly-7-453-PaymentTransaction] Cancelled in-flight FETCH request with correlation id 2160 due to node 1 being disconnected (elapsed time since creation: 244779ms, elapsed time since send: 244778ms, request timeout: 30000ms)
24/12/23 18:10:41.982 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:41.992 | INFO  | sale_service | 0 | AbstractCoordinator.java: [Consumer clientId=consumer-bizfly-7-453-PaymentTransaction-3, groupId=bizfly-7-453-PaymentTransaction] Group coordinator 123.31.11.247:9094 (id: 2147483643 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response.isDisconnected: false. Rediscovery will be attempted.
24/12/23 18:10:41.993 | INFO  | sale_service | 0 | AbstractCoordinator.java: [Consumer clientId=consumer-bizfly-7-453-PaymentTransaction-3, groupId=bizfly-7-453-PaymentTransaction] Requesting disconnect from last known coordinator 123.31.11.247:9094 (id: 2147483643 rack: null)
24/12/23 18:10:41.993 | INFO  | sale_service | 0 | AbstractCoordinator.java: [Consumer clientId=consumer-bizfly-7-453-PaymentTransaction-2, groupId=bizfly-7-453-PaymentTransaction] Group coordinator 123.31.11.247:9094 (id: 2147483643 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response.isDisconnected: false. Rediscovery will be attempted.
24/12/23 18:10:41.994 | INFO  | sale_service | 0 | NetworkClient.java: [Consumer clientId=consumer-bizfly-7-453-PaymentTransaction-3, groupId=bizfly-7-453-PaymentTransaction] Client requested disconnect from node 2147483643
24/12/23 18:10:41.994 | INFO  | sale_service | 0 | FetchSessionHandler.java: [Consumer clientId=consumer-bizfly-7-453-PaymentTransaction-1, groupId=bizfly-7-453-PaymentTransaction] Error sending fetch request (sessionId=680358747, epoch=1662) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
24/12/23 18:10:41.994 | INFO  | sale_service | 0 | AbstractCoordinator.java: [Consumer clientId=consumer-bizfly-7-453-PaymentTransaction-2, groupId=bizfly-7-453-PaymentTransaction] Requesting disconnect from last known coordinator 123.31.11.247:9094 (id: 2147483643 rack: null)
24/12/23 18:10:41.995 | INFO  | sale_service | 0 | AbstractCoordinator.java: [Consumer clientId=consumer-bizfly-7-453-PaymentTransaction-1, groupId=bizfly-7-453-PaymentTransaction] Group coordinator 123.31.11.247:9094 (id: 2147483643 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response.isDisconnected: false. Rediscovery will be attempted.
24/12/23 18:10:41.996 | INFO  | sale_service | 0 | NetworkClient.java: [Consumer clientId=consumer-bizfly-7-453-PaymentTransaction-2, groupId=bizfly-7-453-PaymentTransaction] Client requested disconnect from node 2147483643
24/12/23 18:10:41.996 | INFO  | sale_service | 0 | AbstractCoordinator.java: [Consumer clientId=consumer-bizfly-7-453-PaymentTransaction-1, groupId=bizfly-7-453-PaymentTransaction] Requesting disconnect from last known coordinator 123.31.11.247:9094 (id: 2147483643 rack: null)
24/12/23 18:10:41.997 | INFO  | sale_service | 0 | NetworkClient.java: [Consumer clientId=consumer-bizfly-7-453-PaymentTransaction-1, groupId=bizfly-7-453-PaymentTransaction] Client requested disconnect from node 2147483643
24/12/23 18:10:42.000 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:10:42.000 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:10:42.001 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:42.001 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:42.003 | DEBUG | sale_service | 0 | MongoTemplate.java: findOne using query: { "id" : { "$oid" : "6581bc657f9bde440a01886f"}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.ProductCombo in collection: product_combo
24/12/23 18:10:42.007 | DEBUG | sale_service | 0 | MongoTemplate.java: findOne using query: { "_id" : { "$oid" : "6581bc657f9bde440a01886f"}} fields: {} in db.collection: db-salespage.product_combo
24/12/23 18:10:42.029 | INFO  | sale_service | 0 | AbstractCoordinator.java: [Consumer clientId=consumer-bizfly-7-453-PaymentTransaction-2, groupId=bizfly-7-453-PaymentTransaction] Discovered group coordinator 123.31.11.247:9094 (id: 2147483643 rack: null)
24/12/23 18:10:42.030 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:10:42.030 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:10:42.030 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:10:42.030 | WARN  | sale_service | 248752 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:10:42.030 | WARN  | sale_service | 248843 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:10:42.031 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:10:42.032 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:42.052 | ERROR | sale_service | 0 | AuthTokenFilter.java: failed on set user authentication
org.springframework.transaction.TransactionSystemException: Could not commit Mongo transaction for session [ClientSessionImpl@56f2bc9b id = {"id": {"$binary": {"base64": "WU9UYfJLSVGfqxAWoBw9qw==", "subType": "04"}}}, causallyConsistent = true, txActive = false, txNumber = 469, error = d != java.lang.Boolean].; nested exception is com.mongodb.MongoCommandException: Command failed with error 251 (NoSuchTransaction): 'Transaction with { txnNumber: 469 } has been aborted.' on server ac-jh96ukw-shard-00-02.h9186rq.mongodb.net:27017. The full response is {"errorLabels": ["TransientTransactionError"], "ok": 0.0, "errmsg": "Transaction with { txnNumber: 469 } has been aborted.", "code": 251, "codeName": "NoSuchTransaction", "$clusterTime": {"clusterTime": {"$timestamp": {"t": 1703416237, "i": 6}}, "signature": {"hash": {"$binary": {"base64": "vqSIaZF6tBL2UG+DS7wBk9irvBw=", "subType": "00"}}, "keyId": 7273138348221267970}}, "operationTime": {"$timestamp": {"t": 1703416237, "i": 6}}}
	at org.springframework.data.mongodb.MongoTransactionManager.doCommit(MongoTransactionManager.java:203) ~[spring-data-mongodb-3.4.5.jar:3.4.5]
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:743) ~[spring-tx-5.3.23.jar:5.3.23]
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:711) ~[spring-tx-5.3.23.jar:5.3.23]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.commitTransactionAfterReturning(TransactionAspectSupport.java:654) ~[spring-tx-5.3.23.jar:5.3.23]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:407) ~[spring-tx-5.3.23.jar:5.3.23]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-5.3.23.jar:5.3.23]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.23.jar:5.3.23]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.23.jar:5.3.23]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708) ~[spring-aop-5.3.23.jar:5.3.23]
	at com.salespage.salespageservice.domains.security.services.UserDetailsServiceImpl$$EnhancerBySpringCGLIB$$5e9f2d84.loadUserByUsername(<generated>) ~[classes/:?]
	at com.salespage.salespageservice.domains.security.jwt.AuthTokenFilter.doFilterInternal(AuthTokenFilter.java:57) ~[classes/:?]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.23.jar:5.3.23]
	at org.eclipse.jetty.servlet.FilterHolder.doFilter(FilterHolder.java:193) ~[jetty-servlet-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.servlet.ServletHandler$Chain.doFilter(ServletHandler.java:1626) ~[jetty-servlet-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337) ~[spring-security-web-5.7.4.jar:5.7.4]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115) ~[spring-security-web-5.7.4.jar:5.7.4]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81) ~[spring-security-web-5.7.4.jar:5.7.4]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.4.jar:5.7.4]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122) ~[spring-security-web-5.7.4.jar:5.7.4]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116) ~[spring-security-web-5.7.4.jar:5.7.4]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.4.jar:5.7.4]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126) ~[spring-security-web-5.7.4.jar:5.7.4]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81) ~[spring-security-web-5.7.4.jar:5.7.4]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.4.jar:5.7.4]
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109) ~[spring-security-web-5.7.4.jar:5.7.4]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.4.jar:5.7.4]
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149) ~[spring-security-web-5.7.4.jar:5.7.4]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.4.jar:5.7.4]
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63) ~[spring-security-web-5.7.4.jar:5.7.4]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.4.jar:5.7.4]
	at com.salespage.salespageservice.domains.security.jwt.AuthTokenFilter.doFilterInternal(AuthTokenFilter.java:77) ~[classes/:?]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.23.jar:5.3.23]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.4.jar:5.7.4]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103) ~[spring-security-web-5.7.4.jar:5.7.4]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89) ~[spring-security-web-5.7.4.jar:5.7.4]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.4.jar:5.7.4]
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91) ~[spring-web-5.3.23.jar:5.3.23]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.23.jar:5.3.23]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.4.jar:5.7.4]
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90) ~[spring-security-web-5.7.4.jar:5.7.4]
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75) ~[spring-security-web-5.7.4.jar:5.7.4]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.23.jar:5.3.23]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.4.jar:5.7.4]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112) ~[spring-security-web-5.7.4.jar:5.7.4]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82) ~[spring-security-web-5.7.4.jar:5.7.4]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.4.jar:5.7.4]
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55) ~[spring-security-web-5.7.4.jar:5.7.4]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.23.jar:5.3.23]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.4.jar:5.7.4]
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42) ~[spring-security-web-5.7.4.jar:5.7.4]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.23.jar:5.3.23]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.4.jar:5.7.4]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221) ~[spring-security-web-5.7.4.jar:5.7.4]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186) ~[spring-security-web-5.7.4.jar:5.7.4]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354) ~[spring-web-5.3.23.jar:5.3.23]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267) ~[spring-web-5.3.23.jar:5.3.23]
	at org.eclipse.jetty.servlet.FilterHolder.doFilter(FilterHolder.java:193) ~[jetty-servlet-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.servlet.ServletHandler$Chain.doFilter(ServletHandler.java:1626) ~[jetty-servlet-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.3.23.jar:5.3.23]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.23.jar:5.3.23]
	at org.eclipse.jetty.servlet.FilterHolder.doFilter(FilterHolder.java:193) ~[jetty-servlet-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.servlet.ServletHandler$Chain.doFilter(ServletHandler.java:1626) ~[jetty-servlet-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.3.23.jar:5.3.23]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.23.jar:5.3.23]
	at org.eclipse.jetty.servlet.FilterHolder.doFilter(FilterHolder.java:193) ~[jetty-servlet-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.servlet.ServletHandler$Chain.doFilter(ServletHandler.java:1626) ~[jetty-servlet-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.3.23.jar:5.3.23]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.23.jar:5.3.23]
	at org.eclipse.jetty.servlet.FilterHolder.doFilter(FilterHolder.java:193) ~[jetty-servlet-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.servlet.ServletHandler$Chain.doFilter(ServletHandler.java:1626) ~[jetty-servlet-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:552) ~[jetty-servlet-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143) ~[jetty-server-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:600) ~[jetty-security-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:127) ~[jetty-server-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:235) ~[jetty-server-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:1624) ~[jetty-server-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:233) ~[jetty-server-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1440) ~[jetty-server-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.server.handler.ScopedHandler.nextScope(ScopedHandler.java:188) ~[jetty-server-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:505) ~[jetty-servlet-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:1594) ~[jetty-server-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.server.handler.ScopedHandler.nextScope(ScopedHandler.java:186) ~[jetty-server-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1355) ~[jetty-server-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141) ~[jetty-server-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:127) ~[jetty-server-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.server.Server.handle(Server.java:516) ~[jetty-server-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.server.HttpChannel.lambda$handle$1(HttpChannel.java:487) ~[jetty-server-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.server.HttpChannel.dispatch(HttpChannel.java:732) ~[jetty-server-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:479) ~[jetty-server-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:277) ~[jetty-server-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:311) ~[jetty-io-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:105) ~[jetty-io-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.io.ChannelEndPoint$1.run(ChannelEndPoint.java:104) ~[jetty-io-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.runTask(EatWhatYouKill.java:338) ~[jetty-util-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.doProduce(EatWhatYouKill.java:315) ~[jetty-util-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.tryProduce(EatWhatYouKill.java:173) ~[jetty-util-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.run(EatWhatYouKill.java:131) ~[jetty-util-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.util.thread.ReservedThreadExecutor$ReservedThread.run(ReservedThreadExecutor.java:409) ~[jetty-util-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:883) ~[jetty-util-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:1034) ~[jetty-util-9.4.49.v20220914.jar:9.4.49.v20220914]
	at java.lang.Thread.run(Thread.java:829) ~[?:?]
Caused by: com.mongodb.MongoCommandException: Command failed with error 251 (NoSuchTransaction): 'Transaction with { txnNumber: 469 } has been aborted.' on server ac-jh96ukw-shard-00-02.h9186rq.mongodb.net:27017. The full response is {"errorLabels": ["TransientTransactionError"], "ok": 0.0, "errmsg": "Transaction with { txnNumber: 469 } has been aborted.", "code": 251, "codeName": "NoSuchTransaction", "$clusterTime": {"clusterTime": {"$timestamp": {"t": 1703416237, "i": 6}}, "signature": {"hash": {"$binary": {"base64": "vqSIaZF6tBL2UG+DS7wBk9irvBw=", "subType": "00"}}, "keyId": 7273138348221267970}}, "operationTime": {"$timestamp": {"t": 1703416237, "i": 6}}}
	at com.mongodb.internal.connection.ProtocolHelper.getCommandFailureException(ProtocolHelper.java:198) ~[mongodb-driver-core-4.6.1.jar:?]
	at com.mongodb.internal.connection.InternalStreamConnection.receiveCommandMessageResponse(InternalStreamConnection.java:413) ~[mongodb-driver-core-4.6.1.jar:?]
	at com.mongodb.internal.connection.InternalStreamConnection.sendAndReceive(InternalStreamConnection.java:337) ~[mongodb-driver-core-4.6.1.jar:?]
	at com.mongodb.internal.connection.UsageTrackingInternalConnection.sendAndReceive(UsageTrackingInternalConnection.java:116) ~[mongodb-driver-core-4.6.1.jar:?]
	at com.mongodb.internal.connection.DefaultConnectionPool$PooledConnection.sendAndReceive(DefaultConnectionPool.java:644) ~[mongodb-driver-core-4.6.1.jar:?]
	at com.mongodb.internal.connection.CommandProtocolImpl.execute(CommandProtocolImpl.java:71) ~[mongodb-driver-core-4.6.1.jar:?]
	at com.mongodb.internal.connection.DefaultServer$DefaultServerProtocolExecutor.execute(DefaultServer.java:240) ~[mongodb-driver-core-4.6.1.jar:?]
	at com.mongodb.internal.connection.DefaultServerConnection.executeProtocol(DefaultServerConnection.java:226) ~[mongodb-driver-core-4.6.1.jar:?]
	at com.mongodb.internal.connection.DefaultServerConnection.command(DefaultServerConnection.java:126) ~[mongodb-driver-core-4.6.1.jar:?]
	at com.mongodb.internal.connection.DefaultServerConnection.command(DefaultServerConnection.java:116) ~[mongodb-driver-core-4.6.1.jar:?]
	at com.mongodb.internal.connection.DefaultServer$OperationCountTrackingConnection.command(DefaultServer.java:345) ~[mongodb-driver-core-4.6.1.jar:?]
	at com.mongodb.internal.operation.CommandOperationHelper.lambda$executeRetryableWrite$15(CommandOperationHelper.java:413) ~[mongodb-driver-core-4.6.1.jar:?]
	at com.mongodb.internal.operation.OperationHelper.lambda$withSourceAndConnection$2(OperationHelper.java:575) ~[mongodb-driver-core-4.6.1.jar:?]
	at com.mongodb.internal.operation.OperationHelper.withSuppliedResource(OperationHelper.java:600) ~[mongodb-driver-core-4.6.1.jar:?]
	at com.mongodb.internal.operation.OperationHelper.lambda$withSourceAndConnection$3(OperationHelper.java:574) ~[mongodb-driver-core-4.6.1.jar:?]
	at com.mongodb.internal.operation.OperationHelper.withSuppliedResource(OperationHelper.java:600) ~[mongodb-driver-core-4.6.1.jar:?]
	at com.mongodb.internal.operation.OperationHelper.withSourceAndConnection(OperationHelper.java:573) ~[mongodb-driver-core-4.6.1.jar:?]
	at com.mongodb.internal.operation.CommandOperationHelper.lambda$executeRetryableWrite$16(CommandOperationHelper.java:397) ~[mongodb-driver-core-4.6.1.jar:?]
	at com.mongodb.internal.async.function.RetryingSyncSupplier.get(RetryingSyncSupplier.java:65) ~[mongodb-driver-core-4.6.1.jar:?]
	at com.mongodb.internal.operation.CommandOperationHelper.executeRetryableWrite(CommandOperationHelper.java:425) ~[mongodb-driver-core-4.6.1.jar:?]
	at com.mongodb.internal.operation.TransactionOperation.execute(TransactionOperation.java:70) ~[mongodb-driver-core-4.6.1.jar:?]
	at com.mongodb.internal.operation.CommitTransactionOperation.execute(CommitTransactionOperation.java:133) ~[mongodb-driver-core-4.6.1.jar:?]
	at com.mongodb.internal.operation.CommitTransactionOperation.execute(CommitTransactionOperation.java:54) ~[mongodb-driver-core-4.6.1.jar:?]
	at com.mongodb.client.internal.MongoClientDelegate$DelegateOperationExecutor.execute(MongoClientDelegate.java:212) ~[mongodb-driver-sync-4.6.1.jar:?]
	at com.mongodb.client.internal.ClientSessionImpl.commitTransaction(ClientSessionImpl.java:147) ~[mongodb-driver-sync-4.6.1.jar:?]
	at org.springframework.data.mongodb.MongoTransactionManager$MongoTransactionObject.commitTransaction(MongoTransactionManager.java:469) ~[spring-data-mongodb-3.4.5.jar:3.4.5]
	at org.springframework.data.mongodb.MongoTransactionManager.doCommit(MongoTransactionManager.java:236) ~[spring-data-mongodb-3.4.5.jar:3.4.5]
	at org.springframework.data.mongodb.MongoTransactionManager.doCommit(MongoTransactionManager.java:200) ~[spring-data-mongodb-3.4.5.jar:3.4.5]
	... 100 more
24/12/23 18:10:42.054 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:10:42.054 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:10:42.055 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:10:42.072 | INFO  | sale_service | 0 | AbstractCoordinator.java: [Consumer clientId=consumer-bizfly-7-453-PaymentTransaction-3, groupId=bizfly-7-453-PaymentTransaction] Discovered group coordinator 123.31.11.247:9094 (id: 2147483643 rack: null)
24/12/23 18:10:42.075 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:42.094 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:42.097 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:42.108 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:10:42.108 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:10:42.109 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:10:42.109 | WARN  | sale_service | 248824 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:10:42.109 | WARN  | sale_service | 248921 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:10:42.110 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:10:42.111 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:42.134 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:46.921 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:10:46.922 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:10:46.922 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:10:46.923 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:10:46.923 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:10:46.924 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:10:46.944 | INFO  | sale_service | 0 | AbstractCoordinator.java: [Consumer clientId=consumer-bizfly-7-453-PaymentTransaction-2, groupId=bizfly-7-453-PaymentTransaction] Discovered group coordinator 123.31.11.247:9094 (id: 2147483643 rack: null)
24/12/23 18:10:46.967 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:10:46.967 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:10:46.967 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:10:46.967 | WARN  | sale_service | 4874 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:10:46.967 | WARN  | sale_service | 4966 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:10:46.968 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:10:46.969 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:46.971 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:10:46.971 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:10:46.971 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:10:46.974 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:10:46.975 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:10:46.975 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:46.975 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:10:46.975 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:10:46.975 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:10:46.975 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:10:46.975 | WARN  | sale_service | 4901 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:10:46.975 | WARN  | sale_service | 4994 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:10:46.976 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:10:46.977 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:46.981 | INFO  | sale_service | 0 | AbstractCoordinator.java: [Consumer clientId=consumer-bizfly-7-453-PaymentTransaction-1, groupId=bizfly-7-453-PaymentTransaction] Discovered group coordinator 123.31.11.247:9094 (id: 2147483643 rack: null)
24/12/23 18:10:46.982 | INFO  | sale_service | 0 | AbstractCoordinator.java: [Consumer clientId=consumer-bizfly-7-453-PaymentTransaction-1, groupId=bizfly-7-453-PaymentTransaction] Discovered group coordinator 123.31.11.247:9094 (id: 2147483643 rack: null)
24/12/23 18:10:46.997 | ERROR | sale_service | 0 | CartController.java: =====>paymentProductInCart 
org.springframework.data.mongodb.MongoTransactionException: Query failed with error code 251 with name 'NoSuchTransaction' and error message 'Transaction with { txnNumber: 339 } has been aborted.' on server ac-jh96ukw-shard-00-02.h9186rq.mongodb.net:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 251 with name 'NoSuchTransaction' and error message 'Transaction with { txnNumber: 339 } has been aborted.' on server ac-jh96ukw-shard-00-02.h9186rq.mongodb.net:27017
	at org.springframework.data.mongodb.core.MongoExceptionTranslator.translateExceptionIfPossible(MongoExceptionTranslator.java:137) ~[spring-data-mongodb-3.4.5.jar:3.4.5]
	at org.springframework.data.mongodb.core.MongoTemplate.potentiallyConvertRuntimeException(MongoTemplate.java:3048) ~[spring-data-mongodb-3.4.5.jar:3.4.5]
	at org.springframework.data.mongodb.core.MongoTemplate.executeFindOneInternal(MongoTemplate.java:2942) ~[spring-data-mongodb-3.4.5.jar:3.4.5]
	at org.springframework.data.mongodb.core.MongoTemplate.doFindOne(MongoTemplate.java:2618) ~[spring-data-mongodb-3.4.5.jar:3.4.5]
	at org.springframework.data.mongodb.core.MongoTemplate.doFindOne(MongoTemplate.java:2588) ~[spring-data-mongodb-3.4.5.jar:3.4.5]
	at org.springframework.data.mongodb.core.MongoTemplate.findById(MongoTemplate.java:922) ~[spring-data-mongodb-3.4.5.jar:3.4.5]
	at org.springframework.data.mongodb.repository.support.SimpleMongoRepository.findById(SimpleMongoRepository.java:132) ~[spring-data-mongodb-3.4.5.jar:3.4.5]
	at jdk.internal.reflect.GeneratedMethodAccessor369.invoke(Unknown Source) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289) ~[spring-data-commons-2.7.5.jar:2.7.5]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137) ~[spring-data-commons-2.7.5.jar:2.7.5]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121) ~[spring-data-commons-2.7.5.jar:2.7.5]
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:530) ~[spring-data-commons-2.7.5.jar:2.7.5]
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:286) ~[spring-data-commons-2.7.5.jar:2.7.5]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:640) ~[spring-data-commons-2.7.5.jar:2.7.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.23.jar:5.3.23]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164) ~[spring-data-commons-2.7.5.jar:2.7.5]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:139) ~[spring-data-commons-2.7.5.jar:2.7.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.23.jar:5.3.23]
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:81) ~[spring-data-commons-2.7.5.jar:2.7.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.23.jar:5.3.23]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97) ~[spring-aop-5.3.23.jar:5.3.23]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.23.jar:5.3.23]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215) ~[spring-aop-5.3.23.jar:5.3.23]
	at com.sun.proxy.$Proxy142.findById(Unknown Source) ~[?:?]
	at jdk.internal.reflect.GeneratedMethodAccessor368.invoke(Unknown Source) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344) ~[spring-aop-5.3.23.jar:5.3.23]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198) ~[spring-aop-5.3.23.jar:5.3.23]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.3.23.jar:5.3.23]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137) ~[spring-tx-5.3.23.jar:5.3.23]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.23.jar:5.3.23]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215) ~[spring-aop-5.3.23.jar:5.3.23]
	at com.sun.proxy.$Proxy142.findById(Unknown Source) ~[?:?]
	at com.salespage.salespageservice.domains.storages.ProductComboStorage.findById(ProductComboStorage.java:23) ~[classes/:?]
	at com.salespage.salespageservice.domains.services.ProductComboService.getComboInfo(ProductComboService.java:190) ~[classes/:?]
	at com.salespage.salespageservice.domains.services.ProductComboService$$FastClassBySpringCGLIB$$9452c3b9.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.3.23.jar:5.3.23]
	at org.springframework.aop.framework.CglibAopProxy.invokeMethod(CglibAopProxy.java:386) ~[spring-aop-5.3.23.jar:5.3.23]
	at org.springframework.aop.framework.CglibAopProxy.access$000(CglibAopProxy.java:85) ~[spring-aop-5.3.23.jar:5.3.23]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:704) ~[spring-aop-5.3.23.jar:5.3.23]
	at com.salespage.salespageservice.domains.services.ProductComboService$$EnhancerBySpringCGLIB$$146a8436.getComboInfo(<generated>) ~[classes/:?]
	at com.salespage.salespageservice.domains.services.CartService.paymentProductInCart(CartService.java:327) ~[classes/:?]
	at com.salespage.salespageservice.domains.services.CartService$$FastClassBySpringCGLIB$$b96c5258.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.3.23.jar:5.3.23]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793) ~[spring-aop-5.3.23.jar:5.3.23]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.3.23.jar:5.3.23]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.23.jar:5.3.23]
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123) ~[spring-tx-5.3.23.jar:5.3.23]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388) ~[spring-tx-5.3.23.jar:5.3.23]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-5.3.23.jar:5.3.23]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.23.jar:5.3.23]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.23.jar:5.3.23]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708) ~[spring-aop-5.3.23.jar:5.3.23]
	at com.salespage.salespageservice.domains.services.CartService$$EnhancerBySpringCGLIB$$6eb9cb73.paymentProductInCart(<generated>) ~[classes/:?]
	at com.salespage.salespageservice.app.controllers.CartController.paymentProductInCart(CartController.java:66) ~[classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205) ~[spring-web-5.3.23.jar:5.3.23]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150) ~[spring-web-5.3.23.jar:5.3.23]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117) ~[spring-webmvc-5.3.23.jar:5.3.23]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895) ~[spring-webmvc-5.3.23.jar:5.3.23]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808) ~[spring-webmvc-5.3.23.jar:5.3.23]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-5.3.23.jar:5.3.23]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1071) ~[spring-webmvc-5.3.23.jar:5.3.23]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964) ~[spring-webmvc-5.3.23.jar:5.3.23]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.3.23.jar:5.3.23]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909) ~[spring-webmvc-5.3.23.jar:5.3.23]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:517) ~[jakarta.servlet-api-4.0.4.jar:4.0.4]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.3.23.jar:5.3.23]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:584) ~[jakarta.servlet-api-4.0.4.jar:4.0.4]
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:799) ~[jetty-servlet-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.servlet.ServletHandler$ChainEnd.doFilter(ServletHandler.java:1656) ~[jetty-servlet-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.websocket.server.WebSocketUpgradeFilter.doFilter(WebSocketUpgradeFilter.java:292) ~[websocket-server-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.servlet.FilterHolder.doFilter(FilterHolder.java:193) ~[jetty-servlet-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.servlet.ServletHandler$Chain.doFilter(ServletHandler.java:1626) ~[jetty-servlet-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111) ~[spring-web-5.3.23.jar:5.3.23]
	at org.eclipse.jetty.servlet.FilterHolder.doFilter(FilterHolder.java:193) ~[jetty-servlet-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.servlet.ServletHandler$Chain.doFilter(ServletHandler.java:1626) ~[jetty-servlet-9.4.49.v20220914.jar:9.4.49.v20220914]
	at com.salespage.salespageservice.domains.security.jwt.AuthTokenFilter.doFilterInternal(AuthTokenFilter.java:77) ~[classes/:?]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.23.jar:5.3.23]
	at org.eclipse.jetty.servlet.FilterHolder.doFilter(FilterHolder.java:193) ~[jetty-servlet-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.servlet.ServletHandler$Chain.doFilter(ServletHandler.java:1626) ~[jetty-servlet-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337) ~[spring-security-web-5.7.4.jar:5.7.4]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115) ~[spring-security-web-5.7.4.jar:5.7.4]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81) ~[spring-security-web-5.7.4.jar:5.7.4]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.4.jar:5.7.4]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122) ~[spring-security-web-5.7.4.jar:5.7.4]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116) ~[spring-security-web-5.7.4.jar:5.7.4]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.4.jar:5.7.4]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126) ~[spring-security-web-5.7.4.jar:5.7.4]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81) ~[spring-security-web-5.7.4.jar:5.7.4]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.4.jar:5.7.4]
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109) ~[spring-security-web-5.7.4.jar:5.7.4]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.4.jar:5.7.4]
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149) ~[spring-security-web-5.7.4.jar:5.7.4]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.4.jar:5.7.4]
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63) ~[spring-security-web-5.7.4.jar:5.7.4]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.4.jar:5.7.4]
	at com.salespage.salespageservice.domains.security.jwt.AuthTokenFilter.doFilterInternal(AuthTokenFilter.java:77) ~[classes/:?]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.23.jar:5.3.23]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.4.jar:5.7.4]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103) ~[spring-security-web-5.7.4.jar:5.7.4]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89) ~[spring-security-web-5.7.4.jar:5.7.4]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.4.jar:5.7.4]
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91) ~[spring-web-5.3.23.jar:5.3.23]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.23.jar:5.3.23]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.4.jar:5.7.4]
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90) ~[spring-security-web-5.7.4.jar:5.7.4]
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75) ~[spring-security-web-5.7.4.jar:5.7.4]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.23.jar:5.3.23]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.4.jar:5.7.4]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112) ~[spring-security-web-5.7.4.jar:5.7.4]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82) ~[spring-security-web-5.7.4.jar:5.7.4]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.4.jar:5.7.4]
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55) ~[spring-security-web-5.7.4.jar:5.7.4]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.23.jar:5.3.23]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.4.jar:5.7.4]
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42) ~[spring-security-web-5.7.4.jar:5.7.4]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.23.jar:5.3.23]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.4.jar:5.7.4]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221) ~[spring-security-web-5.7.4.jar:5.7.4]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186) ~[spring-security-web-5.7.4.jar:5.7.4]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354) ~[spring-web-5.3.23.jar:5.3.23]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267) ~[spring-web-5.3.23.jar:5.3.23]
	at org.eclipse.jetty.servlet.FilterHolder.doFilter(FilterHolder.java:193) ~[jetty-servlet-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.servlet.ServletHandler$Chain.doFilter(ServletHandler.java:1626) ~[jetty-servlet-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.3.23.jar:5.3.23]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.23.jar:5.3.23]
	at org.eclipse.jetty.servlet.FilterHolder.doFilter(FilterHolder.java:193) ~[jetty-servlet-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.servlet.ServletHandler$Chain.doFilter(ServletHandler.java:1626) ~[jetty-servlet-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.3.23.jar:5.3.23]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.23.jar:5.3.23]
	at org.eclipse.jetty.servlet.FilterHolder.doFilter(FilterHolder.java:193) ~[jetty-servlet-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.servlet.ServletHandler$Chain.doFilter(ServletHandler.java:1626) ~[jetty-servlet-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.3.23.jar:5.3.23]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.23.jar:5.3.23]
	at org.eclipse.jetty.servlet.FilterHolder.doFilter(FilterHolder.java:193) ~[jetty-servlet-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.servlet.ServletHandler$Chain.doFilter(ServletHandler.java:1626) ~[jetty-servlet-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:552) ~[jetty-servlet-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143) ~[jetty-server-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:600) ~[jetty-security-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:127) ~[jetty-server-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:235) ~[jetty-server-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:1624) ~[jetty-server-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:233) ~[jetty-server-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1440) ~[jetty-server-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.server.handler.ScopedHandler.nextScope(ScopedHandler.java:188) ~[jetty-server-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:505) ~[jetty-servlet-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:1594) ~[jetty-server-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.server.handler.ScopedHandler.nextScope(ScopedHandler.java:186) ~[jetty-server-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1355) ~[jetty-server-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141) ~[jetty-server-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:127) ~[jetty-server-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.server.Server.handle(Server.java:516) ~[jetty-server-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.server.HttpChannel.lambda$handle$1(HttpChannel.java:487) ~[jetty-server-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.server.HttpChannel.dispatch(HttpChannel.java:732) ~[jetty-server-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:479) ~[jetty-server-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:277) ~[jetty-server-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:311) ~[jetty-io-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:105) ~[jetty-io-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.io.ChannelEndPoint$1.run(ChannelEndPoint.java:104) ~[jetty-io-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.runTask(EatWhatYouKill.java:338) ~[jetty-util-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.doProduce(EatWhatYouKill.java:315) ~[jetty-util-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.tryProduce(EatWhatYouKill.java:173) ~[jetty-util-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.run(EatWhatYouKill.java:131) ~[jetty-util-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.util.thread.ReservedThreadExecutor$ReservedThread.run(ReservedThreadExecutor.java:409) ~[jetty-util-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:883) ~[jetty-util-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:1034) ~[jetty-util-9.4.49.v20220914.jar:9.4.49.v20220914]
	at java.lang.Thread.run(Thread.java:829) ~[?:?]
Caused by: com.mongodb.MongoQueryException: Query failed with error code 251 with name 'NoSuchTransaction' and error message 'Transaction with { txnNumber: 339 } has been aborted.' on server ac-jh96ukw-shard-00-02.h9186rq.mongodb.net:27017
	at com.mongodb.internal.operation.FindOperation.lambda$execute$1(FindOperation.java:699) ~[mongodb-driver-core-4.6.1.jar:?]
	at com.mongodb.internal.operation.OperationHelper.lambda$withSourceAndConnection$2(OperationHelper.java:575) ~[mongodb-driver-core-4.6.1.jar:?]
	at com.mongodb.internal.operation.OperationHelper.withSuppliedResource(OperationHelper.java:600) ~[mongodb-driver-core-4.6.1.jar:?]
	at com.mongodb.internal.operation.OperationHelper.lambda$withSourceAndConnection$3(OperationHelper.java:574) ~[mongodb-driver-core-4.6.1.jar:?]
	at com.mongodb.internal.operation.OperationHelper.withSuppliedResource(OperationHelper.java:600) ~[mongodb-driver-core-4.6.1.jar:?]
	at com.mongodb.internal.operation.OperationHelper.withSourceAndConnection(OperationHelper.java:573) ~[mongodb-driver-core-4.6.1.jar:?]
	at com.mongodb.internal.operation.FindOperation.lambda$execute$2(FindOperation.java:690) ~[mongodb-driver-core-4.6.1.jar:?]
	at com.mongodb.internal.async.function.RetryingSyncSupplier.get(RetryingSyncSupplier.java:65) ~[mongodb-driver-core-4.6.1.jar:?]
	at com.mongodb.internal.operation.FindOperation.execute(FindOperation.java:722) ~[mongodb-driver-core-4.6.1.jar:?]
	at com.mongodb.internal.operation.FindOperation.execute(FindOperation.java:86) ~[mongodb-driver-core-4.6.1.jar:?]
	at com.mongodb.client.internal.MongoClientDelegate$DelegateOperationExecutor.execute(MongoClientDelegate.java:191) ~[mongodb-driver-sync-4.6.1.jar:?]
	at com.mongodb.client.internal.FindIterableImpl.first(FindIterableImpl.java:213) ~[mongodb-driver-sync-4.6.1.jar:?]
	at org.springframework.data.mongodb.core.MongoTemplate$FindOneCallback.doInCollection(MongoTemplate.java:3091) ~[spring-data-mongodb-3.4.5.jar:3.4.5]
	at org.springframework.data.mongodb.core.MongoTemplate$FindOneCallback.doInCollection(MongoTemplate.java:3062) ~[spring-data-mongodb-3.4.5.jar:3.4.5]
	at org.springframework.data.mongodb.core.MongoTemplate.executeFindOneInternal(MongoTemplate.java:2939) ~[spring-data-mongodb-3.4.5.jar:3.4.5]
	... 171 more
24/12/23 18:10:47.001 | ERROR | sale_service | 0 | BaseController.java: org.springframework.data.mongodb.MongoTransactionException: Query failed with error code 251 with name 'NoSuchTransaction' and error message 'Transaction with { txnNumber: 339 } has been aborted.' on server ac-jh96ukw-shard-00-02.h9186rq.mongodb.net:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 251 with name 'NoSuchTransaction' and error message 'Transaction with { txnNumber: 339 } has been aborted.' on server ac-jh96ukw-shard-00-02.h9186rq.mongodb.net:27017
24/12/23 18:10:47.001 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:10:47.001 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=true, message=Query failed with error code 251 with name 'NoSuchTran (truncated)...]
24/12/23 18:10:47.002 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:10:47.002 | WARN  | sale_service | 283289 | AuthTokenFilter.java: end request ==> POST  /api/v1/cart/payment
24/12/23 18:10:47.002 | WARN  | sale_service | 283391 | AuthTokenFilter.java: end request ==> POST  /api/v1/cart/payment
24/12/23 18:10:47.006 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:10:47.007 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:47.021 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:10:47.022 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:10:47.022 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:10:47.022 | WARN  | sale_service | 4889 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:10:47.022 | WARN  | sale_service | 4991 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:10:47.023 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:10:47.024 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:47.029 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:10:47.029 | INFO  | sale_service | 0 | DNSMonitor.java: Detected DNS change. Master redis://tcp.appengine.bfcplatform.vn:13437 has changed ip from 103.69.194.195 to 103.69.194.120
24/12/23 18:10:47.029 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:10:47.029 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:10:47.030 | WARN  | sale_service | 4933 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:10:47.030 | WARN  | sale_service | 5029 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:10:47.037 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:10:47.037 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:47.076 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:10:47.076 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:47.076 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:10:47.077 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:10:47.080 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:47.085 | INFO  | sale_service | 0 | ConnectionPool.java: 1 connections initialized for tcp.appengine.bfcplatform.vn/103.69.194.120:13437
24/12/23 18:10:47.092 | INFO  | sale_service | 0 | AbstractCoordinator.java: [Consumer clientId=consumer-bizfly-7-453-PaymentTransaction-3, groupId=bizfly-7-453-PaymentTransaction] Discovered group coordinator 123.31.11.247:9094 (id: 2147483643 rack: null)
24/12/23 18:10:47.214 | INFO  | sale_service | 0 | AbstractCoordinator.java: [Consumer clientId=consumer-bizfly-7-453-PaymentTransaction-3, groupId=bizfly-7-453-PaymentTransaction] Attempt to heartbeat with Generation{generationId=1915, memberId='consumer-bizfly-7-453-PaymentTransaction-3-0250a5f0-427f-486e-a4a0-97bb3c2c8c51', protocol='range'} and group instance id Optional.empty failed due to UNKNOWN_MEMBER_ID, resetting generation
24/12/23 18:10:47.214 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:47.214 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:47.214 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:47.214 | INFO  | sale_service | 0 | AbstractCoordinator.java: [Consumer clientId=consumer-bizfly-7-453-PaymentTransaction-3, groupId=bizfly-7-453-PaymentTransaction] Resetting generation due to: encountered UNKNOWN_MEMBER_ID from HEARTBEAT response
24/12/23 18:10:47.214 | INFO  | sale_service | 0 | AbstractCoordinator.java: [Consumer clientId=consumer-bizfly-7-453-PaymentTransaction-3, groupId=bizfly-7-453-PaymentTransaction] Request joining group due to: encountered UNKNOWN_MEMBER_ID from HEARTBEAT response
24/12/23 18:10:47.215 | INFO  | sale_service | 0 | AbstractCoordinator.java: [Consumer clientId=consumer-bizfly-7-453-PaymentTransaction-3, groupId=bizfly-7-453-PaymentTransaction] (Re-)joining group
24/12/23 18:10:47.229 | INFO  | sale_service | 0 | AbstractCoordinator.java: [Consumer clientId=consumer-bizfly-7-453-PaymentTransaction-3, groupId=bizfly-7-453-PaymentTransaction] Request joining group due to: need to re-join with the given member-id
24/12/23 18:10:47.229 | INFO  | sale_service | 0 | AbstractCoordinator.java: [Consumer clientId=consumer-bizfly-7-453-PaymentTransaction-3, groupId=bizfly-7-453-PaymentTransaction] (Re-)joining group
24/12/23 18:10:47.241 | INFO  | sale_service | 0 | AbstractCoordinator.java: [Consumer clientId=consumer-bizfly-7-453-PaymentTransaction-2, groupId=bizfly-7-453-PaymentTransaction] Attempt to heartbeat with Generation{generationId=1915, memberId='consumer-bizfly-7-453-PaymentTransaction-2-c2ba9600-c154-41e1-9cdf-ed5784464b00', protocol='range'} and group instance id Optional.empty failed due to UNKNOWN_MEMBER_ID, resetting generation
24/12/23 18:10:47.241 | INFO  | sale_service | 0 | AbstractCoordinator.java: [Consumer clientId=consumer-bizfly-7-453-PaymentTransaction-1, groupId=bizfly-7-453-PaymentTransaction] Attempt to heartbeat with Generation{generationId=1915, memberId='consumer-bizfly-7-453-PaymentTransaction-1-74fd23ad-0dd5-4563-b16c-8f4a5973e2d3', protocol='range'} and group instance id Optional.empty failed due to UNKNOWN_MEMBER_ID, resetting generation
24/12/23 18:10:47.242 | INFO  | sale_service | 0 | AbstractCoordinator.java: [Consumer clientId=consumer-bizfly-7-453-PaymentTransaction-2, groupId=bizfly-7-453-PaymentTransaction] Resetting generation due to: encountered UNKNOWN_MEMBER_ID from HEARTBEAT response
24/12/23 18:10:47.242 | INFO  | sale_service | 0 | AbstractCoordinator.java: [Consumer clientId=consumer-bizfly-7-453-PaymentTransaction-1, groupId=bizfly-7-453-PaymentTransaction] Resetting generation due to: encountered UNKNOWN_MEMBER_ID from HEARTBEAT response
24/12/23 18:10:47.242 | INFO  | sale_service | 0 | AbstractCoordinator.java: [Consumer clientId=consumer-bizfly-7-453-PaymentTransaction-2, groupId=bizfly-7-453-PaymentTransaction] Request joining group due to: encountered UNKNOWN_MEMBER_ID from HEARTBEAT response
24/12/23 18:10:47.242 | INFO  | sale_service | 0 | AbstractCoordinator.java: [Consumer clientId=consumer-bizfly-7-453-PaymentTransaction-1, groupId=bizfly-7-453-PaymentTransaction] Request joining group due to: encountered UNKNOWN_MEMBER_ID from HEARTBEAT response
24/12/23 18:10:47.242 | INFO  | sale_service | 0 | AbstractCoordinator.java: [Consumer clientId=consumer-bizfly-7-453-PaymentTransaction-2, groupId=bizfly-7-453-PaymentTransaction] (Re-)joining group
24/12/23 18:10:47.242 | INFO  | sale_service | 0 | ConsumerCoordinator.java: [Consumer clientId=consumer-bizfly-7-453-PaymentTransaction-1, groupId=bizfly-7-453-PaymentTransaction] Failing OffsetCommit request since the consumer is not part of an active group
24/12/23 18:10:47.243 | WARN  | sale_service | 0 | ConsumerCoordinator.java: [Consumer clientId=consumer-bizfly-7-453-PaymentTransaction-1, groupId=bizfly-7-453-PaymentTransaction] Synchronous auto-commit of offsets {bizfly-7-453-PaymentTransaction-0=OffsetAndMetadata{offset=1782, leaderEpoch=0, metadata=''}} failed: Offset commit cannot be completed since the consumer is not part of an active group for auto partition assignment; it is likely that the consumer was kicked out of the group.
24/12/23 18:10:47.243 | INFO  | sale_service | 0 | ConsumerCoordinator.java: [Consumer clientId=consumer-bizfly-7-453-PaymentTransaction-1, groupId=bizfly-7-453-PaymentTransaction] Giving away all assigned partitions as lost since generation has been reset,indicating that consumer is no longer part of the group
24/12/23 18:10:47.243 | INFO  | sale_service | 0 | ConsumerCoordinator.java: [Consumer clientId=consumer-bizfly-7-453-PaymentTransaction-1, groupId=bizfly-7-453-PaymentTransaction] Lost previously assigned partitions bizfly-7-453-PaymentTransaction-0
24/12/23 18:10:47.244 | INFO  | sale_service | 0 | LogAccessor.java: bizfly-7-453-PaymentTransaction: partitions lost: [bizfly-7-453-PaymentTransaction-0]
24/12/23 18:10:47.244 | INFO  | sale_service | 0 | LogAccessor.java: bizfly-7-453-PaymentTransaction: partitions revoked: [bizfly-7-453-PaymentTransaction-0]
24/12/23 18:10:47.244 | INFO  | sale_service | 0 | AbstractCoordinator.java: [Consumer clientId=consumer-bizfly-7-453-PaymentTransaction-1, groupId=bizfly-7-453-PaymentTransaction] (Re-)joining group
24/12/23 18:10:47.245 | ERROR | sale_service | 0 | ConsumerCoordinator.java: [Consumer clientId=consumer-bizfly-7-453-PaymentTransaction-1, groupId=bizfly-7-453-PaymentTransaction] Offset commit failed on partition bizfly-7-453-PaymentTransaction-0 at offset 1782: The coordinator is not aware of this member.
24/12/23 18:10:47.245 | INFO  | sale_service | 0 | ConsumerCoordinator.java: [Consumer clientId=consumer-bizfly-7-453-PaymentTransaction-1, groupId=bizfly-7-453-PaymentTransaction] OffsetCommit failed with Generation{generationId=1915, memberId='consumer-bizfly-7-453-PaymentTransaction-1-74fd23ad-0dd5-4563-b16c-8f4a5973e2d3', protocol='range'}: The coordinator is not aware of this member.
24/12/23 18:10:47.245 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:10:47.245 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:10:47.246 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:10:47.246 | WARN  | sale_service | 271 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:10:47.246 | WARN  | sale_service | 5135 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:10:47.246 | WARN  | sale_service | 0 | ConsumerCoordinator.java: [Consumer clientId=consumer-bizfly-7-453-PaymentTransaction-1, groupId=bizfly-7-453-PaymentTransaction] Asynchronous auto-commit of offsets {bizfly-7-453-PaymentTransaction-0=OffsetAndMetadata{offset=1782, leaderEpoch=0, metadata=''}} failed: Offset commit cannot be completed since the consumer member's generation is already stale, meaning it has already participated another rebalance and got a new generation. You can try completing the rebalance by calling poll() and then retry commit again
24/12/23 18:10:47.247 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:10:47.247 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:47.256 | INFO  | sale_service | 0 | AbstractCoordinator.java: [Consumer clientId=consumer-bizfly-7-453-PaymentTransaction-2, groupId=bizfly-7-453-PaymentTransaction] Request joining group due to: need to re-join with the given member-id
24/12/23 18:10:47.256 | INFO  | sale_service | 0 | AbstractCoordinator.java: [Consumer clientId=consumer-bizfly-7-453-PaymentTransaction-1, groupId=bizfly-7-453-PaymentTransaction] Request joining group due to: need to re-join with the given member-id
24/12/23 18:10:47.256 | INFO  | sale_service | 0 | AbstractCoordinator.java: [Consumer clientId=consumer-bizfly-7-453-PaymentTransaction-2, groupId=bizfly-7-453-PaymentTransaction] (Re-)joining group
24/12/23 18:10:47.256 | INFO  | sale_service | 0 | AbstractCoordinator.java: [Consumer clientId=consumer-bizfly-7-453-PaymentTransaction-1, groupId=bizfly-7-453-PaymentTransaction] (Re-)joining group
24/12/23 18:10:47.261 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:10:47.261 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:10:47.261 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:10:47.261 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:10:47.262 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:10:47.262 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:10:47.307 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:10:47.307 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:10:47.308 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:10:47.308 | WARN  | sale_service | 232 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:10:47.308 | WARN  | sale_service | 338 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:10:47.309 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:10:47.309 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:47.312 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:10:47.312 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:10:47.312 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:10:47.312 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:10:47.312 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:10:47.312 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:10:47.313 | WARN  | sale_service | 233 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:10:47.313 | WARN  | sale_service | 335 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:10:47.314 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:10:47.315 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:47.320 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:10:47.320 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:10:47.321 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:10:47.321 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:10:47.321 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:10:47.321 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:10:47.345 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:47.357 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:10:47.357 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:10:47.357 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:10:47.357 | WARN  | sale_service | 349 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:10:47.358 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:10:47.359 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:47.370 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:10:47.370 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:10:47.370 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:10:47.370 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:10:47.371 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:10:47.371 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:10:47.371 | WARN  | sale_service | 346 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:10:47.371 | WARN  | sale_service | 333 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:10:47.372 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:10:47.372 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:10:47.373 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:47.373 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:47.408 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:47.412 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:47.443 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:10:47.443 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:10:47.443 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:10:47.457 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:47.471 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:47.475 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:47.494 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:10:47.494 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:10:47.494 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:10:47.495 | WARN  | sale_service | 246 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:10:47.495 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:10:47.496 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:47.509 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:10:47.509 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:10:47.510 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:10:47.510 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:10:47.510 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:10:47.510 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:10:47.560 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:10:47.560 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:10:47.560 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:10:47.560 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:10:47.560 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:10:47.560 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:10:47.560 | WARN  | sale_service | 250 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:10:47.561 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:10:47.562 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:47.563 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:10:47.563 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:10:47.563 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:10:47.563 | WARN  | sale_service | 247 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:10:47.564 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:10:47.565 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:47.573 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:10:47.573 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:10:47.575 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:10:47.581 | INFO  | sale_service | 0 | MasterSlaveEntry.java: master tcp.appengine.bfcplatform.vn/103.69.194.195:13437 has changed to tcp.appengine.bfcplatform.vn/103.69.194.120:13437
24/12/23 18:10:47.581 | INFO  | sale_service | 0 | ConnectionPool.java: 24 connections initialized for tcp.appengine.bfcplatform.vn/103.69.194.120:13437
24/12/23 18:10:47.581 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:10:47.581 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:10:47.582 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:10:47.603 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:47.617 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:10:47.617 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:10:47.617 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:10:47.618 | WARN  | sale_service | 259 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:10:47.619 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:10:47.620 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:47.642 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:10:47.642 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:10:47.643 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:10:47.643 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:10:47.643 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:10:47.643 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:10:47.643 | WARN  | sale_service | 271 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:10:47.643 | WARN  | sale_service | 271 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:10:47.648 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:10:47.648 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:10:47.649 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:47.649 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:47.664 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:47.664 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:47.702 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:10:47.702 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:10:47.703 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:10:47.785 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:47.786 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:47.789 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:10:47.789 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:47.790 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:10:47.790 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:10:47.790 | WARN  | sale_service | 295 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:10:47.791 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:10:47.792 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:47.833 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:10:47.833 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:10:47.833 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:10:47.833 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:10:47.833 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:10:47.833 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:10:47.877 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:10:47.878 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:10:47.878 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:10:47.884 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:10:47.884 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:10:47.884 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:10:47.884 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:10:47.884 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:10:47.884 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:10:47.884 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:10:47.884 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:10:47.884 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:10:47.884 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:10:47.884 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:10:47.884 | WARN  | sale_service | 220 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:10:47.884 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:10:47.884 | WARN  | sale_service | 323 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:10:47.884 | WARN  | sale_service | 220 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:10:47.885 | WARN  | sale_service | 320 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:10:47.886 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:10:47.886 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:10:47.886 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:47.886 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:47.898 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:47.924 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:10:47.924 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:10:47.925 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:10:47.925 | WARN  | sale_service | 305 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:10:47.926 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:10:47.926 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:47.929 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:10:47.929 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:10:47.929 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:10:47.929 | WARN  | sale_service | 279 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:10:47.930 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:10:47.931 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:47.933 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:10:47.933 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:10:47.934 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:10:47.934 | WARN  | sale_service | 284 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:10:47.935 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:10:47.936 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:47.985 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:47.985 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:47.992 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:10:47.992 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:10:47.993 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:10:48.026 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:48.026 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:48.032 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:48.041 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:10:48.041 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:10:48.041 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:10:48.041 | WARN  | sale_service | 250 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:10:48.042 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:10:48.043 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:48.077 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:10:48.077 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:10:48.078 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:10:48.080 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:10:48.080 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:10:48.080 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:10:48.116 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:10:48.116 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:10:48.117 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:10:48.118 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:10:48.118 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:10:48.118 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:10:48.122 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:10:48.122 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:10:48.122 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:10:48.125 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:10:48.126 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:10:48.126 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:10:48.126 | WARN  | sale_service | 240 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:10:48.127 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:10:48.127 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:48.129 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:10:48.129 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:10:48.129 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:10:48.129 | WARN  | sale_service | 243 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:10:48.130 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:10:48.131 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:48.140 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:48.163 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:10:48.163 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:10:48.164 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:10:48.164 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:10:48.164 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:10:48.164 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:10:48.164 | WARN  | sale_service | 234 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:10:48.164 | WARN  | sale_service | 238 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:10:48.166 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:10:48.166 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:10:48.166 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:48.166 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:48.169 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:10:48.169 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:10:48.169 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:10:48.169 | WARN  | sale_service | 234 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:10:48.170 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:10:48.171 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:48.217 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:48.226 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:48.233 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:10:48.233 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:10:48.233 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:10:48.258 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:48.258 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:48.278 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:48.283 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:10:48.283 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:10:48.283 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:10:48.283 | WARN  | sale_service | 239 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:10:48.286 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:10:48.287 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:48.322 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:10:48.322 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:10:48.323 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:10:48.328 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:10:48.328 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:10:48.329 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:10:48.356 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:10:48.356 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:10:48.356 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:10:48.356 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:10:48.356 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:10:48.356 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:10:48.368 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:10:48.368 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:10:48.368 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:10:48.369 | WARN  | sale_service | 241 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:10:48.369 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:10:48.370 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:48.385 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:10:48.385 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:10:48.386 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:10:48.387 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:10:48.388 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:10:48.388 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:10:48.388 | WARN  | sale_service | 256 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:10:48.389 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:48.394 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:10:48.394 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:48.403 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:10:48.403 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:10:48.403 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:10:48.403 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:10:48.403 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:10:48.403 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:10:48.403 | WARN  | sale_service | 236 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:10:48.403 | WARN  | sale_service | 236 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:10:48.403 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:10:48.404 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:10:48.404 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:48.405 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:48.431 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:10:48.431 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:10:48.432 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:10:48.432 | WARN  | sale_service | 262 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:10:48.433 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:10:48.434 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:48.788 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:10:48.788 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:48.789 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:10:48.791 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:10:48.791 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:48.832 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:48.832 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:48.833 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:48.840 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:10:48.840 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:10:48.841 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:10:48.841 | WARN  | sale_service | 453 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:10:48.841 | WARN  | sale_service | 555 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:10:48.842 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:10:48.842 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:48.891 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:10:48.892 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:10:48.892 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:10:48.898 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:10:48.898 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:10:48.899 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:10:48.928 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:10:48.928 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:10:48.928 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:10:48.928 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:10:48.928 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:10:48.928 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:10:48.928 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:10:48.928 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:10:48.928 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:10:48.942 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:10:48.943 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:10:48.943 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:10:48.943 | WARN  | sale_service | 549 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:10:48.944 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:10:48.944 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:10:48.944 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:10:48.944 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:10:48.944 | WARN  | sale_service | 574 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:10:48.945 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:48.945 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:48.946 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:10:48.947 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:48.974 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:10:48.974 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:10:48.975 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:10:48.975 | WARN  | sale_service | 541 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:10:48.975 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:10:48.975 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:10:48.975 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:10:48.975 | WARN  | sale_service | 570 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:10:48.975 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:10:48.976 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:10:48.976 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:10:48.976 | WARN  | sale_service | 571 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:10:48.977 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:10:48.977 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:10:48.977 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:10:48.977 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:48.978 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:48.978 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:49.046 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:10:49.046 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:10:49.046 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:49.046 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:49.047 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:10:49.072 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:49.072 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:49.072 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:49.095 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:10:49.095 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:10:49.095 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:10:49.095 | WARN  | sale_service | 253 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:10:49.096 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:10:49.097 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:49.138 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:10:49.139 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:10:49.139 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:10:49.140 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:10:49.140 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:10:49.141 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:10:49.159 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:10:49.159 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:10:49.160 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:10:49.174 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:10:49.174 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:10:49.175 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:10:49.175 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:10:49.176 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:10:49.176 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:10:49.187 | INFO  | sale_service | 0 | AbstractCoordinator.java: [Consumer clientId=consumer-bizfly-7-453-PaymentTransaction-2, groupId=bizfly-7-453-PaymentTransaction] Successfully joined group with generation Generation{generationId=1917, memberId='consumer-bizfly-7-453-PaymentTransaction-2-962a7f36-2637-4b5d-82e9-d99fd8125995', protocol='range'}
24/12/23 18:10:49.187 | INFO  | sale_service | 0 | AbstractCoordinator.java: [Consumer clientId=consumer-bizfly-7-453-PaymentTransaction-3, groupId=bizfly-7-453-PaymentTransaction] Successfully joined group with generation Generation{generationId=1917, memberId='consumer-bizfly-7-453-PaymentTransaction-3-7cf697b8-178b-40b5-94c7-fceafbe0d9e4', protocol='range'}
24/12/23 18:10:49.187 | INFO  | sale_service | 0 | AbstractCoordinator.java: [Consumer clientId=consumer-bizfly-7-453-PaymentTransaction-1, groupId=bizfly-7-453-PaymentTransaction] Successfully joined group with generation Generation{generationId=1917, memberId='consumer-bizfly-7-453-PaymentTransaction-1-8119e471-fd87-42e7-8de8-5aa69844c720', protocol='range'}
24/12/23 18:10:49.188 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:10:49.188 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:10:49.190 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:10:49.190 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:10:49.190 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:10:49.190 | WARN  | sale_service | 245 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:10:49.190 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:10:49.191 | WARN  | sale_service | 245 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:10:49.193 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:10:49.194 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:10:49.196 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:49.196 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:49.196 | INFO  | sale_service | 0 | AbstractCoordinator.java: [Consumer clientId=consumer-bizfly-7-453-PaymentTransaction-3, groupId=bizfly-7-453-PaymentTransaction] Successfully synced group in generation Generation{generationId=1917, memberId='consumer-bizfly-7-453-PaymentTransaction-3-7cf697b8-178b-40b5-94c7-fceafbe0d9e4', protocol='range'}
24/12/23 18:10:49.197 | INFO  | sale_service | 0 | AbstractCoordinator.java: [Consumer clientId=consumer-bizfly-7-453-PaymentTransaction-2, groupId=bizfly-7-453-PaymentTransaction] Successfully synced group in generation Generation{generationId=1917, memberId='consumer-bizfly-7-453-PaymentTransaction-2-962a7f36-2637-4b5d-82e9-d99fd8125995', protocol='range'}
24/12/23 18:10:49.197 | INFO  | sale_service | 0 | ConsumerCoordinator.java: [Consumer clientId=consumer-bizfly-7-453-PaymentTransaction-3, groupId=bizfly-7-453-PaymentTransaction] Notifying assignor about the new Assignment(partitions=[])
24/12/23 18:10:49.197 | INFO  | sale_service | 0 | ConsumerCoordinator.java: [Consumer clientId=consumer-bizfly-7-453-PaymentTransaction-2, groupId=bizfly-7-453-PaymentTransaction] Notifying assignor about the new Assignment(partitions=[])
24/12/23 18:10:49.198 | INFO  | sale_service | 0 | ConsumerCoordinator.java: [Consumer clientId=consumer-bizfly-7-453-PaymentTransaction-3, groupId=bizfly-7-453-PaymentTransaction] Adding newly assigned partitions: 
24/12/23 18:10:49.198 | INFO  | sale_service | 0 | ConsumerCoordinator.java: [Consumer clientId=consumer-bizfly-7-453-PaymentTransaction-2, groupId=bizfly-7-453-PaymentTransaction] Adding newly assigned partitions: 
24/12/23 18:10:49.197 | INFO  | sale_service | 0 | AbstractCoordinator.java: [Consumer clientId=consumer-bizfly-7-453-PaymentTransaction-1, groupId=bizfly-7-453-PaymentTransaction] Successfully synced group in generation Generation{generationId=1917, memberId='consumer-bizfly-7-453-PaymentTransaction-1-8119e471-fd87-42e7-8de8-5aa69844c720', protocol='range'}
24/12/23 18:10:49.198 | INFO  | sale_service | 0 | LogAccessor.java: bizfly-7-453-PaymentTransaction: partitions assigned: []
24/12/23 18:10:49.198 | INFO  | sale_service | 0 | LogAccessor.java: bizfly-7-453-PaymentTransaction: partitions assigned: []
24/12/23 18:10:49.198 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:49.199 | INFO  | sale_service | 0 | ConsumerCoordinator.java: [Consumer clientId=consumer-bizfly-7-453-PaymentTransaction-1, groupId=bizfly-7-453-PaymentTransaction] Notifying assignor about the new Assignment(partitions=[bizfly-7-453-PaymentTransaction-0])
24/12/23 18:10:49.199 | INFO  | sale_service | 0 | ConsumerCoordinator.java: [Consumer clientId=consumer-bizfly-7-453-PaymentTransaction-1, groupId=bizfly-7-453-PaymentTransaction] Adding newly assigned partitions: bizfly-7-453-PaymentTransaction-0
24/12/23 18:10:49.208 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:10:49.208 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:10:49.209 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:10:49.209 | WARN  | sale_service | 232 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:10:49.214 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:10:49.215 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:49.220 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:10:49.220 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:10:49.221 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:10:49.221 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:10:49.221 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:10:49.221 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:10:49.221 | WARN  | sale_service | 244 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:10:49.221 | WARN  | sale_service | 244 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:10:49.224 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:10:49.223 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:10:49.225 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:49.225 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:49.226 | INFO  | sale_service | 0 | ConsumerCoordinator.java: [Consumer clientId=consumer-bizfly-7-453-PaymentTransaction-1, groupId=bizfly-7-453-PaymentTransaction] Setting offset for partition bizfly-7-453-PaymentTransaction-0 to the committed offset FetchPosition{offset=1782, offsetEpoch=Optional[0], currentLeader=LeaderAndEpoch{leader=Optional[123.31.11.25:9094 (id: 1 rack: null)], epoch=0}}
24/12/23 18:10:49.234 | INFO  | sale_service | 0 | LogAccessor.java: bizfly-7-453-PaymentTransaction: partitions assigned: [bizfly-7-453-PaymentTransaction-0]
24/12/23 18:10:49.300 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:49.300 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:49.309 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:49.312 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:10:49.312 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:10:49.312 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:10:49.315 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:49.315 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:49.359 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:10:49.359 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:10:49.359 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:10:49.360 | WARN  | sale_service | 263 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:10:49.360 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:10:49.361 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:49.391 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:10:49.392 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:10:49.392 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:10:49.393 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:10:49.393 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:10:49.394 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:10:49.401 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:10:49.401 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:10:49.401 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:10:49.405 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:10:49.405 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:10:49.405 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:10:49.405 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:10:49.405 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:10:49.405 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:10:49.438 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:10:49.438 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:10:49.438 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:10:49.439 | WARN  | sale_service | 243 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:10:49.439 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:10:49.440 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:49.447 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:10:49.447 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:10:49.447 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:10:49.447 | WARN  | sale_service | 252 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:10:49.447 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:10:49.448 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:49.795 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:10:49.796 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:10:49.797 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:10:49.797 | WARN  | sale_service | 482 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:10:49.797 | WARN  | sale_service | 572 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:10:49.800 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:10:49.803 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:49.803 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:10:49.804 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:10:49.804 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:10:49.804 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:49.804 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:10:49.805 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:10:49.806 | WARN  | sale_service | 491 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:10:49.806 | WARN  | sale_service | 581 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:10:49.806 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:10:49.807 | WARN  | sale_service | 498 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:10:49.807 | WARN  | sale_service | 591 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:10:49.810 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:10:49.810 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:10:49.811 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:49.811 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:49.852 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:49.859 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:49.900 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:49.909 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:10:49.909 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:10:49.910 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:10:49.912 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:49.912 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:49.978 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:10:49.978 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:10:49.978 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:10:49.978 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:10:49.978 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:10:49.978 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:10:49.988 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:10:49.988 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:10:49.989 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:10:49.989 | WARN  | sale_service | 627 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:10:49.990 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:10:49.990 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:50.028 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:10:50.028 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:10:50.028 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:10:50.028 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:10:50.029 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:10:50.029 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:10:50.029 | WARN  | sale_service | 581 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:10:50.029 | WARN  | sale_service | 589 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:10:50.030 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:10:50.030 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:10:50.030 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:50.030 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:50.035 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:10:50.035 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:10:50.036 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:10:50.040 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:10:50.040 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:10:50.040 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:10:50.040 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:10:50.040 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:10:50.040 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:10:50.086 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:10:50.086 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:10:50.086 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:10:50.086 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:10:50.086 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:50.086 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:10:50.086 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:10:50.087 | WARN  | sale_service | 277 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:10:50.087 | WARN  | sale_service | 286 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:10:50.088 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:10:50.088 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:10:50.088 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:50.088 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:50.093 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:10:50.093 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:10:50.093 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:10:50.093 | WARN  | sale_service | 283 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:10:50.094 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:10:50.095 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:50.122 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:50.122 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:50.175 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:10:50.175 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:10:50.176 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:10:50.208 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:50.208 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:50.208 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:50.216 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:10:50.216 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:10:50.216 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:10:50.222 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:10:50.223 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:10:50.223 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:10:50.223 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:10:50.223 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:10:50.223 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:10:50.223 | WARN  | sale_service | 233 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:10:50.225 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:10:50.226 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:50.261 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:10:50.261 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:10:50.261 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:10:50.261 | WARN  | sale_service | 231 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:10:50.263 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:10:50.264 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:50.275 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:10:50.276 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:10:50.276 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:10:50.276 | WARN  | sale_service | 246 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:10:50.277 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:10:50.278 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:50.311 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:10:50.311 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:10:50.311 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:10:50.315 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:10:50.315 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:10:50.316 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:10:50.316 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:10:50.316 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:10:50.316 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:10:50.324 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:50.356 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:10:50.357 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:10:50.357 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:10:50.357 | WARN  | sale_service | 268 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:10:50.358 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:10:50.358 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:50.369 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:10:50.370 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:10:50.370 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:50.370 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:50.370 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:10:50.370 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:10:50.370 | WARN  | sale_service | 274 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:10:50.370 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:10:50.370 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:10:50.371 | WARN  | sale_service | 281 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:10:50.371 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:10:50.371 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:10:50.372 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:50.372 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:50.417 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:10:50.418 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:10:50.418 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:10:50.453 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:50.464 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:10:50.464 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:10:50.464 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:10:50.468 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:10:50.468 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:10:50.468 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:10:50.468 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:50.469 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:10:50.469 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:10:50.469 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:10:50.469 | WARN  | sale_service | 242 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:10:50.470 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:10:50.471 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:50.472 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:50.788 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:10:50.788 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:10:50.788 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:10:50.788 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:10:50.788 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:10:50.788 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:10:50.788 | WARN  | sale_service | 419 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:10:50.788 | WARN  | sale_service | 419 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:10:50.788 | WARN  | sale_service | 510 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:10:50.788 | WARN  | sale_service | 525 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:10:50.789 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:10:50.790 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:10:50.790 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:50.790 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:50.831 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:10:50.831 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:10:50.831 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:10:50.835 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:10:50.835 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:10:50.836 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:10:50.836 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:10:50.836 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:50.836 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:10:50.836 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:10:50.877 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:10:50.877 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:10:50.878 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:10:50.878 | WARN  | sale_service | 425 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:10:50.878 | WARN  | sale_service | 520 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:10:50.878 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:10:50.879 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:50.882 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:50.883 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:50.889 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:10:50.889 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:10:50.889 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:10:50.889 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:10:50.889 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:10:50.889 | WARN  | sale_service | 421 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:10:50.889 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:10:50.889 | WARN  | sale_service | 517 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:10:50.890 | WARN  | sale_service | 419 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:10:50.890 | WARN  | sale_service | 518 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:10:50.891 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:10:50.891 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:10:50.891 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:50.891 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:50.935 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:10:50.936 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:10:50.936 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:10:50.974 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:10:50.974 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:10:50.974 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:10:50.974 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:10:50.974 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:10:50.974 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:50.975 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:10:50.983 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:10:50.983 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:10:50.983 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:10:50.983 | WARN  | sale_service | 512 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:10:50.984 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:10:50.985 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:50.986 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:50.986 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:51.019 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:10:51.019 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:10:51.019 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:10:51.019 | WARN  | sale_service | 228 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:10:51.019 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:10:51.020 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:51.030 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:10:51.030 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:10:51.030 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:10:51.030 | WARN  | sale_service | 240 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:10:51.031 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:10:51.032 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:51.073 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:10:51.073 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:10:51.073 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:10:51.084 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:10:51.084 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:10:51.085 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:10:51.085 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:10:51.085 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:51.085 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:10:51.085 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:10:51.118 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:10:51.118 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:10:51.118 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:51.118 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:10:51.119 | WARN  | sale_service | 240 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:10:51.119 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:10:51.120 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:51.123 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:51.133 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:10:51.133 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:10:51.134 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:10:51.134 | WARN  | sale_service | 243 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:10:51.135 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:10:51.136 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:51.137 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:10:51.137 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:10:51.137 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:10:51.138 | WARN  | sale_service | 247 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:10:51.138 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:10:51.139 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:51.195 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:10:51.196 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:10:51.196 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:10:51.213 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:10:51.213 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:10:51.213 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:10:51.213 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:10:51.214 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:51.214 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:10:51.214 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:10:51.242 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:51.242 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:10:51.242 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:10:51.243 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:10:51.243 | WARN  | sale_service | 258 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:10:51.244 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:10:51.245 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:51.248 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:51.269 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:10:51.270 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:10:51.270 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:10:51.270 | WARN  | sale_service | 249 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:10:51.271 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:10:51.272 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:51.274 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:10:51.274 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:10:51.275 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:10:51.275 | WARN  | sale_service | 243 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:10:51.277 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:10:51.278 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:51.316 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:10:51.316 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:10:51.316 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:10:51.338 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:10:51.338 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:10:51.339 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:10:51.350 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:10:51.350 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:10:51.350 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:10:51.357 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:51.366 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:10:51.366 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:10:51.366 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:10:51.366 | WARN  | sale_service | 245 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:10:51.367 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:10:51.368 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:51.375 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:51.375 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:51.387 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:10:51.388 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:10:51.388 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:10:51.388 | WARN  | sale_service | 248 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:10:51.389 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:10:51.390 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:51.411 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:10:51.412 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:10:51.412 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:10:51.412 | WARN  | sale_service | 276 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:10:51.413 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:10:51.417 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:10:51.418 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:10:51.419 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:51.461 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:10:51.461 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:10:51.461 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:10:51.790 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:10:51.790 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:10:51.791 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:10:51.791 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:51.792 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:10:51.793 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:10:51.793 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:10:51.796 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:51.799 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:10:51.799 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:10:51.800 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:10:51.801 | WARN  | sale_service | 445 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:10:51.801 | WARN  | sale_service | 556 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:10:51.803 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:10:51.805 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:51.839 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:10:51.839 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:10:51.839 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:10:51.839 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:10:51.840 | WARN  | sale_service | 465 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:10:51.840 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:10:51.840 | WARN  | sale_service | 561 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:10:51.840 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:10:51.840 | WARN  | sale_service | 466 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:10:51.840 | WARN  | sale_service | 567 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:10:51.841 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:10:51.842 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:10:51.843 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:10:51.843 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:51.844 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:51.845 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:10:51.846 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:51.883 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:10:51.884 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:10:51.884 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:10:51.896 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:10:51.896 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:10:51.896 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:10:51.905 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:51.929 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:10:51.929 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:10:51.930 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:10:51.930 | WARN  | sale_service | 541 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:10:51.931 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:10:51.933 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:10:51.933 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:10:51.933 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:51.934 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:10:51.934 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:10:51.936 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:10:51.936 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:51.939 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:51.942 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:10:51.942 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:10:51.943 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:10:51.943 | WARN  | sale_service | 575 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:10:51.944 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:10:51.945 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:51.979 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:10:51.979 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:10:51.980 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:10:51.980 | WARN  | sale_service | 561 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:10:51.981 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:10:51.984 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:10:51.986 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:10:51.987 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:51.998 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:10:51.998 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:10:51.998 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:10:52.024 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:10:52.024 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:10:52.025 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:10:52.026 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:52.030 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:10:52.031 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:10:52.031 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:10:52.040 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:52.046 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:10:52.046 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:10:52.047 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:10:52.047 | WARN  | sale_service | 243 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:10:52.048 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:10:52.049 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:52.071 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:10:52.071 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:10:52.072 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:10:52.072 | WARN  | sale_service | 229 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:10:52.072 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:10:52.075 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:10:52.076 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:10:52.077 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:10:52.077 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:52.077 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:52.077 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:10:52.077 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:10:52.077 | WARN  | sale_service | 232 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:10:52.078 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:10:52.079 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:52.118 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:10:52.118 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:10:52.119 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:10:52.138 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:10:52.138 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:10:52.139 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:10:52.144 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:52.167 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:10:52.167 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:10:52.167 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:10:52.167 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:10:52.167 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:10:52.167 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:52.167 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:10:52.167 | WARN  | sale_service | 230 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:10:52.169 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:10:52.169 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:52.171 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:10:52.173 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:10:52.174 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:52.187 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:10:52.188 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:10:52.188 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:10:52.188 | WARN  | sale_service | 243 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:10:52.189 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:10:52.190 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:52.213 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:10:52.213 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:10:52.213 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:10:52.214 | WARN  | sale_service | 227 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:10:52.214 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:10:52.218 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:10:52.219 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:10:52.222 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:10:52.223 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:10:52.225 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:10:52.227 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:10:52.229 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:10:52.230 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:10:52.232 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:10:52.233 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:10:52.235 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:10:52.237 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:10:52.237 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:10:52.237 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:10:52.238 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:10:52.241 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:10:52.242 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:10:52.244 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:10:52.246 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:10:52.248 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:10:52.249 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:10:52.251 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:10:52.252 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:10:52.254 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:10:52.255 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:10:52.257 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:10:52.258 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:10:52.261 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:10:52.262 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:10:52.263 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:10:52.263 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:10:52.264 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:10:52.264 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:10:52.264 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:10:52.264 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:10:52.265 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:10:52.266 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:52.266 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:10:52.268 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:10:52.270 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:10:52.272 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:10:52.273 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:10:52.275 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:10:52.275 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:10:52.278 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:10:52.279 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:10:52.282 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:10:52.283 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:10:52.283 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:52.284 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:10:52.284 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:10:52.284 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:10:52.285 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:10:52.285 | WARN  | sale_service | 237 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:10:52.286 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:10:52.288 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:10:52.288 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:10:52.289 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:10:52.291 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:10:52.292 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:10:52.292 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:10:52.293 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:10:52.295 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:10:52.295 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:10:52.296 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:10:52.297 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:10:52.297 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:10:52.298 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:10:52.299 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:10:52.301 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:10:52.301 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:10:52.302 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:52.303 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:10:52.305 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:10:52.307 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:10:52.308 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:10:52.308 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:10:52.308 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:10:52.308 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:10:52.309 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:10:52.309 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:10:52.309 | WARN  | sale_service | 233 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:10:52.309 | WARN  | sale_service | 230 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:10:52.309 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:10:52.310 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:10:52.311 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:10:52.311 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:52.311 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:10:52.312 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:10:52.312 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:52.362 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:10:52.362 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:10:52.362 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:10:52.381 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:10:52.381 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:10:52.382 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:10:52.396 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:52.403 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:52.403 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:52.409 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:10:52.409 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:10:52.410 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:10:52.410 | WARN  | sale_service | 237 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:10:52.430 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:10:52.431 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:10:52.431 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:10:52.431 | WARN  | sale_service | 241 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:10:52.789 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:10:52.790 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:10:52.791 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:10:52.792 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:10:52.792 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:10:52.793 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:10:52.793 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:10:52.793 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:10:52.794 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:10:52.837 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:10:52.837 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:10:52.837 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:10:52.838 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:10:52.838 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:10:52.838 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:10:52.838 | WARN  | sale_service | 435 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:10:52.838 | WARN  | sale_service | 441 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:10:52.838 | WARN  | sale_service | 525 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:10:52.838 | WARN  | sale_service | 536 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:10:52.839 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:10:52.840 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:10:52.840 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:10:52.840 | WARN  | sale_service | 437 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:10:52.841 | WARN  | sale_service | 529 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:10:52.842 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:10:52.843 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:52.848 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:10:52.850 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:52.942 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:52.942 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:52.964 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#paymentProductInCart(Authentication, List)
24/12/23 18:10:52.966 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#paymentProductInCart(Authentication, List)
24/12/23 18:10:52.967 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:53.034 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:10:53.034 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:10:53.034 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:10:53.034 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:10:53.034 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:10:53.034 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:10:53.057 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:53.082 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:10:53.082 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:10:53.082 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:10:53.082 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:10:53.082 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:10:53.082 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:10:53.082 | WARN  | sale_service | 232 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:10:53.082 | WARN  | sale_service | 239 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:10:53.084 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:10:53.084 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:10:53.084 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:53.084 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:53.147 | DEBUG | sale_service | 0 | LogFormatUtils.java: POST "/api/v1/cart/payment", parameters={}
24/12/23 18:10:53.147 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#paymentProductInCart(Authentication, List)
24/12/23 18:10:53.148 | DEBUG | sale_service | 0 | LogFormatUtils.java: Read "application/json;charset=UTF-8" to [[CartPaymentDto(comboId=6581bc657f9bde440a01886f, note=, transaction=[ProductTransactionDto(cartId=6 (truncated)...]
24/12/23 18:10:54.931 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.User in collection: user
24/12/23 18:10:54.931 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:54.931 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:54.984 | DEBUG | sale_service | 0 | MongoTemplate.java: findOne using query: { "id" : { "$oid" : "65880e74a10d1b5728a693ba"}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:10:54.985 | DEBUG | sale_service | 0 | MongoTemplate.java: findOne using query: { "_id" : { "$oid" : "65880e74a10d1b5728a693ba"}} fields: {} in db.collection: db-salespage.cart
24/12/23 18:10:55.028 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:10:55.028 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:10:55.029 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:10:55.030 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:10:55.031 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:10:55.032 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:10:55.043 | DEBUG | sale_service | 0 | MongoTemplate.java: findOne using query: { "id" : { "$oid" : "6532bc2ffae6d41599929247"}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.ProductDetail in collection: product_detail
24/12/23 18:10:55.043 | DEBUG | sale_service | 0 | MongoTemplate.java: findOne using query: { "_id" : { "$oid" : "6532bc2ffae6d41599929247"}} fields: {} in db.collection: db-salespage.product_detail
24/12/23 18:10:55.074 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:10:55.074 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:10:55.074 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:10:55.074 | WARN  | sale_service | 1990 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:10:55.075 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:10:55.076 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:55.079 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:10:55.079 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:10:55.079 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:10:55.079 | WARN  | sale_service | 1995 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:10:55.081 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:10:55.081 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:56.001 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:56.004 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:56.010 | DEBUG | sale_service | 0 | MongoTemplate.java: findOne using query: { "id" : { "$oid" : "65869a7f208da64222b26ab4"}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherCode in collection: voucher_code
24/12/23 18:10:56.011 | DEBUG | sale_service | 0 | MongoTemplate.java: findOne using query: { "_id" : { "$oid" : "65869a7f208da64222b26ab4"}} fields: {} in db.collection: db-salespage.voucher_code
24/12/23 18:10:56.084 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "_id" : { "$oid" : "65846511d48c0b1c77d1ee61"}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.VoucherStore in collection: voucher_store
24/12/23 18:10:56.092 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:10:56.092 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:10:56.092 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:10:56.096 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:10:56.097 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:10:56.097 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:10:56.139 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:10:56.139 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:10:56.140 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:10:56.140 | WARN  | sale_service | 1064 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:10:56.142 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:10:56.144 | DEBUG | sale_service | 0 | MongoTemplate.java: Saving Document containing fields: [_id, voucher_store_id, owner_id, code, expire_time, voucher_code_status, created_at, updated_at, _class]
24/12/23 18:10:56.144 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:56.145 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:10:56.146 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:10:56.147 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:10:56.147 | WARN  | sale_service | 1065 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:10:56.149 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:10:56.151 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:56.206 | DEBUG | sale_service | 0 | MongoTemplate.java: Saving Document containing fields: [_id, product_id, type, quantity, origin_price, sell_price, discount_percent, username, created_at, updated_at, _class]
24/12/23 18:10:56.235 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:56.244 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:56.282 | DEBUG | sale_service | 0 | MongoTemplate.java: findOne using query: { "id" : { "$oid" : "65880f27a10d1b5728a693bf"}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:10:56.283 | DEBUG | sale_service | 0 | MongoTemplate.java: findOne using query: { "_id" : { "$oid" : "65880f27a10d1b5728a693bf"}} fields: {} in db.collection: db-salespage.cart
24/12/23 18:10:56.332 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:10:56.333 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:10:56.333 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:10:56.343 | DEBUG | sale_service | 0 | MongoTemplate.java: findOne using query: { "id" : { "$oid" : "653536948d69bd44723ba6fc"}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.ProductDetail in collection: product_detail
24/12/23 18:10:56.344 | DEBUG | sale_service | 0 | MongoTemplate.java: findOne using query: { "_id" : { "$oid" : "653536948d69bd44723ba6fc"}} fields: {} in db.collection: db-salespage.product_detail
24/12/23 18:10:56.348 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:10:56.349 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:10:56.349 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:10:56.390 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:10:56.391 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:10:56.391 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:10:56.391 | WARN  | sale_service | 248 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:10:56.392 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:10:56.393 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:56.405 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:10:56.405 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:10:56.406 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:10:56.406 | WARN  | sale_service | 256 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:10:56.407 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:10:56.408 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:56.459 | DEBUG | sale_service | 0 | MongoTemplate.java: Saving Document containing fields: [_id, product_id, type, quantity, origin_price, sell_price, discount_percent, username, created_at, updated_at, _class]
24/12/23 18:10:56.481 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:56.506 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:58.842 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:10:58.842 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:10:58.843 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:10:58.843 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:10:58.843 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:10:58.843 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:10:58.845 | DEBUG | sale_service | 0 | MongoTemplate.java: findOne using query: { "id" : { "$oid" : "6581bc657f9bde440a01886f"}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.ProductCombo in collection: product_combo
24/12/23 18:10:58.849 | DEBUG | sale_service | 0 | MongoTemplate.java: findOne using query: { "_id" : { "$oid" : "6581bc657f9bde440a01886f"}} fields: {} in db.collection: db-salespage.product_combo
24/12/23 18:10:58.894 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:10:58.895 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:10:58.895 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:10:58.895 | WARN  | sale_service | 2389 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:10:58.895 | WARN  | sale_service | 2488 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:10:58.895 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:10:58.895 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:10:58.895 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:10:58.896 | WARN  | sale_service | 2415 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:10:58.896 | WARN  | sale_service | 2504 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:10:58.896 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:10:58.897 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:10:58.897 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:10:58.897 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:31.931 | INFO  | sale_service | 0 | NetworkClient.java: [Consumer clientId=consumer-bizfly-7-453-PaymentTransaction-1, groupId=bizfly-7-453-PaymentTransaction] Disconnecting from node 1 due to request timeout.
24/12/23 18:11:31.932 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:11:31.933 | INFO  | sale_service | 0 | NetworkClient.java: [Consumer clientId=consumer-bizfly-7-453-PaymentTransaction-1, groupId=bizfly-7-453-PaymentTransaction] Cancelled in-flight FETCH request with correlation id 2190 due to node 1 being disconnected (elapsed time since creation: 33089ms, elapsed time since send: 33089ms, request timeout: 30000ms)
24/12/23 18:11:31.933 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:11:31.933 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:31.933 | INFO  | sale_service | 0 | FetchSessionHandler.java: [Consumer clientId=consumer-bizfly-7-453-PaymentTransaction-1, groupId=bizfly-7-453-PaymentTransaction] Error sending fetch request (sessionId=1799618229, epoch=13) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
24/12/23 18:11:31.935 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:31.937 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:11:31.939 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:33.657 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:33.658 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:33.675 | DEBUG | sale_service | 0 | MongoTemplate.java: Saving Document containing fields: [_id, buyer_username, total_price, balance, product_transaction_details, note, combo_info, created_at, updated_at, _class]
24/12/23 18:11:33.702 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:33.702 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:33.705 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:33.749 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:11:33.750 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:11:33.750 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:11:33.750 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:11:33.751 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:11:33.751 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:11:33.791 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:11:33.792 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:11:33.792 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:11:33.795 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:11:33.796 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:11:33.796 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:11:33.799 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:11:33.800 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:11:33.800 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:11:33.800 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:11:33.800 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[Cart(id=65880e74a10d1b5 (truncated)...]
24/12/23 18:11:33.800 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:11:33.800 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:11:33.800 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:11:33.800 | WARN  | sale_service | 34902 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:11:33.801 | WARN  | sale_service | 34903 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:11:33.801 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:11:33.802 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:11:33.803 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:11:33.803 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:33.803 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:33.858 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:11:33.858 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:11:33.858 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:11:33.859 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:11:33.859 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:11:33.859 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:11:33.859 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:11:33.859 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:11:33.859 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:11:33.859 | WARN  | sale_service | 1921 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:11:33.859 | WARN  | sale_service | 1926 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:11:33.859 | WARN  | sale_service | 1927 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:11:33.864 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:11:33.864 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:11:33.864 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:11:33.865 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:33.865 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:33.866 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:33.906 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:33.907 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:33.958 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:33.958 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:33.958 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:33.995 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:11:33.995 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:11:33.995 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:11:33.997 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:11:33.997 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:11:33.997 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:11:34.042 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:11:34.042 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:11:34.042 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:11:34.042 | WARN  | sale_service | 239 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:11:34.043 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:11:34.044 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:34.046 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:11:34.046 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:11:34.046 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:11:34.047 | WARN  | sale_service | 244 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:11:34.048 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:11:34.049 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:11:34.049 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:11:34.049 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:34.050 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:11:34.054 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:11:34.054 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:11:34.054 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:11:34.054 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:11:34.055 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:11:34.055 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:11:34.110 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:11:34.110 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:11:34.110 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:11:34.110 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:11:34.111 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:11:34.111 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:11:34.111 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:11:34.111 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:11:34.111 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:11:34.111 | WARN  | sale_service | 244 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:11:34.111 | WARN  | sale_service | 245 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:11:34.111 | WARN  | sale_service | 245 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:11:34.113 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:11:34.113 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:11:34.113 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:11:34.114 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:34.114 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:34.114 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:34.135 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:34.141 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:34.215 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:34.215 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:34.215 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:34.230 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:11:34.230 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:11:34.231 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:11:34.231 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:11:34.231 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:11:34.231 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:11:34.277 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:11:34.277 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:11:34.277 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:11:34.277 | WARN  | sale_service | 227 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:11:34.278 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:11:34.278 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:11:34.278 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:11:34.278 | WARN  | sale_service | 233 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:11:34.279 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:11:34.280 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:11:34.280 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:34.281 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:34.284 | DEBUG | sale_service | 0 | MongoTemplate.java: Inserting list of Documents containing 2 items
24/12/23 18:11:34.312 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:11:34.312 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:11:34.312 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:11:34.313 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:11:34.313 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:11:34.313 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:11:34.313 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:11:34.313 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:11:34.313 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:11:34.360 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:11:34.360 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:11:34.360 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:11:34.360 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:11:34.361 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:11:34.361 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:11:34.361 | WARN  | sale_service | 247 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:11:34.361 | WARN  | sale_service | 247 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:11:34.361 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:11:34.361 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:11:34.362 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:11:34.362 | WARN  | sale_service | 248 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:11:34.362 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:11:34.362 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:11:34.363 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:34.363 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:11:34.363 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:34.364 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:34.375 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:34.379 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:34.380 | DEBUG | sale_service | 0 | MongoTemplate.java: Remove using query: { "_id" : { "$oid" : "65880e74a10d1b5728a693ba"}} in collection: cart.
24/12/23 18:11:34.707 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:34.726 | DEBUG | sale_service | 0 | MongoTemplate.java: Remove using query: { "_id" : { "$oid" : "65880f27a10d1b5728a693bf"}} in collection: cart.
24/12/23 18:11:34.752 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:11:34.752 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:11:34.753 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:11:34.753 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:11:34.753 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:34.753 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:34.753 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:11:34.753 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:11:34.798 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:11:34.798 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:11:34.799 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:11:34.799 | WARN  | sale_service | 425 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:11:34.799 | WARN  | sale_service | 520 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:11:34.799 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:11:34.799 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:11:34.800 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:11:34.800 | WARN  | sale_service | 421 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:11:34.800 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:11:34.800 | WARN  | sale_service | 520 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:11:34.801 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:11:34.800 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:34.801 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:34.803 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:11:34.803 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:11:34.804 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:11:34.807 | DEBUG | sale_service | 0 | MongoTemplate.java: Inserting Document containing fields: [username, title, img_url, content, notification_status, notification_type, ref_id, created_at, updated_at, _class] in collection: notification
24/12/23 18:11:34.843 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:11:34.843 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:11:34.843 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:11:34.843 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:11:34.844 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:11:34.844 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:11:34.850 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:11:34.850 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:11:34.850 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:11:34.851 | WARN  | sale_service | 488 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:11:34.851 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:11:34.852 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:34.869 | DEBUG | sale_service | 0 | MongoTemplate.java: Saving Document containing fields: [_id, username, phone_number, display_name, image_url, rate, balance, _class]
24/12/23 18:11:34.889 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:11:34.890 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:11:34.890 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:11:34.890 | WARN  | sale_service | 526 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:11:34.891 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:11:34.891 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:34.892 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:11:34.893 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:34.893 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:11:34.893 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:11:34.893 | WARN  | sale_service | 530 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:11:34.894 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:11:34.894 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:34.895 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:34.947 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:34.979 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:34.984 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:11:34.984 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:11:34.984 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:34.984 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:11:34.985 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:11:34.985 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:11:34.985 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:11:34.992 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:11:34.993 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=Thanh toán thành công, đơn hàng đang được kiểm duyệt, (truncated)...]
24/12/23 18:11:34.993 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:11:34.993 | WARN  | sale_service | 41936 | AuthTokenFilter.java: end request ==> POST  /api/v1/cart/payment
24/12/23 18:11:34.993 | WARN  | sale_service | 42026 | AuthTokenFilter.java: end request ==> POST  /api/v1/cart/payment
24/12/23 18:11:34.995 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:11:34.995 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:35.030 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:11:35.031 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:11:35.031 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:11:35.031 | WARN  | sale_service | 229 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:11:35.032 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:11:35.033 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:35.035 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:11:35.035 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:11:35.036 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:11:35.036 | WARN  | sale_service | 235 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:11:35.037 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:11:35.037 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:35.047 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:11:35.048 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:11:35.048 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:11:35.077 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:11:35.077 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:11:35.077 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:11:35.077 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:11:35.077 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:11:35.077 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:11:35.092 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:35.099 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:11:35.099 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:11:35.099 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:11:35.099 | WARN  | sale_service | 246 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:11:35.100 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:11:35.101 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:35.123 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:11:35.124 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:11:35.124 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:11:35.124 | WARN  | sale_service | 233 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:11:35.124 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:11:35.124 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:35.124 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:11:35.125 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:11:35.125 | WARN  | sale_service | 231 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:11:35.125 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:11:35.126 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:11:35.126 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:35.126 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:35.140 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:35.181 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:11:35.182 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:11:35.182 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:11:35.198 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:35.218 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:11:35.218 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:11:35.218 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:35.218 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:11:35.225 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:35.235 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:11:35.235 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:11:35.235 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:11:35.235 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:11:35.236 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:11:35.236 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:11:35.236 | WARN  | sale_service | 240 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:11:35.237 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:11:35.238 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:35.272 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:11:35.273 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:11:35.273 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:11:35.273 | WARN  | sale_service | 240 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:11:35.274 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:11:35.275 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:35.286 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:11:35.287 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:11:35.287 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:11:35.287 | WARN  | sale_service | 249 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:11:35.288 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:11:35.289 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:35.294 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:11:35.294 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:11:35.295 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:11:35.309 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:11:35.310 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:11:35.311 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:11:35.321 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:11:35.322 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:11:35.322 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:11:35.337 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:35.704 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:11:35.704 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:11:35.704 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:35.705 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:11:35.705 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:11:35.705 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:11:35.705 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:11:35.705 | WARN  | sale_service | 487 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:11:35.705 | WARN  | sale_service | 481 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:11:35.705 | WARN  | sale_service | 579 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:11:35.705 | WARN  | sale_service | 579 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:11:35.706 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:11:35.706 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:11:35.707 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:35.707 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:35.710 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:11:35.710 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:35.710 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:11:35.710 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:11:35.710 | WARN  | sale_service | 513 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:11:35.711 | WARN  | sale_service | 610 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:11:35.712 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:11:35.712 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:35.749 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:11:35.750 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:11:35.750 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:11:35.797 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:11:35.797 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:11:35.797 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:11:35.797 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:11:35.798 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:11:35.798 | WARN  | sale_service | 462 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:11:35.798 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:11:35.798 | WARN  | sale_service | 561 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:11:35.799 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:11:35.800 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:35.800 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:35.802 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:35.807 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:11:35.807 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:11:35.808 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:35.808 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:11:35.848 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:11:35.848 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:11:35.848 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:11:35.849 | WARN  | sale_service | 575 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:11:35.849 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:11:35.850 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:35.864 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:11:35.864 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:11:35.864 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:11:35.864 | WARN  | sale_service | 576 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:11:35.866 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:11:35.867 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:35.892 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:11:35.892 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:11:35.893 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:11:35.896 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:11:35.896 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:11:35.897 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:35.897 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:11:35.901 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:11:35.902 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:11:35.902 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:11:35.943 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:11:35.943 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[], metadata=Metadata(to (truncated)...]
24/12/23 18:11:35.944 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:11:35.944 | WARN  | sale_service | 237 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:11:35.945 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:11:35.945 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[], metadata=Metadata(to (truncated)...]
24/12/23 18:11:35.945 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:11:35.945 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:35.946 | WARN  | sale_service | 239 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:11:35.946 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:11:35.947 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:35.948 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:11:35.948 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:11:35.949 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[], metadata=Metadata(to (truncated)...]
24/12/23 18:11:35.949 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:11:35.949 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:35.949 | WARN  | sale_service | 236 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:11:35.951 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:11:35.952 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:35.963 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:35.989 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:11:35.990 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:11:35.990 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:11:36.035 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:11:36.035 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:11:36.035 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[], metadata=Metadata(to (truncated)...]
24/12/23 18:11:36.035 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:11:36.035 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:11:36.035 | WARN  | sale_service | 235 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:11:36.035 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:11:36.036 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:11:36.037 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:36.041 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:36.046 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:36.046 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:36.059 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:11:36.059 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:11:36.059 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:11:36.082 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:11:36.082 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[], metadata=Metadata(to (truncated)...]
24/12/23 18:11:36.083 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:11:36.083 | WARN  | sale_service | 232 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:11:36.084 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:11:36.084 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:36.111 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:11:36.111 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[], metadata=Metadata(to (truncated)...]
24/12/23 18:11:36.111 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:11:36.111 | WARN  | sale_service | 244 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:11:36.112 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:11:36.113 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:36.126 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:36.129 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:11:36.129 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:11:36.129 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:11:36.156 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:11:36.156 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:11:36.156 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:11:36.157 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:11:36.157 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:11:36.158 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:11:36.179 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:11:36.180 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[], metadata=Metadata(to (truncated)...]
24/12/23 18:11:36.180 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:36.180 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:11:36.180 | WARN  | sale_service | 234 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:11:36.181 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:11:36.182 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:36.203 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:11:36.203 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[], metadata=Metadata(to (truncated)...]
24/12/23 18:11:36.204 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:11:36.204 | WARN  | sale_service | 255 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:11:36.204 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:11:36.205 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:11:36.205 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[], metadata=Metadata(to (truncated)...]
24/12/23 18:11:36.206 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:36.206 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:36.206 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:11:36.206 | WARN  | sale_service | 255 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:11:36.207 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:11:36.207 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:36.217 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:11:36.218 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:11:36.218 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:11:36.262 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:11:36.263 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[], metadata=Metadata(to (truncated)...]
24/12/23 18:11:36.263 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:11:36.263 | WARN  | sale_service | 227 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:11:36.264 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:11:36.265 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:36.273 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:11:36.274 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:11:36.274 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:11:36.274 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:36.335 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:36.337 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:11:36.338 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:11:36.338 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:11:36.352 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:36.357 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:11:36.357 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[], metadata=Metadata(to (truncated)...]
24/12/23 18:11:36.357 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:11:36.357 | WARN  | sale_service | 273 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:11:36.358 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:11:36.359 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:36.393 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:11:36.393 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:11:36.394 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:11:36.394 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[], metadata=Metadata(to (truncated)...]
24/12/23 18:11:36.394 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:11:36.394 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:11:36.394 | WARN  | sale_service | 282 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:11:36.395 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:11:36.396 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:36.707 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:11:36.707 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:11:36.708 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:11:36.708 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:36.712 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:11:36.712 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[], metadata=Metadata(to (truncated)...]
24/12/23 18:11:36.712 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:11:36.713 | WARN  | sale_service | 440 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:11:36.713 | WARN  | sale_service | 531 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:11:36.713 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:11:36.714 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:36.762 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:11:36.763 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:36.762 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:11:36.763 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:11:36.763 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[], metadata=Metadata(to (truncated)...]
24/12/23 18:11:36.764 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:11:36.764 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:11:36.763 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:36.764 | WARN  | sale_service | 430 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:11:36.764 | WARN  | sale_service | 556 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:11:36.765 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:11:36.766 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:36.813 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:11:36.813 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[], metadata=Metadata(to (truncated)...]
24/12/23 18:11:36.813 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:11:36.813 | WARN  | sale_service | 462 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:11:36.814 | WARN  | sale_service | 608 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:11:36.814 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:11:36.815 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:11:36.815 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:11:36.815 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:36.815 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:11:36.815 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:36.863 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:11:36.863 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:11:36.863 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:11:36.863 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:11:36.863 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:11:36.863 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[], metadata=Metadata(to (truncated)...]
24/12/23 18:11:36.864 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:11:36.864 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:11:36.864 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:11:36.864 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:36.864 | WARN  | sale_service | 599 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:11:36.865 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:11:36.865 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:36.911 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:36.913 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:11:36.913 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:11:36.913 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:11:36.913 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[], metadata=Metadata(to (truncated)...]
24/12/23 18:11:36.913 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[], metadata=Metadata(to (truncated)...]
24/12/23 18:11:36.913 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:11:36.913 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:11:36.913 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:11:36.913 | WARN  | sale_service | 518 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:11:36.913 | WARN  | sale_service | 554 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:11:36.913 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:11:36.922 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:11:36.922 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:11:36.923 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:36.924 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:36.957 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:11:36.957 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[], metadata=Metadata(to (truncated)...]
24/12/23 18:11:36.958 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:11:36.958 | WARN  | sale_service | 244 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:11:36.958 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:11:36.959 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:11:36.959 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:11:36.960 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:11:36.961 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:36.961 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:37.020 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:11:37.020 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:11:37.020 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:11:37.020 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[], metadata=Metadata(to (truncated)...]
24/12/23 18:11:37.021 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:37.021 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:37.021 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:11:37.021 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:11:37.021 | WARN  | sale_service | 254 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:11:37.022 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:11:37.023 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:37.069 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:11:37.069 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:11:37.069 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:11:37.069 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[], metadata=Metadata(to (truncated)...]
24/12/23 18:11:37.070 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:37.070 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:11:37.070 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:11:37.070 | WARN  | sale_service | 255 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:11:37.071 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:11:37.071 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:37.117 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:11:37.117 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:11:37.117 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:11:37.118 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:11:37.118 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[], metadata=Metadata(to (truncated)...]
24/12/23 18:11:37.118 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:11:37.118 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:11:37.118 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:37.118 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:11:37.118 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:11:37.118 | WARN  | sale_service | 253 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:11:37.119 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:11:37.120 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:37.162 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:11:37.163 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:11:37.163 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:37.163 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:11:37.163 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:11:37.163 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[], metadata=Metadata(to (truncated)...]
24/12/23 18:11:37.164 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:11:37.164 | WARN  | sale_service | 241 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:11:37.164 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:11:37.164 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[], metadata=Metadata(to (truncated)...]
24/12/23 18:11:37.165 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:11:37.165 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:11:37.165 | WARN  | sale_service | 243 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:11:37.166 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:37.166 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:11:37.167 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:37.210 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:11:37.210 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:11:37.210 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[], metadata=Metadata(to (truncated)...]
24/12/23 18:11:37.210 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:11:37.210 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:11:37.210 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:37.211 | WARN  | sale_service | 250 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:11:37.211 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:11:37.211 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:11:37.212 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:37.255 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:11:37.255 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:11:37.256 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:11:37.258 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:11:37.258 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[], metadata=Metadata(to (truncated)...]
24/12/23 18:11:37.258 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:11:37.258 | WARN  | sale_service | 235 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:11:37.259 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:11:37.260 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:37.265 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:37.268 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:37.300 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:11:37.300 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[], metadata=Metadata(to (truncated)...]
24/12/23 18:11:37.301 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:11:37.301 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:37.301 | WARN  | sale_service | 229 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:11:37.302 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:11:37.302 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:11:37.302 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:11:37.302 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:11:37.303 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:37.348 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:11:37.349 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[], metadata=Metadata(to (truncated)...]
24/12/23 18:11:37.349 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:11:37.349 | WARN  | sale_service | 229 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:11:37.350 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:11:37.351 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:37.354 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:11:37.354 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:11:37.354 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:37.354 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:11:37.707 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:11:37.707 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:11:37.707 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:11:37.707 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[], metadata=Metadata(to (truncated)...]
24/12/23 18:11:37.707 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:37.707 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:11:37.708 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:11:37.708 | WARN  | sale_service | 443 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:11:37.708 | WARN  | sale_service | 541 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:11:37.708 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:11:37.709 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:37.710 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:11:37.711 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:11:37.711 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:11:37.753 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:37.754 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:11:37.754 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[], metadata=Metadata(to (truncated)...]
24/12/23 18:11:37.754 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:11:37.754 | WARN  | sale_service | 453 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:11:37.754 | WARN  | sale_service | 541 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:11:37.755 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:11:37.756 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:37.758 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:11:37.758 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:11:37.758 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[], metadata=Metadata(to (truncated)...]
24/12/23 18:11:37.758 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:11:37.758 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:11:37.758 | WARN  | sale_service | 489 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:11:37.758 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:11:37.758 | WARN  | sale_service | 592 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:11:37.759 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:11:37.760 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:37.798 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:11:37.799 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:11:37.799 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:11:37.814 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:37.821 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:11:37.821 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[], metadata=Metadata(to (truncated)...]
24/12/23 18:11:37.821 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:11:37.821 | WARN  | sale_service | 466 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:11:37.821 | WARN  | sale_service | 561 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:11:37.822 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:11:37.823 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:37.843 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:11:37.843 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:11:37.843 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[], metadata=Metadata(to (truncated)...]
24/12/23 18:11:37.843 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:11:37.843 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:11:37.843 | WARN  | sale_service | 541 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:11:37.843 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:11:37.844 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:11:37.845 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:37.862 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:37.866 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:37.889 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:11:37.889 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[], metadata=Metadata(to (truncated)...]
24/12/23 18:11:37.889 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:11:37.889 | WARN  | sale_service | 538 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:11:37.890 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:11:37.891 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:37.905 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:11:37.905 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:11:37.905 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:11:37.922 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:37.941 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:37.953 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:11:37.953 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:11:37.953 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:11:37.953 | WARN  | sale_service | 244 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:11:37.954 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:11:37.955 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:37.957 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:11:37.957 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:11:37.957 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:11:37.959 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:11:37.959 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:11:37.959 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:11:37.981 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:38.005 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:11:38.005 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[], metadata=Metadata(to (truncated)...]
24/12/23 18:11:38.006 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:11:38.006 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:11:38.006 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:11:38.006 | WARN  | sale_service | 251 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:11:38.006 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:11:38.006 | WARN  | sale_service | 246 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:11:38.007 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:11:38.007 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:11:38.008 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:38.008 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:38.016 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:11:38.016 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:11:38.016 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:11:38.039 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:11:38.039 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:11:38.040 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:11:38.045 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:38.065 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:11:38.065 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[], metadata=Metadata(to (truncated)...]
24/12/23 18:11:38.065 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:11:38.065 | WARN  | sale_service | 242 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:11:38.066 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:11:38.067 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:38.079 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:11:38.079 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:11:38.079 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:11:38.094 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:11:38.094 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:11:38.094 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:11:38.094 | WARN  | sale_service | 249 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:11:38.095 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:11:38.096 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:38.101 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:38.102 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:38.127 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:11:38.128 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[], metadata=Metadata(to (truncated)...]
24/12/23 18:11:38.128 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:11:38.128 | WARN  | sale_service | 237 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:11:38.129 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:11:38.130 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:38.141 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:11:38.141 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:11:38.142 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:11:38.175 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:38.190 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:38.192 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:11:38.192 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:11:38.192 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:11:38.192 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:11:38.192 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:11:38.192 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:11:38.193 | WARN  | sale_service | 238 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:11:38.194 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.publicControllers.PublicProductController#getHotProduct(Authentication)
24/12/23 18:11:38.195 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:38.205 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:11:38.205 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:11:38.205 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:11:38.219 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:38.245 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:11:38.245 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:11:38.245 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:11:38.245 | WARN  | sale_service | 238 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:11:38.246 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.publicControllers.PublicProductController#getAllProduct(String, String, Double, Double, String, String, String, String, Boolean, Long, Long, Authentication, Pageable)
24/12/23 18:11:38.247 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:38.249 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:11:38.250 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[], metadata=Metadata(to (truncated)...]
24/12/23 18:11:38.250 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:11:38.250 | WARN  | sale_service | 243 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:11:38.266 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:11:38.266 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:11:38.266 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:11:38.282 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:11:38.282 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:11:38.282 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:11:38.297 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:38.309 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:11:38.309 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:11:38.310 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:11:38.313 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:11:38.313 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:11:38.313 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:11:38.313 | WARN  | sale_service | 246 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:11:38.326 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:11:38.326 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[], metadata=Metadata(to (truncated)...]
24/12/23 18:11:38.327 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:11:38.327 | WARN  | sale_service | 232 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:11:38.328 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:11:38.329 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:38.344 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:38.356 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:11:38.356 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:11:38.356 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:11:38.357 | WARN  | sale_service | 228 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:11:38.358 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:11:38.359 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:38.707 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/public/product/hot-product", parameters={}
24/12/23 18:11:38.708 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.publicControllers.PublicProductController#getHotProduct(Authentication)
24/12/23 18:11:38.708 | INFO  | sale_service | 0 | PublicProductController.java: getProductDetail with username: {lambro25102001}
24/12/23 18:11:38.708 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:38.708 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.SearchHistory in collection: search_history
24/12/23 18:11:38.756 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/public/product?page=0&size=12", parameters={masked}
24/12/23 18:11:38.757 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.publicControllers.PublicProductController#getAllProduct(String, String, Double, Double, String, String, String, String, Boolean, Long, Long, Authentication, Pageable)
24/12/23 18:11:38.758 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:38.759 | INFO  | sale_service | 0 | PublicProductController.java: getProductDetail with username: {lambro25102001}
24/12/23 18:11:38.759 | DEBUG | sale_service | 0 | MongoTemplate.java: Executing count: {} in collection: product
24/12/23 18:11:38.768 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "is_hot" : true} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Product in collection: product
24/12/23 18:11:38.801 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:11:38.802 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:11:38.802 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:11:38.803 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: {} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Product in collection: product
24/12/23 18:11:38.849 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:11:38.849 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:11:38.850 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[], metadata=Metadata(to (truncated)...]
24/12/23 18:11:38.850 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:11:38.850 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:11:38.851 | WARN  | sale_service | 522 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:11:38.851 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:11:38.853 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:11:38.855 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:38.900 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:11:38.900 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:11:38.901 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:11:38.901 | WARN  | sale_service | 542 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:11:38.902 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:11:38.903 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:38.960 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:38.983 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "product_id" : { "$in" : ["6532bbe5fae6d41599929246", "6535339b8d69bd44723ba6fb", "653609f1e14dd822b9121ad3", "65360a97e14dd822b9121ad4", "65360b29e14dd822b9121ad5", "653a7660a4b25b73765c1cda", "655cdfb9524e3f7af0d0b842", "655ce106524e3f7af0d0b84d", "655ce182524e3f7af0d0b850", "655ce1fb524e3f7af0d0b857", "655ce3dd524e3f7af0d0b85e", "6565806a6c78c45470cf8554"]}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.ProductStatistic in collection: product_statistic
24/12/23 18:11:39.005 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:39.051 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:11:39.051 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:11:39.052 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:11:39.107 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:11:39.107 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:11:39.107 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[], metadata=Metadata(to (truncated)...]
24/12/23 18:11:39.107 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:11:39.108 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:11:39.108 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:11:39.108 | WARN  | sale_service | 254 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:11:39.111 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:11:39.111 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:39.154 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:11:39.154 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:11:39.154 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:11:39.155 | WARN  | sale_service | 252 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:11:39.156 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:11:39.157 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:39.210 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:39.253 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:39.256 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "product_id" : { "$in" : ["6578615f79d74a1ab1f5c70c", "65785f9a79d74a1ab1f5c709", "656626cb6c78c45470cf8583", "6565806a6c78c45470cf8554", "655ce3dd524e3f7af0d0b85e", "655ce1fb524e3f7af0d0b857", "655ce182524e3f7af0d0b850", "655ce106524e3f7af0d0b84d", "655cdfb9524e3f7af0d0b842", "6535339b8d69bd44723ba6fb", "6532bbe5fae6d41599929246", "653609f1e14dd822b9121ad3"]}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.ProductStatistic in collection: product_statistic
24/12/23 18:11:39.301 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:11:39.302 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:11:39.302 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:11:39.350 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:11:39.350 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:11:39.351 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:11:39.360 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:11:39.360 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[], metadata=Metadata(to (truncated)...]
24/12/23 18:11:39.361 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:11:39.361 | WARN  | sale_service | 250 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:11:39.362 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:11:39.364 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:39.406 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:11:39.406 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:11:39.406 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:11:39.406 | WARN  | sale_service | 249 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:11:39.407 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:11:39.408 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:39.456 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:39.500 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:39.547 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:11:39.547 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:11:39.547 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:11:39.591 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:11:39.592 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:11:39.592 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:11:39.592 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[], metadata=Metadata(to (truncated)...]
24/12/23 18:11:39.592 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:11:39.592 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:11:39.592 | WARN  | sale_service | 228 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:11:39.594 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:11:39.595 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:39.638 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:11:39.638 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:11:39.638 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:11:39.638 | WARN  | sale_service | 230 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:11:39.640 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:11:39.641 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:39.687 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:39.730 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:39.781 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:11:39.782 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:11:39.782 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:11:39.825 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:11:39.825 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:11:39.826 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:11:39.828 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:11:39.828 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[], metadata=Metadata(to (truncated)...]
24/12/23 18:11:39.828 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:11:39.829 | WARN  | sale_service | 235 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:11:39.831 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:11:39.832 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:39.877 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:11:39.877 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:11:39.877 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:11:39.877 | WARN  | sale_service | 236 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:11:39.878 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:11:39.879 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:39.936 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:39.969 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:40.043 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:11:40.043 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:11:40.044 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:11:40.062 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:11:40.063 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:11:40.063 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:11:40.102 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:11:40.103 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[], metadata=Metadata(to (truncated)...]
24/12/23 18:11:40.103 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:11:40.103 | WARN  | sale_service | 272 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:11:40.106 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:11:40.109 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:40.112 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:11:40.113 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:11:40.113 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:11:40.113 | WARN  | sale_service | 234 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:11:40.116 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:11:40.117 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:40.201 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:40.209 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:40.302 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:11:40.303 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:11:40.303 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:11:40.303 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:11:40.304 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:11:40.304 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:11:40.354 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:11:40.354 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[], metadata=Metadata(to (truncated)...]
24/12/23 18:11:40.354 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:11:40.355 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:11:40.355 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:11:40.355 | WARN  | sale_service | 248 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:11:40.355 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:11:40.355 | WARN  | sale_service | 239 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:11:40.357 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:11:40.358 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:40.359 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:11:40.360 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:40.454 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:40.454 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:40.553 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:11:40.553 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:11:40.553 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:11:40.553 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:11:40.553 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:11:40.553 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:11:40.600 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:11:40.600 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[], metadata=Metadata(to (truncated)...]
24/12/23 18:11:40.600 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:11:40.600 | WARN  | sale_service | 242 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:11:40.601 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:11:40.601 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:11:40.601 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:11:40.602 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:11:40.602 | WARN  | sale_service | 241 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:11:40.602 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:40.603 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:11:40.604 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:40.695 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:40.695 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:40.804 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:11:40.804 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:11:40.804 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:11:40.804 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:11:40.805 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:11:40.805 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:11:40.931 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:11:40.932 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[], metadata=Metadata(to (truncated)...]
24/12/23 18:11:40.932 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:11:40.932 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:11:40.932 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:11:40.932 | WARN  | sale_service | 238 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:11:40.932 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:11:40.932 | WARN  | sale_service | 330 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:11:40.932 | WARN  | sale_service | 238 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:11:40.932 | WARN  | sale_service | 329 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:11:41.545 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "product_id" : { "$in" : ["6532bbe5fae6d41599929246", "6535339b8d69bd44723ba6fb", "653609f1e14dd822b9121ad3", "65360a97e14dd822b9121ad4", "65360b29e14dd822b9121ad5", "653a7660a4b25b73765c1cda", "655cdfb9524e3f7af0d0b842", "655ce106524e3f7af0d0b84d", "655ce182524e3f7af0d0b850", "655ce1fb524e3f7af0d0b857", "655ce3dd524e3f7af0d0b85e", "6565806a6c78c45470cf8554"]}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.ProductDetail in collection: product_detail
24/12/23 18:11:41.619 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:11:41.619 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[ProductDataResponse(pro (truncated)...]
24/12/23 18:11:41.620 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:11:41.620 | WARN  | sale_service | 3277 | AuthTokenFilter.java: end request ==> GET  /api/v1/public/product?page=0&size=12
24/12/23 18:11:41.620 | WARN  | sale_service | 3373 | AuthTokenFilter.java: end request ==> GET  /api/v1/public/product?page=0&size=12
24/12/23 18:11:41.882 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "product_id" : { "$in" : ["6578615f79d74a1ab1f5c70c", "65785f9a79d74a1ab1f5c709", "656626cb6c78c45470cf8583", "6565806a6c78c45470cf8554", "655ce3dd524e3f7af0d0b85e", "655ce1fb524e3f7af0d0b857", "655ce182524e3f7af0d0b850", "655ce106524e3f7af0d0b84d", "655cdfb9524e3f7af0d0b842", "6535339b8d69bd44723ba6fb", "6532bbe5fae6d41599929246", "653609f1e14dd822b9121ad3"]}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.ProductDetail in collection: product_detail
24/12/23 18:11:41.960 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:11:41.960 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=[ProductDataResponse(productId=6578615f79d (truncated)...]
24/12/23 18:11:41.960 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:11:41.961 | WARN  | sale_service | 3664 | AuthTokenFilter.java: end request ==> GET  /api/v1/public/product/hot-product
24/12/23 18:11:41.961 | WARN  | sale_service | 3767 | AuthTokenFilter.java: end request ==> GET  /api/v1/public/product/hot-product
24/12/23 18:11:42.135 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.publicControllers.PublicSellerStoreController#getAllStore(String, String, Pageable)
24/12/23 18:11:42.136 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:42.229 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:42.319 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/public/seller-store?page=0&size=6", parameters={masked}
24/12/23 18:11:42.320 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.publicControllers.PublicSellerStoreController#getAllStore(String, String, Pageable)
24/12/23 18:11:42.320 | DEBUG | sale_service | 0 | MongoTemplate.java: Executing count: {} in collection: store
24/12/23 18:11:42.366 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: {} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.SellerStore in collection: store
24/12/23 18:11:42.415 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:11:42.415 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[SellerStoreResponse(id= (truncated)...]
24/12/23 18:11:42.415 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:11:42.415 | WARN  | sale_service | 278 | AuthTokenFilter.java: end request ==> GET  /api/v1/public/seller-store?page=0&size=6
24/12/23 18:11:43.154 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:11:43.154 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:11:43.154 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:43.154 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:43.249 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:43.249 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:43.342 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:11:43.342 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:11:43.343 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:11:43.349 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:11:43.349 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:11:43.349 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:11:43.388 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:11:43.388 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[], metadata=Metadata(to (truncated)...]
24/12/23 18:11:43.388 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:11:43.388 | WARN  | sale_service | 233 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:11:43.396 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:11:43.396 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:11:43.396 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:11:43.396 | WARN  | sale_service | 241 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:11:44.256 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotificationDetail(Authentication, String)
24/12/23 18:11:44.257 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotificationDetail(Authentication, String)
24/12/23 18:11:44.258 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:44.349 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:44.441 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/detail?notificationId=658811e6a10d1b5728a693c5", parameters={masked}
24/12/23 18:11:44.441 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotificationDetail(Authentication, String)
24/12/23 18:11:44.442 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "_id" : { "$oid" : "658811e6a10d1b5728a693c5"}} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:11:44.489 | DEBUG | sale_service | 0 | MongoTemplate.java: Saving Document containing fields: [_id, username, title, img_url, content, notification_status, notification_type, ref_id, created_at, updated_at, _class]
24/12/23 18:11:44.538 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:11:44.538 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=NotificationDetailResponse(content=Đơn hàn (truncated)...]
24/12/23 18:11:44.538 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:11:44.538 | WARN  | sale_service | 280 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/detail?notificationId=658811e6a10d1b5728a693c5
24/12/23 18:11:46.153 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:11:46.153 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:11:46.154 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:46.154 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:46.262 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:46.262 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:46.361 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:11:46.361 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:11:46.362 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:11:46.363 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:11:46.363 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:11:46.365 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:11:46.414 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:11:46.414 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[], metadata=Metadata(to (truncated)...]
24/12/23 18:11:46.415 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:11:46.415 | WARN  | sale_service | 261 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:11:46.417 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:11:46.417 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:11:46.418 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:11:46.418 | WARN  | sale_service | 263 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:11:49.159 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:11:49.159 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:11:49.160 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:49.160 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:49.250 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:49.251 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:49.341 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:11:49.341 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:11:49.341 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:11:49.342 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:11:49.342 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:11:49.342 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:11:49.386 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:11:49.386 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[], metadata=Metadata(to (truncated)...]
24/12/23 18:11:49.387 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:11:49.387 | WARN  | sale_service | 228 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:11:49.396 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:11:49.396 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:11:49.397 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:11:49.397 | WARN  | sale_service | 237 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:11:52.150 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:11:52.151 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:11:52.151 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:52.151 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:52.258 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:52.347 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/notification/NOT_SEEN?page=0&size=10", parameters={masked}
24/12/23 18:11:52.347 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.NotificationController#getNotification(Authentication, NotificationStatus, Pageable)
24/12/23 18:11:52.348 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001", "notification_status" : "NOT_SEEN"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Notification in collection: notification
24/12/23 18:11:52.394 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:11:52.395 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[NotificationDetailRespo (truncated)...]
24/12/23 18:11:52.395 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:11:52.395 | WARN  | sale_service | 244 | AuthTokenFilter.java: end request ==> GET  /api/v1/notification/NOT_SEEN?page=0&size=10
24/12/23 18:11:52.535 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Account in collection: account
24/12/23 18:11:52.629 | DEBUG | sale_service | 0 | LogFormatUtils.java: GET "/api/v1/cart/all?page=0&size=10", parameters={masked}
24/12/23 18:11:52.629 | DEBUG | sale_service | 0 | AbstractHandlerMapping.java: Mapped to com.salespage.salespageservice.app.controllers.CartController#getAllProductCart(Authentication, Pageable)
24/12/23 18:11:52.629 | DEBUG | sale_service | 0 | MongoTemplate.java: find using query: { "username" : "lambro25102001"} fields: Document{{}} for class: class com.salespage.salespageservice.domains.entities.Cart in collection: cart
24/12/23 18:11:52.693 | DEBUG | sale_service | 0 | AbstractMessageConverterMethodProcessor.java: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8]
24/12/23 18:11:52.694 | DEBUG | sale_service | 0 | LogFormatUtils.java: Writing [BaseResponse(errorCode=0, error=false, message=null, data=PageResponse(data=[], metadata=Metadata(to (truncated)...]
24/12/23 18:11:52.694 | DEBUG | sale_service | 0 | FrameworkServlet.java: Completed 200 OK
24/12/23 18:11:52.694 | WARN  | sale_service | 542 | AuthTokenFilter.java: end request ==> GET  /api/v1/cart/all?page=0&size=10
24/12/23 18:11:53.116 | DEBUG | sale_service | 0 | ApplicationAvailabilityBean.java: Application availability state ReadinessState changed from ACCEPTING_TRAFFIC to REFUSING_TRAFFIC
24/12/23 18:11:53.117 | DEBUG | sale_service | 0 | AbstractApplicationContext.java: Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@54dcbb9f, started on Sun Dec 24 17:49:59 ICT 2023
24/12/23 18:11:53.117 | DEBUG | sale_service | 0 | PropertySourcesPropertyResolver.java: Found key 'spring.liveBeansView.mbeanDomain' in PropertySource 'systemProperties' with value of type String
24/12/23 18:11:53.119 | DEBUG | sale_service | 0 | CompositeLog.java: clientOutboundChannel removed SubProtocolWebSocketHandler[StompSubProtocolHandler[v10.stomp, v11.stomp, v12.stomp]]
24/12/23 18:11:53.120 | DEBUG | sale_service | 0 | CompositeLog.java: clientInboundChannel removed WebSocketAnnotationMethodMessageHandler[prefixes=[/app/]]
24/12/23 18:11:53.120 | INFO  | sale_service | 0 | CompositeLog.java: Stopping...
24/12/23 18:11:53.120 | INFO  | sale_service | 0 | CompositeLog.java: BrokerAvailabilityEvent[available=false, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
24/12/23 18:11:53.120 | DEBUG | sale_service | 0 | CompositeLog.java: clientInboundChannel removed SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]
24/12/23 18:11:53.120 | DEBUG | sale_service | 0 | CompositeLog.java: brokerChannel removed SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]
24/12/23 18:11:53.120 | INFO  | sale_service | 0 | CompositeLog.java: Stopped.
24/12/23 18:11:53.120 | DEBUG | sale_service | 0 | CompositeLog.java: clientInboundChannel removed UserDestinationMessageHandler[DefaultUserDestinationResolver[prefix=/user/]]
24/12/23 18:11:53.120 | DEBUG | sale_service | 0 | CompositeLog.java: brokerChannel removed UserDestinationMessageHandler[DefaultUserDestinationResolver[prefix=/user/]]
24/12/23 18:11:53.125 | INFO  | sale_service | 0 | AbstractConnector.java: Stopped ServerConnector@2c8b8de0{HTTP/1.1, (http/1.1)}{0.0.0.0:8080}
24/12/23 18:11:53.125 | INFO  | sale_service | 0 | HouseKeeper.java: node0 Stopped scavenging
24/12/23 18:11:53.126 | INFO  | sale_service | 0 | ContextHandler.java: Destroying Spring FrameworkServlet 'dispatcherServlet'
24/12/23 18:11:53.126 | INFO  | sale_service | 0 | ContextHandler.java: Stopped o.s.b.w.e.j.JettyEmbeddedWebAppContext@11cdf948{application,/,[file:///C:/Users/Admin/AppData/Local/Temp/jetty-docbase.8080.2448759081310665132/, jar:file:/C:/Users/Admin/.m2/repository/org/webjars/swagger-ui/4.17.1/swagger-ui-4.17.1.jar!/META-INF/resources, jar:file:/C:/Users/Admin/.m2/repository/org/webjars/jquery/3.6.1/jquery-3.6.1.jar!/META-INF/resources],STOPPED}
24/12/23 18:11:53.131 | INFO  | sale_service | 0 | ConsumerCoordinator.java: [Consumer clientId=consumer-bizfly-7-453-PaymentTransaction-1, groupId=bizfly-7-453-PaymentTransaction] Revoke previously assigned partitions bizfly-7-453-PaymentTransaction-0
24/12/23 18:11:53.131 | INFO  | sale_service | 0 | AbstractCoordinator.java: [Consumer clientId=consumer-bizfly-7-453-PaymentTransaction-3, groupId=bizfly-7-453-PaymentTransaction] Member consumer-bizfly-7-453-PaymentTransaction-3-7cf697b8-178b-40b5-94c7-fceafbe0d9e4 sending LeaveGroup request to coordinator 123.31.11.247:9094 (id: 2147483643 rack: null) due to the consumer unsubscribed from all topics
24/12/23 18:11:53.131 | INFO  | sale_service | 0 | AbstractCoordinator.java: [Consumer clientId=consumer-bizfly-7-453-PaymentTransaction-2, groupId=bizfly-7-453-PaymentTransaction] Member consumer-bizfly-7-453-PaymentTransaction-2-962a7f36-2637-4b5d-82e9-d99fd8125995 sending LeaveGroup request to coordinator 123.31.11.247:9094 (id: 2147483643 rack: null) due to the consumer unsubscribed from all topics
24/12/23 18:11:53.131 | INFO  | sale_service | 0 | LogAccessor.java: bizfly-7-453-PaymentTransaction: partitions revoked: [bizfly-7-453-PaymentTransaction-0]
24/12/23 18:11:53.131 | INFO  | sale_service | 0 | AbstractCoordinator.java: [Consumer clientId=consumer-bizfly-7-453-PaymentTransaction-1, groupId=bizfly-7-453-PaymentTransaction] Member consumer-bizfly-7-453-PaymentTransaction-1-8119e471-fd87-42e7-8de8-5aa69844c720 sending LeaveGroup request to coordinator 123.31.11.247:9094 (id: 2147483643 rack: null) due to the consumer unsubscribed from all topics
24/12/23 18:11:53.133 | INFO  | sale_service | 0 | AbstractCoordinator.java: [Consumer clientId=consumer-bizfly-7-453-PaymentTransaction-3, groupId=bizfly-7-453-PaymentTransaction] Resetting generation due to: consumer pro-actively leaving the group
24/12/23 18:11:53.133 | INFO  | sale_service | 0 | AbstractCoordinator.java: [Consumer clientId=consumer-bizfly-7-453-PaymentTransaction-1, groupId=bizfly-7-453-PaymentTransaction] Resetting generation due to: consumer pro-actively leaving the group
24/12/23 18:11:53.133 | INFO  | sale_service | 0 | AbstractCoordinator.java: [Consumer clientId=consumer-bizfly-7-453-PaymentTransaction-2, groupId=bizfly-7-453-PaymentTransaction] Resetting generation due to: consumer pro-actively leaving the group
24/12/23 18:11:53.133 | INFO  | sale_service | 0 | AbstractCoordinator.java: [Consumer clientId=consumer-bizfly-7-453-PaymentTransaction-3, groupId=bizfly-7-453-PaymentTransaction] Request joining group due to: consumer pro-actively leaving the group
24/12/23 18:11:53.133 | INFO  | sale_service | 0 | AbstractCoordinator.java: [Consumer clientId=consumer-bizfly-7-453-PaymentTransaction-2, groupId=bizfly-7-453-PaymentTransaction] Request joining group due to: consumer pro-actively leaving the group
24/12/23 18:11:53.133 | INFO  | sale_service | 0 | AbstractCoordinator.java: [Consumer clientId=consumer-bizfly-7-453-PaymentTransaction-1, groupId=bizfly-7-453-PaymentTransaction] Request joining group due to: consumer pro-actively leaving the group
24/12/23 18:11:53.133 | INFO  | sale_service | 0 | KafkaConsumer.java: [Consumer clientId=consumer-bizfly-7-453-PaymentTransaction-3, groupId=bizfly-7-453-PaymentTransaction] Unsubscribed all topics or patterns and assigned partitions
24/12/23 18:11:53.133 | INFO  | sale_service | 0 | KafkaConsumer.java: [Consumer clientId=consumer-bizfly-7-453-PaymentTransaction-2, groupId=bizfly-7-453-PaymentTransaction] Unsubscribed all topics or patterns and assigned partitions
24/12/23 18:11:53.133 | INFO  | sale_service | 0 | KafkaConsumer.java: [Consumer clientId=consumer-bizfly-7-453-PaymentTransaction-1, groupId=bizfly-7-453-PaymentTransaction] Unsubscribed all topics or patterns and assigned partitions
24/12/23 18:11:53.133 | INFO  | sale_service | 0 | AbstractCoordinator.java: [Consumer clientId=consumer-bizfly-7-453-PaymentTransaction-3, groupId=bizfly-7-453-PaymentTransaction] Resetting generation due to: consumer pro-actively leaving the group
24/12/23 18:11:53.133 | INFO  | sale_service | 0 | AbstractCoordinator.java: [Consumer clientId=consumer-bizfly-7-453-PaymentTransaction-2, groupId=bizfly-7-453-PaymentTransaction] Resetting generation due to: consumer pro-actively leaving the group
24/12/23 18:11:53.134 | INFO  | sale_service | 0 | AbstractCoordinator.java: [Consumer clientId=consumer-bizfly-7-453-PaymentTransaction-1, groupId=bizfly-7-453-PaymentTransaction] Resetting generation due to: consumer pro-actively leaving the group
24/12/23 18:11:53.134 | INFO  | sale_service | 0 | AbstractCoordinator.java: [Consumer clientId=consumer-bizfly-7-453-PaymentTransaction-3, groupId=bizfly-7-453-PaymentTransaction] Request joining group due to: consumer pro-actively leaving the group
24/12/23 18:11:53.134 | INFO  | sale_service | 0 | AbstractCoordinator.java: [Consumer clientId=consumer-bizfly-7-453-PaymentTransaction-1, groupId=bizfly-7-453-PaymentTransaction] Request joining group due to: consumer pro-actively leaving the group
24/12/23 18:11:53.134 | INFO  | sale_service | 0 | AbstractCoordinator.java: [Consumer clientId=consumer-bizfly-7-453-PaymentTransaction-2, groupId=bizfly-7-453-PaymentTransaction] Request joining group due to: consumer pro-actively leaving the group
24/12/23 18:11:53.150 | INFO  | sale_service | 0 | Metrics.java: Metrics scheduler closed
24/12/23 18:11:53.150 | INFO  | sale_service | 0 | Metrics.java: Metrics scheduler closed
24/12/23 18:11:53.150 | INFO  | sale_service | 0 | Metrics.java: Metrics scheduler closed
24/12/23 18:11:53.150 | INFO  | sale_service | 0 | Metrics.java: Closing reporter org.apache.kafka.common.metrics.JmxReporter
24/12/23 18:11:53.150 | INFO  | sale_service | 0 | Metrics.java: Closing reporter org.apache.kafka.common.metrics.JmxReporter
24/12/23 18:11:53.150 | INFO  | sale_service | 0 | Metrics.java: Metrics reporters closed
24/12/23 18:11:53.150 | INFO  | sale_service | 0 | Metrics.java: Closing reporter org.apache.kafka.common.metrics.JmxReporter
24/12/23 18:11:53.150 | INFO  | sale_service | 0 | Metrics.java: Metrics reporters closed
24/12/23 18:11:53.150 | INFO  | sale_service | 0 | Metrics.java: Metrics reporters closed
24/12/23 18:11:53.152 | INFO  | sale_service | 0 | AppInfoParser.java: App info kafka.consumer for consumer-bizfly-7-453-PaymentTransaction-3 unregistered
24/12/23 18:11:53.153 | INFO  | sale_service | 0 | LogAccessor.java: bizfly-7-453-PaymentTransaction: Consumer stopped
24/12/23 18:11:53.153 | INFO  | sale_service | 0 | AppInfoParser.java: App info kafka.consumer for consumer-bizfly-7-453-PaymentTransaction-2 unregistered
24/12/23 18:11:53.153 | INFO  | sale_service | 0 | LogAccessor.java: bizfly-7-453-PaymentTransaction: Consumer stopped
24/12/23 18:11:53.154 | INFO  | sale_service | 0 | AppInfoParser.java: App info kafka.consumer for consumer-bizfly-7-453-PaymentTransaction-1 unregistered
24/12/23 18:11:53.154 | INFO  | sale_service | 0 | LogAccessor.java: bizfly-7-453-PaymentTransaction: Consumer stopped
24/12/23 18:11:53.164 | INFO  | sale_service | 0 | KafkaProducer.java: [Producer clientId=producer-1] Closing the Kafka producer with timeoutMillis = 30000 ms.
24/12/23 18:11:53.166 | INFO  | sale_service | 0 | Metrics.java: Metrics scheduler closed
24/12/23 18:11:53.166 | INFO  | sale_service | 0 | Metrics.java: Closing reporter org.apache.kafka.common.metrics.JmxReporter
24/12/23 18:11:53.166 | INFO  | sale_service | 0 | Metrics.java: Metrics reporters closed
24/12/23 18:11:53.166 | INFO  | sale_service | 0 | AppInfoParser.java: App info kafka.producer for producer-1 unregistered
